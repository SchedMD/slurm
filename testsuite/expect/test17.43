#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test sbatch handling of very long lines in script
############################################################################
# Copyright (C) 2006-2007 The Regents of the University of California.
# Copyright (C) 2008 Lawrence Livermore National Security.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set user_name   ""
set file_in     "test$test_id.input"
set file_out    "test$test_id.output"
set exit_code   0

#
# Delete left-over stdin/out/err files
# Build stdin file
#
exec $bin_rm -f $file_in $file_out
make_bash_script $file_in "
#SBATCH --output=/dev/null
#SBATCH --comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--output=$file_out
echo 01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789
exit 0
"

#
# Spawn a sbatch command to verify that the default output file is
# created and contain the correct contents
#
set job_id 0
spawn $sbatch -t1 -N1 $file_in
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		log_error "sbatch not responding"
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if { $job_id == 0 } {
	fail "Failed to submit job"
}

#
# Wait for job to complete
#
if {[wait_for_job $job_id "DONE"] != 0} {
	log_error "Waiting for job to complete"
	set exit_code 1
}

#
# Check for desired output
#
if {[wait_for_file $file_out] != 0} {
	log_error "Waiting for output file"
	set exit_code 1
} else {
	set counter 0
	spawn $bin_cat $file_out
	expect {
		-re "0123456789" {
			incr counter
			exp_continue
		}
		eof {
			wait
		}
	}
	if {$counter != 150} {
		fail "Output file incomplete ($counter != 5)"
	}
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in $file_out
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
