#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test sbatch handling of very long lines in script
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2006-2007 The Regents of the University of California.
# Copyright (C) 2008 Lawrence Livermore National Security.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "17.43"
set user_name   ""
set file_in     "test$test_id.input"
set file_script "test$test_id.bash"
set file_out    "test$test_id.output"
set exit_code   0

print_header $test_id

#
# Delete left-over stdin/out/err files
# Build stdin file
#
exec $bin_rm -f $file_in $file_script $file_out
make_bash_script $file_in "
#SBATCH --output=/dev/null
#SBATCH --comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--comment=01234567890123456789012345678901234567890123456789 \
--output=$file_out
echo 01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789\
01234567890123456789012345678901234567890123456789
exit 0
"

set cwd "[$bin_pwd]"
make_bash_script $file_script "
  cd /tmp
  $sbatch -N1 --workdir=$cwd -t1 $cwd/$file_in
  exit 0
"

#
# Spawn a sbatch command to verify that the default output file is
# created and contain the correct contents
#
set job_id 0
spawn $sbatch -t1 -N1 $file_in
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sbatch not responding\n"
		set exit_code 1
		exp_continue
	}
	eof {
		wait
	}
}
if { $job_id == 0 } {
	send_user "\nFAILURE: failed to submit job\n"
	exit 1
}

#
# Wait for job to complete
#
if {[wait_for_job $job_id "DONE"] != 0} {
	send_user "\nFAILURE: waiting for job to complete\n"
	set exit_code 1
}

#
# Check for desired output
#
if {[wait_for_file $file_out] != 0} {
	send_user "\nFAILURE: waiting for output file\n"
	set exit_code 1
} else {
	set counter 0
	spawn $bin_cat $file_out
	expect {
		-re "0123456789" {
			incr counter
			exp_continue
		}
		eof {
			wait
		}
	}
	if {$counter != 150} {
		send_user "\nFAILURE: output file incomplete ($counter != 5)\n"
		set exit_code 1
	}
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in $file_script $file_out
	send_user "\nSUCCESS\n"
}
exit $exit_code
