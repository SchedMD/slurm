#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test of --licenses option
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "WARNING: ..." with an explanation of why the test can't be made, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2008-2009 Lawrence Livermore National Security.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "1.18"
set exit_code   0

print_header $test_id

#
# Run a job attempting to get some dummy license name
#
set match   0
set timeout $max_job_delay
set srun_pid [spawn $srun --licenses=DUMMY_FOR_TESTING $bin_printenv SLURMD_NODENAME]
expect {
	-re "Invalid license" {
		set match 1
		send_user "This error was expected, no worries\n\n"
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		slow_kill $srun_pid
		exit 1
	}
	eof {
		wait
	}
}
if {$match == 0} {
	send_user "\nFAILURE: No error on with bad license name\n"
	set exit_code 1
}

#
# Test if any licenses are configured.
#
log_user 0
set licenses ""
spawn $scontrol show config
expect {
	-re "Licenses *= ($alpha_numeric_under)" {
		set licenses $expect_out(1,string)
		exp_continue
	}
	eof {
		wait
	}
}
log_user 1

if {[string compare $licenses ""] != 0} {
	set srun_pid [spawn $srun --licenses=$licenses $bin_printenv SLURMD_NODENAME]
	expect {
		-re "invalid license" {
			send_user "\nFAILURE: Error getting license\n"
			set exit_code 1
			exp_continue
		}
		timeout {
			send_user "\nNOTE: srun not responding\n"
			send_user "  This test can fail if the selected "
			send_user "license is in use.\n"
			set exit_code 1
		}
		eof {
			wait
		}
	}
}

#
# Run a job attempting to get a legitimate license name
#

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code

