############################################################################
# Purpose: Test of SLURM functionality
#          to be called from test21.30
#          Tests if the MaxCPUsPU limit is enforced
############################################################################
# Copyright (C) 2013 SchedMD LLC
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################

proc inc21_30_15 { } {
	global salloc srun exit_code bin_sleep number maxcpuspu_num acct

	send_user "\nStarting MaxCPUsPerUser test (Within: inc21.30.15)\n"

	set job_id1 0
	set job_id2 0

	spawn $salloc --account=$acct -t1 -n$maxcpuspu_num $srun $bin_sleep 20
	expect {
		-re "Granted job allocation ($number)" {
			set job_id1 $expect_out(1,string)
			send_user "\nJob $job_id1 has been submitted (Within: inc21.30.15)\n"
		}
		-re "job ($number) queued and waiting for resources" {
			set job_id1 $expect_out(1,string)
			send_user "\nFAILURE: Job $job_id1 show not be waiting for resources, but is (Within: inc21.30.15)\n"
			set exit_code 1
		}
		-re "error" {
			send_user "\nFAILURE: Job allocation shoudl not have failed. (Within: inc21.30.15)\n"
			set exit_code 1
		}
		timeout {
			send_user "\nFAILURE: salloc is not responding (Within: 21.30.15)\n"
			set exit_code 1
		}
		eof {
			wait
		}
	}

	if { $job_id1 == 0 } {
		send_user "\nFAILUIRE: Job was not submitted (Within: inc21.30.15)\n"
		set exit_code 1
	}

	spawn $salloc --account=$acct -t1 -n$maxcpuspu_num $srun $bin_sleep 20
	expect {
		-re "job ($number) queued and waiting for resources" {
			set job_id2 $expect_out(1,string)
			send_user "\nJob $job_id2 is waiting for resource. This is expected do not worry (Within: inc21.30.15)\n"
		}
		-re "Granted job allocation ($number)" {
			set job_id2 $expect_out(1,string)
			send_user "\nFAILURE: Job $job_id2 should be pending for resources, but is not (Within: 21.30.15)\n"
			set exit_code 1
		}
		timeout {
			send_user "\nFAILURE: salloc is not responding (Within: inc21.30.15)\n"
			set exit_code 1
		}
		eof {
			wait
		}
	}

	if { $job_id2 == 0 } {
		send_user "\nFAILURE: Job was not submitted (Within: inc21.30.15)\n"
		set exit_code 1
	}

	# Cancel Jobs
	cancel_job $job_id1
	cancel_job $job_id2
}
