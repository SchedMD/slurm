#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test if we can trick Slurm into using the wrong user ID
#          through an LD_PRELOAD option.
############################################################################
# Copyright (C) 2007 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code            0
set ld_preload           "ld_preload"

if {[test_super_user] == 1} {
	skip "This test can't be run as SlurmUser"
}

#
# Build a shared object that emulates getuid/getgid functions
#
exec $bin_rm -f ${ld_preload}.c ${ld_preload}.lo ${ld_preload}.so
exec $bin_echo "#define ID 0"                      >${ld_preload}.c
exec $bin_echo "int getuid(void)  { return ID; }" >>${ld_preload}.c
exec $bin_echo "int geteuid(void) { return ID; }" >>${ld_preload}.c
exec $bin_echo "int getgid(void)  { return ID; }" >>${ld_preload}.c
exec $bin_echo "int getegid(void) { return ID; }" >>${ld_preload}.c
exec $bin_cc -c -fPIC -o ${ld_preload}.lo ${ld_preload}.c
exec $bin_cc -shared -o ${ld_preload}.so ${ld_preload}.lo

global env
set env(LD_PRELOAD) ./${ld_preload}.so

#
# Submit a slurm job that will execute 'id'
#
set timeout $max_job_delay
set srun_pid [spawn $srun -N1 -t1 $bin_id]
expect {
	-re "(uid=.*\n)" {
		log_error "srun ran with bogus getuid functions. Make sure you are not running with auth/none to ensure security"
		set exit_code 1
		exp_continue
	}
	-re "error" {
		log_debug "No worries, this error is expected"
		exp_continue
	}
	timeout {
		log_error "srun not responding"
		slow_kill $srun_pid
		set exit_code 1
	}
	eof {
		wait
	}
}

if {$exit_code == 0} {
	exec $bin_rm -f ${ld_preload}.c ${ld_preload}.lo ${ld_preload}.so
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
