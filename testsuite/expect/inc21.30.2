# Purpose: Test of SLURM functionality
#          to be called from test21.30
#          Tests if the GrpCpus limit is enforced
#
#
############################################################################
# Copyright (C) 2012 SchedMD LLC
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################

proc inc21_30_2 {} {

#test GrpCpus

     global srun salloc acct bin_sleep jobmatch job_id1 job_id2 number exit_code
     global grcpu_num

     send_user "\nStarting GrpCPUs limit test\n\n"
     set jobmatch 0
     spawn $salloc --account=$acct -n$grcpu_num $srun $bin_sleep 5
     expect {
	     -re "Granted job allocation ($number)" {
		     set job_id1 $expect_out(1,string)
		     send_user "\njob $job_id1 has been submitted\n"
		     incr jobmatch
	     }
	     timeout {
		     send_user "\nFAILURE: salloc is not reponding\n"
		     set exit_code 1
	     }
	     eof {
		     wait
	     }
     }

     spawn $salloc --account=$acct -n1 $srun $bin_sleep 5
     expect {
	     -re "job ($number)" {
		     set job_id2 $expect_out(1,string)
		     send_user "\njob $job_id2 is waiting for resources. This is expected\n"
		     incr jobmatch
	     }
	     timeout {
		     send_user "\nFAILURE: salloc is not reponding\n"
		     set exit_code 1
	     }
	     eof {
		     wait
	     }
     }

     if {$jobmatch==0} {
	     send_user "\nFAILURE: jobs were not submitted\n"
	     set exit_code 1
     }

     # checks the state of the job
     check_state $job_id2

     # cancels remaining jobs
     cancel_job $job_id1
     cancel_job $job_id2

}
