#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test of sbatch --wait option.
############################################################################
# Copyright (C) 2015 SchedMD LLC
# Written by Morris Jete <jette@schedmd.com>
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code   0
set file_in     "test$test_id.in"
set job_id      0

#
# Submit simple "sleep" batch job with --wait option
#
make_bash_script $file_in "$bin_sleep 14"
set timeout [expr $max_job_delay + 14]
spawn $sbatch -t1 -N1 --wait -o/dev/null $file_in
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		log_error "sbatch is not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	fail "sbatch did not submit job"
}

#
# Make sure job is COMPLETED when sbatch returns
#
set match 0
spawn $squeue -tall -j $job_id --Format=state
expect {
	-re "COMPLETED" {
		incr match
		exp_continue
	}
	timeout {
		log_error "squeue is not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$match != 1} {
	fail "Job not in state COMPLETED. Could be due to small configured MinJobAge value"
}

if {$exit_code == 0} {
	exec rm -f $file_in
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
