#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          to be called from test21.30
#          Tests if the GrpMem limit is enforced
############################################################################
# Copyright (C) 2013 SchedMD LLC
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################

proc inc21_30_11 { wait_reason } {

	global salloc srun acct bin_sleep grpmem_num number exit_code
	global test_select_type_params

	if {![test_select_type_params "MEMORY"]} {
		log_warn "Memory management not configured (Within: inc21.30.11)"
		return
	}

	log_info "Starting GrpMem test (Within: inc21.30.11)"
	set job_id1 0
	set job_id2 0

	spawn $salloc --account=$acct -N1 --mem=$grpmem_num -t1 $srun $bin_sleep 10
	expect {
		-re "Granted job allocation ($number)" {
			set job_id1 $expect_out(1,string)
			log_debug "Job $job_id1 has been submitted (Within: inc21.30.11)"
		}
		-re "Pending job allocation ($number)" {
			set job_id1 $expect_out(1,string)
			log_error "Job should have run but did not. (Within: inc21.30.11)"
			set exit_code 1
		}
		-re "error" {
			log_error "Job allocation should not have failed. (Within: inc21.30.11)"
			set exit_code 1
		}
		timeout {
			log_error "salloc not responding. (Within: inc21.30.11)"
			set exit_code 1
		}
		eof {
			wait
		}
	}

	spawn $salloc --account=$acct -N1 --mem=$grpmem_num -t1 $srun $bin_sleep 10
	expect  {
		-re "Pending job allocation ($number)" {
			set job_id2 $expect_out(1,string)
			log_debug "Job $job_id2 is waiting for resources. This is expected. (Within: inc21.30.11)"
		}
		-re "Granted job allocation ($number)" {
			log_error "Job should have pended, but did not. (Within: inc21.30.11)"
			set exit_code 1
		}
		timeout {
			log_error "salloc not responding. (Within: inc21.30.11)"
			set exit_code 1
		}
		eof {
			wait
		}
	}

	if {![check_reason $job_id2 $wait_reason]} {
		log_error "Bad job wait reason. (Within: inc21.30.11)"
		set exit_code 1
	}

	# Cancel both jobs
	cancel_job $job_id1
	cancel_job $job_id2
}
