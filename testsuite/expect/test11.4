#!/usr/bin/expect
############################################################################
# Purpose: Test of POE functionality
#          Test of running mpi jobs
#
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
############################################################################
# Copyright (C) 2002 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Danny Auble <da@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "11.4"
set exit_code   0
set job_ran     0
set job_count   5
set script      "mpi-testscripts/script.slurm.sh"
print_header $test_id

if { ![test_launch_poe] } {
	send_user "\nWARNING: This test is only compatable with launch/poe systems\n"
	exit $exit_code
}
if { ![file exists mpi-testscripts/allred] } {
	send_user "ERROR: You must run a make in the mpi-testscripts directory to run this test.\n"
	exit 1
}

if { [string length $partition] == 0 } {
	set partition [default_partition]
}

#
# execute salloc with a script containing a collection of MPI programs
#
set timeout 120
spawn $salloc -t2 -N2 -n2 --network=us ./$script
expect {
	-nocase "passed" {
		incr job_ran
		exp_continue
	}
	-nocase "acceptable" {
		incr job_ran
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: salloc/poe not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}

if { $job_ran != $job_count } {
	send_user "\nFAILURE: not all jobs worked\n"
	set exit_code 1
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
