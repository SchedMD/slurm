#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Validates that strigger will not submit duplicate triggers
############################################################################
# Copyright (C) 2014 SchedMD LLC
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set trigger_file_in   "test$test_id\_trig_in"
set trigger_file_out  "test$test_id\_trig_out"
set cwd               "[$bin_pwd]"
set permission        0
set exit_code         0

#
# get my uid and clear any vestigial triggers
#
set uid [stop_root_user]

exec $strigger --clear --quiet --user=$uid

#
# Build input files
#
exec $bin_rm -f $trigger_file_out $trigger_file_in
make_bash_script $trigger_file_in " $bin_echo Strigger has been triggered >$cwd/$trigger_file_out"

set match 0
spawn $strigger --set -v --down --program=$cwd/$trigger_file_in
expect {
	-re "permission denied" {
		set permission 1
		exp_continue
	}
	-re "trigger set" {
		incr match 1
		exp_continue
	}
	timeout {
		log_error "strigger is not responding\b"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$permission == 1} {
	exec $bin_rm -f $trigger_file_in
	skip "Current configuration prevents setting triggers. Need to run as SlurmUser or make SlurmUser=root"
}
if {$match != 1} {
	log_error "Trigger was not set"
	set exit_code 1
}

set match 0
spawn $strigger --set -v --down --program=$cwd/$trigger_file_in
expect {
	-re "Duplicate event trigger" {
		log_debug "This error is expected"
		set match 1
		exp_continue
	}
	timeout {
		log_error "strigger is not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$match != 1} {
	log_error "Trigger should not have been set but was"
	set exit_code 1
}

set match 0
spawn $strigger --clear -v --user=$uid
expect {
	timeout {
		log_error "strigger is not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}

if {$exit_code == 0} {
	exec $bin_rm -f $trigger_file_out $trigger_file_in
} else {
	fail "Test failed due to previous errors"
}
