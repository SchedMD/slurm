#!/usr/bin/expect
############################################################################
# Purpose: Test of POE functionality
#          Test of nodes options (-nodes).
#          Test of procs options (-procs).
#
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Danny Auble <da@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "11.1"
set exit_code   0
set num_nodes   1
set num_tasks   3
set node_count  0
set task_count  0

print_header $test_id

if { ![test_launch_poe] } {
	send_user "\nWARNING: This test is only compatable with launch/poe systems\n"
	exit $exit_code
}

#
# execute poe with a specific node and task count
#
if { [string length $partition] == 0 } {
	set partition [default_partition]
}
spawn $poe hostname -labelio yes -rmpool $partition -procs $num_tasks -nodes $num_nodes
expect {
	-re "($number)-($number): *($alpha_numeric_under)" {
		incr node_count
		set  task_count [ expr $task_count + $expect_out(2,string) - $expect_out(1,string) + 1 ]
		exp_continue
	}
	-re "($number): *($alpha_numeric_under)" {
		incr node_count
		incr task_count
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: poe not responding\n"
		cancel_job $job_id
		set exit_code 1
	}
	eof {
		wait
	}
}


if {$node_count != $num_nodes} {
	send_user "\nFAILURE: Did not get proper node count ($node_count != $num_nodes)\n"
	set exit_code 1
}
if {$task_count != $num_tasks} {
	send_user "\nFAILURE: Did not get proper proc count ($task_count != $num_tasks)\n"
	set exit_code 1
}
if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
