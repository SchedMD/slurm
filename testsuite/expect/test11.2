#!/usr/bin/expect
############################################################################
# Purpose: Test of POE functionality
#          Test of Network options being set correctly.
#          (-euilib and -euidevice)
#
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
#
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Danny Auble <da@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "11.2"
set exit_code   0

print_header $test_id

if { ![test_launch_poe] } {
	send_user "\nWARNING: This test is only compatable with launch/poe systems\n"
	exit $exit_code
}

if { [string length $partition] == 0 } {
	set partition [default_partition]
}

#
# Try running with an invalid device name
#
set found_device 0
set got_output   0
spawn $poe hostname -labelio yes -rmpool $partition -euidevice BAD_DEV_NAME
expect {
	-re "($number): *($alpha_numeric_under)" {
		set got_output 1
		exp_continue
	}
	-re "Error configuring interconnect" {
		send_user "\nThis error is expected, not a problem\n"
		set found_device 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: poe not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if { $found_device != 1 || $got_output != 0 } {
	send_user "\nFAILURE: euidevice was not set correctly\n"
	set exit_code 1
}

#
# Try running in user space
#
set got_output   0
spawn $poe printenv MP_EUILIB -labelio yes -rmpool $partition -euilib us
expect {
	-re "($number): *us" {
		set got_output 1
		exp_continue
	}
	-re "Error configuring interconnect" {
		send_user "\nFAILURE: Unable to run in user space\n"
		set exit_code 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: poe not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if { $got_output != 1 } {
	send_user "\nFAILURE: euilib was not set correctly\n"
	set exit_code 1
}

#
# Try running in IP mode over device eth0
#
set got_output   0
spawn $poe printenv MP_EUIDEVICE -labelio yes -rmpool $partition -euilib ip -euidevice eth0
expect {
	# Might return "ethernet" or "eth0" on various systems
	-re "($number): *eth" {
		set got_output 1
		exp_continue
	}
	-re "Error configuring interconnect" {
		send_user "\nFAILURE: Unable to run in user space\n"
		set exit_code 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: poe not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if { $got_output != 1 } {
	send_user "\nFAILURE: euilib or euidevice was not set correctly\n"
	set exit_code 1
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
