#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test of --overcommit option.
############################################################################
# Copyright (C) 2002-2007 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code   0
set file_in     "test$test_id.input"
set file_out    "test$test_id.output"
set job_id      0

#
# Submit a slurm job that will print slurm env vars and execute 'id'
#
file delete $file_in $file_out
make_bash_script $file_in "
  $bin_env | grep SLURM | $bin_sort
  $srun $bin_id"

#
# Submit a slurm job that will execute 'id' on 1 node and over task_cnt tasks
#
set task_cnt 10
spawn $sbatch --ntasks=$task_cnt --overcommit -N1 --output=$file_out -t1 $file_in
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	-re "Batch job submission failed" {
		log_debug "No worries, error not unexpected"
		set no_run 1
		exp_continue
	}
	timeout {
		log_error "sbatch not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}

#
# Wait for job to complete
#
if {[wait_for_job $job_id "DONE"] != 0} {
	log_error "Waiting for job to complete"
	cancel_job $job_id
	set exit_code 1
}

set matches     0
set tasks       0
if {[wait_for_file $file_out] == 0} {
	spawn $bin_cat $file_out
	expect {
		-re "SLURM_NPROCS=$task_cnt" {
			incr matches
			exp_continue
		}
		-re "SLURM_OVERCOMMIT=1" {
			incr matches
			exp_continue
		}
		-re "uid=" {
			incr tasks
			exp_continue
		}
		eof {
			wait
		}
	}
}
if {$matches != 2} {
	fail "Did not set desired allocation env vars: ($matches != 2)"
}
if {$tasks != $task_cnt} {
	fail "Did not get proper number of tasks: ($tasks != $task_cnt)"
}

if {$exit_code == 0} {
	file delete $file_in $file_out
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
