#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Validate scontrol reconfigure command.
############################################################################
# Copyright (C) 2002 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code   0
set file_in     "test$test_id.input"

#
# This test must be run as a Slurm administrator, root, or SlurmUser in order to
# issue scontrol reconfigure.
#
if {(![is_super_user]) && ([check_accounting_admin_level] != "Administrator")} {
	skip "This test can't be run except as SlurmUser or Admin"
}

#
# Have a job running when the reconfigure happens
#
make_bash_script $file_in "
  $srun $bin_sleep 60
"
set job_id 0
set sbatch_pid [spawn $sbatch -N1 --output=/dev/null -t2 $file_in]
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		log_error "sbatch not responding"
		catch {exec $bin_kill -KILL $sbatch_pid}
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	fail "sbatch job submit failed"
}
if {[wait_for_job $job_id RUNNING] != 0} {
	cancel_job $job_id
	fail "Waiting for job $job_id to start"
}

#
# Issue scontrol reconfigure
#
reconfigure

if {[wait_for_job $job_id RUNNING] != 0} {
	fail "Job $job_id not running after reconfiguration"
}
cancel_job $job_id

if {$exit_code == 0} {
	exec $bin_rm -f $file_in
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
