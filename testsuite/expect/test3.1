#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Validate scontrol reconfigure command.
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "3.1"
set exit_code   0
set file_in     "test$test_id.input"

print_header $test_id

#
# Have a job running when the reconfigure happens
#
make_bash_script $file_in "
  $srun $bin_sleep 60
"
set job_id 0
set sbatch_pid [spawn $sbatch -N1 --output=/dev/null -t2 $file_in]
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sbatch not responding\n"
		catch {exec $bin_kill -KILL $sbatch_pid}
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	send_user "\nFAILURE: sbatch job submit failed\n"
	exit 1
}
if {[wait_for_job $job_id RUNNING] != 0} {
	send_user "\nFAILURE: waiting for job $job_id to start\n"
	cancel_job $job_id
	exit 1
}

#
# Issue scontrol reconfigure
#
spawn $scontrol reconfigure
expect {
	-re "slurm_reconfigure error: Invalid user id" {
		exp_continue
	}
	-re "slurm_reconfigure error:" {
		send_user "\nFAILURE: scontrol reconfigure error\n"
		set exit_code 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: scontrol not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {[wait_for_job $job_id RUNNING] != 0} {
	send_user "\nFAILURE: job $job_id not running after reconfiguration\n"
	set exit_code 1
}
cancel_job $job_id

if {$exit_code == 0} {
	exec $bin_rm -f $file_in
	send_user "\nSUCCESS\n"
}
exit $exit_code
