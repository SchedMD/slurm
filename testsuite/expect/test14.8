#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test sbcast transmission buffer options (--size and
#          --fanout options).
#
# Note:    This script generates and then deletes files in the working directory
#          named test14.8.input and test14.8.output
############################################################################
# Copyright (C) 2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set file_in     "$test_dir/input"
set file_out    "$test_dir/output"
set job_id      0

if {[get_config_param "SlurmdUser"] ne "root(0)"} {
	skip "This test is incompatible with SlurmdUser != root"
}

proc cleanup {} {
	global job_id

	cancel_job $job_id
}

#
# Build input script file that broadcasts a file
#
set pid   [pid]
set file1 "/tmp/test.$pid.1.$test_id"
set file2 "/tmp/test.$pid.2.$test_id"
make_bash_script $file_in "
  $srun $bin_rm -f $file1
  $sbcast $sbcast --fanout=2 $file1
  $srun $bin_diff $sbcast $file1
  $srun $bin_rm -f $file1

  $srun $bin_rm -f $file2
  $sbcast $sbcast --size=16k  $file2
  $srun $bin_diff $sbcast $file2
  $srun $bin_rm -f $file2
"

#
# Spawn an sbatch job that uses stdout and confirm its contents
#
set timeout $max_job_delay
if {[get_config_param "MULTIPLE_SLURMD"] eq "yes"} {
	subskip "This test is partially compatible with multiple slurmd systems"
	set job_id [submit_job -fail "-N1 --output=$file_out -t4 $file_in"]
} else {
	set job_id [submit_job -fail "-N1-4 --output=$file_out -t4 $file_in"]
}

#
# Wait for job to complete and check output file
#
wait_for_job -fail $job_id "DONE"

wait_for_file -fail $file_out

set output [run_command_output -fail "$bin_cat $file_out"]
subtest {![regexp "differ" $output]} "Verify that sbcast transmits the correct data"
subtest {![regexp "no such" $output]} "Verify that sbcast does not transmit an empty file"
subtest {![regexp "error" $output]} "Verify that not error is printed"
