#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test of srun/aprun wrapper use of --alps= option
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002-2007 The Regents of the University of California.
# Copyright (C) 2008 Lawrence Livermore National Security.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "26.2"
set exit_code   0
set file_in     "test$test_id.input"
set sleep_time  120

# NOTE: If you increase sleep_time, change job time limits as well
set sleep_time  180

print_header $test_id

if {![test_alps]} {
        send_user "\nWARNING: This test is only compatible with Cray ALPS systems\n"
        exit $exit_code
}

set is_aprun_wrapper 0
log_user 0
spawn $srun --help
expect {
	-re "--alps" {
		set is_aprun_wrapper 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
log_user 1
if {$is_aprun_wrapper == 0} {
	send_user "\nWARNING: srun/aprun wrapper not installed\n"
	exit 0
}

#
# Try to impose a job step time limit via ALPS using 
# srun wrapper's --alps option
#
make_bash_script $file_in "$bin_sleep $sleep_time; echo FINI"
set timeout [expr $max_job_delay + $sleep_time]
spawn $salloc -t4 $srun --alps=\"-t 1\" $file_in
expect {
	-re "FINI" {
		send_user "\nFAILURE: srun --alps option ignored\n"
		set exit_code 1
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		set exit_code 1
	}
	eof {
		wait
		incr completions
	}
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in
	send_user "\nSUCCESS\n"
}
exit $exit_code
