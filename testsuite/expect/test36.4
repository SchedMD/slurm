#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          bsub wrapper test
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2016 SchedMD LLC
# Written by Alejandro Sanchez <alex@schedmd.com>
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################

source ./globals

set test_id     "36.4"
set exit_code   0
set file_err	"test$test_id.error"
set file_in	"test$test_id.input"
set file_out	"test$test_id.output"

print_header $test_id

if {[file executable $bsub] == 0} {
	send_user "\nWARNING: $bsub not found\n"
	exit 0
}

if {[file executable $bkill] == 0} {
	send_user "\nWARNING: $bkill not found\n"
	exit 0
}

set job_id 0
exec rm -f $file_out $file_err
make_bash_script $file_in "$bin_echo HELLO; $bin_cat /dummy_file"
spawn $bsub -W 01:00 -e $file_err -o $file_out ./$file_in
expect {
	-re "($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: bsub not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	send_user "\nFAILURE: bsub failed to submit job\n"
	exit 1
}

if {[wait_for_file $file_out] != 0} {
	send_user "\nFAILURE: bsub output file not found\n"
	catch {exec $bkill $job_id}
	exit 1
}
set matches 0
spawn $bin_cat $file_out
expect {
	-re "HELLO" {
		incr matches
		exp_continue
	}
	eof {
		wait
	}
}
if {$matches != 1} {
	send_user "\nFAILURE: unexpected bsub output file contents\n"
	set exit_code 1
}

if {[wait_for_file $file_err] != 0} {
	send_user "\nFAILURE: bsub error file not found\n"
	catch {exec $qdel $job_id}
	exit 1
}
set matches 0
spawn $bin_cat $file_err
expect {
	-re "No such file" {
		send_user "message from cat expected, no worries.\n"
		incr matches
		exp_continue
	}
	eof {
		wait
	}
}
if {$matches != 1} {
	send_user "\nFAILURE: unexpected bsub error file contents\n"
	set exit_code 1
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in $file_out $file_err
	send_user "\nSUCCESS\n"
}
exit $exit_code
