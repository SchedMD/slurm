#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Verify the appropriate job environment variables are set
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code   0
set file_in     "test$test_id.input"
set file_out    "test$test_id.output"
set matches     0

# These are the variables for which we are checking existence.
# If the number following a variable name is 1, then we check to make
# certain that the value of the env variable is greater than 0
array set good_vars {
	    SLURM_JOB_ID 1
	    SLURM_JOB_NUM_NODES 1
	    SLURM_JOB_NODELIST 0
	    SLURM_JOB_CPUS_PER_NODE 0
	    SLURM_JOBID 1
	    SLURM_LOCALID 0
	    SLURM_NNODES 1
	    SLURM_NODEID 0
	    SLURM_NODELIST 0
	    SLURM_NPROCS 1
	    SLURM_PROCID 0
	    SLURM_TASKS_PER_NODE 1
	    SLURM_TASK_PID 1
}

#
# Delete left-over input script
# Build input script file
#
exec $bin_rm -f $file_in $file_out
make_bash_script $file_in "$bin_env"

#
# Spawn a job via sbatch to print environment variables
#
set job_id 0
spawn $sbatch -N1 -n1 -t1 --output=$file_out $file_in
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		log_error "sbatch not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}
if { $job_id == 0 } {
	fail "Failed to submit job"
}

#
# Wait for job to complete
#
if {[wait_for_job $job_id "DONE"] != 0} {
	log_error "Waiting for job to complete"
	cancel_job $job_id
	set exit_code 1
}

#
# Check for desired output
#
if {[wait_for_file $file_out] != 0} {
	fail "Output file $file_out is missing"
}

spawn $bin_cat $file_out
expect {
	-re "(SLURM_$re_word_str)=($re_word_str)" {
		set found_vars($expect_out(1,string)) "$expect_out(2,string)"
		exp_continue
	}
	eof {
		wait
	}
}

set total 0
set good 0
foreach {slurm_var check_flag} [array get good_vars] {
    incr total
    if {[info exists found_vars($slurm_var)]} {
		if { $check_flag == 1 && $found_vars($slurm_var) <= 0 } {
			log_error "Found $slurm_var, but $found_vars($slurm_var) <= 0"
		} else {
	    	incr good
		}
    } else {
		fail "Variable $slurm_var not found"
    }
}

if {$good < $total} {
	fail "Only $good of $total Slurm environment variables set"
}

if {$exit_code == 0} {
	file delete $file_in $file_out
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
