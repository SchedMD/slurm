#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test of --input option.
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id          "17.26"
set exit_code        0
set file_in          "test$test_id.input"
set file_out         "test$test_id.output"
set file_script      "test$test_id.sh"
set job_id           0
set timeout          $max_job_delay

print_header $test_id

#
# Build input script file
#
exec $bin_rm -f $file_in $file_out $file_script
set fd [open $file_in "w"]
puts $fd "hello"
close $fd
make_bash_script $file_script "$bin_cat"

#
# Spawn a job via sbatch using these environment variables
#
set matches 0
spawn $sbatch -N1 --input=$file_in --output=$file_out $file_script
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sbatch not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {[wait_for_job $job_id "DONE"] != 0} {
	send_user "\nFAILURE: job did not complete\n"
	set exit_code 1
}
if {[wait_for_file $file_out] == 0} {
	spawn $bin_cat $file_out
	expect {
		-re "hello" {
			incr matches
			exp_continue
		}
		eof {
			wait
		}
	}
}
if {$matches != 1} {
	send_user "\nFAILURE: sbatch failed to process --input\n"
	set exit_code 1
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in $file_out $file_script
	send_user "\nSUCCESS\n"
}
exit $exit_code
