#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test of running non-existent job, confirm timely termination.
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code            0

if {[test_front_end] != 0 && [test_super_user] == 0} {
	skip "This test is incompatible with front-end systems"
}

#
# Submit a slurm job that will execute bogus job name
#
set job_id  0
set matches 0
set timeout $max_job_delay
set salloc_pid [spawn $salloc -N1 -t1 /bad/bad/bad]
expect {
	-re "Granted job allocation ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	-re "Unable to exec command|Unable to find command" {
		log_debug "No worries, this error is expected"
		set matches 1
		exp_continue
	}
	timeout {
		log_error "salloc not responding"
		if {$job_id != 0} {
			cancel_job $job_id
		}
		slow_kill [expr 0 - $salloc_pid]
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$matches != 1} {
	fail "Unexpected output from bad job name"
}

if {$exit_code != 0} {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
