#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test for jobs that ran on a node at a certain time from
#          configuration set up in test22.1.
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2008 Lawrence Livermore National Security.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Danny Auble <da@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# Portions Copyright (C) 2012 SchedMD LLC
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################

proc inc22_1_4 {} {


	global sacct job1_acct job2_acct job3_acct job1_start_str
	global job1_end_str job2_start_str job2_end_str job3_start_str
	global exit_code job3_end_str start_str end_str cluster1 cluster2
	global sql_rem_clus1 sql_rem_clus2 users accounts
	global test_job1 test_job2 test_job3

	#since there are 2 test clusters we will just use one
	set cluster $cluster1

	#Test for job 1
	send_user "\nSearch for job1 on cluster $cluster (Within: inc21.1.4)\n"
	set usermatch 0
	spawn $sacct -p -C $cluster --state=completed --start=$job1_start_str --end=$job1_end_str --format=jobname
	expect {
		-re "$test_job1." {
			incr usermatch
			exp_continue
		}
		timeout {
			send_user "\nFAILURE: sacct not responding (Within: inc21.1.4)\n"
			set exit_code 1
		}
		eof {
			wait
		}
		if {$usermatch !=1} {
			send_user"\nFAILURE: sacct did not work (Within: inc21.1.4)\n"
			set exit_code 1
		}
	}
	# Job1 is submitted twice
	if {$usermatch != 2} {
		send_user "\nFAILURE:  sacct didn't give good info 25 $usermatch.\n"
		incr exit_code 1
	}

	if { $exit_code } {
		incr exit_code [archive_load $sql_rem_clus1]
		incr exit_code [archive_load $sql_rem_clus2]
		remove_user "" "" $users
		remove_acct "" $accounts
		remove_cluster "$cluster1"
		remove_cluster "$cluster2"
		exit $exit_code
	}

	# Test for job2
	send_user "\nSearch for job2 on cluster $cluster (Within: inc21.1.4)\n"
	set usermatch 0
	spawn $sacct -p -C $cluster --state=completed --start=$job2_start_str --end=$job2_end_str --format=jobname
	expect {
		-re "$test_job2." {
			incr usermatch
			exp_continue
		}
		timeout {
			send_user "\nFAILURE: sacct not responding (Within: inc21.1.4)\n"
			set exit_code 1
		}
		eof {
			wait
		}
		if {$usermatch !=1} {
			send_user"\nFAILURE: sacct did not work (Within: inc21.1.4)\n"
			set exit_code 1
		}
	}
	if {$usermatch != 1} {
		send_user "\nFAILURE:  sacct didn't give good info 25 $usermatch.\n"
		incr exit_code 1
	}

	if { $exit_code } {
		incr exit_code [archive_load $sql_rem_clus1]
		incr exit_code [archive_load $sql_rem_clus2]
		remove_user "" "" $users
		remove_acct "" $accounts
		remove_cluster "$cluster1"
		remove_cluster "$cluster2"
		exit $exit_code
	}

	# Test for job3
	send_user "\nSearch for job3 on cluster $cluster (Within: inc21.1.4)\n"
	set usermatch 0
	spawn $sacct -p -C $cluster --state=completed --start=$job3_start_str --end=$job3_end_str --format=jobname
	expect {
		-re "$test_job3." {
			incr usermatch
			exp_continue
		}
		timeout {
			send_user "sacct not responding (Within: inc21.1.4)"
			exit_code 1
		}
		eof {
			wait
		}
		if {$usermatch !=1} {
			send_user "\nFAILURE: sacct did not work (Within: inc21.1.4)\n"
			set exit_code 1
		}
	}

	if {$usermatch != 1} {
		send_user "\nFAILURE:  sacct didn't give good info 25 $usermatch.\n"
		incr exit_code 1
	}

	if { $exit_code } {
		incr exit_code [archive_load $sql_rem_clus1]
		incr exit_code [archive_load $sql_rem_clus2]
		remove_user "" "" $users
		remove_acct "" $accounts
		remove_cluster "$cluster1"
		remove_cluster "$cluster2"
		exit $exit_code
	}
}
