#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          bjobs wrapper test
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2011-2016 SchedMD LLC
# Written by Alejandro Sanchez <alex@schedmd.com>
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "36.2"
set file_in     "test$test_id.input"
set job_id      0
set exit_code   0

print_header $test_id

if {[file executable $sbatch] == 0} {
	send_user "\nWARNING: $sbatch does not exist\n"
	exit 0
}

if {[file executable $bjobs] == 0} {
	send_user "\nWARNING: $bjobs does not exist\n"
	exit 0
}

spawn $bjobs
expect {
	-re "No unfinished job found" {
		exp_continue
	}
	-re "Problem loading jobs" {
		send_user "\nFAILURE: problem loading jobs.\n"
		exit 1
	}
	timeout {
		send_user "\nFAILURE: bjobs not responding\n"
		exit 1
	}
	eof {
		wait
	}
}


#
# Submit a slurm job
#
exec $bin_rm -f $file_in
make_bash_script $file_in "
  $bin_sleep 10
"

spawn $sbatch -N1 -o /dev/null -t1 $file_in
expect {
        -re "Submitted batch job ($number)" {
                set job_id $expect_out(1,string)
                exp_continue
        }
        timeout {
                send_user "\nFAILURE: sbatch not responding\n"
                set exit_code 1
                exp_continue
        }
        eof {
                wait
        }
}
if { $job_id == 0 } {
        send_user "\nFAILURE: failed to submit job\n"
        exit 1
}

#
# Test bjobs <jobid> wrapper
#
set job_found 0
spawn $bjobs $job_id
expect {
	-re "$job_id" {
		set job_found 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: bjobs not responding\n"
		slow_kill $sbatch_pid
		exit 1
	}
	eof {
		wait
	}
}

cancel_job $job_id
if {$exit_code == 0} {
	if {$job_found == 1} {
		send_user "\nSUCCESS\n"
	} else {
		send_user "\nFAILURE: bjobs $job_id does not work\n"
		exit 1
	}
}

exit $exit_code
