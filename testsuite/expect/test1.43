#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test of slurm_job_will_run API, (srun --test-only option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2005 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "1.43"
set exit_code   0
set jobs_run    0

print_header $test_id

if {[test_alps]} {
	send_user "\nWARNING: This test is incompatible with Cray systems\n"
	exit $exit_code
} elseif {[test_launch_poe]} {
	send_user "\nWARNING: This test is incompatible with POE systems\n"
	exit $exit_code
}

#
# Spawn a srun jobs with ever larger node counts
#
set alloc_fail 0
set timeout 60
for {set node_cnt 1} {$node_cnt > 0} {set node_cnt [expr $node_cnt * 2]} {
	set srun_pid [spawn $srun --test-only -N$node_cnt -t1 $bin_printenv SLURMD_NODENAME]
	expect {
		-re "Job $number to start at" {
			incr jobs_run
			exp_continue
		}
		-re "allocation failure:.*?\r\n" {
			set alloc_fail 1
			set node_cnt 0
			exp_continue
		}
		-re "error" {
			set node_cnt 0
			set exit_code 1
			exp_continue
		}
		timeout {
			send_user "\nFAILURE: srun not responding\n"
			slow_kill $srun_pid
			set exit_code 1
		}
		eof {
			wait
		}
	}
}

if {$jobs_run == 0} {
	send_user "\nFAILURE: No jobs run\n"
	set exit_code 1
} elseif {$alloc_fail == 1} {
	send_user "\nError expected. No worries.\n"
}

if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
