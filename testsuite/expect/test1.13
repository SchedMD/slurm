#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test of immediate allocation option (--immediate option).
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id     "1.13"
set exit_code   0
set matches     0

print_header $test_id

#
# Spawn a srun immediate execution job with hold (priority==0) option,
# The job can't run immediately with a priority of zero
#
set timeout 10
set srun_pid [spawn $srun --immediate --hold -t1 $bin_pwd]
expect {
	-re "Unable to allocate resources" {
		send_user "\nThis error is expected, no worries\n"
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		slow_kill $srun_pid
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$matches != 1} {
	send_user "\nFAILURE: failed to hold job as requested\n"
	set exit_code 1
}


#
# Spawn a srun immediate execution job, it should run or fail immediately
# Note the small value of timeout
#
set matches 0
set timeout $max_job_delay
set srun_pid [spawn $srun --immediate -v -t1 $bin_pwd]
expect {
	-re "error" {
		send_user "\nThis error is not unexpected, no worries\n"
		incr matches
		exp_continue
	}
	-re "jobid ($number)" {
		incr matches
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		slow_kill $srun_pid
		set exit_code 1
	}
	eof {
		wait
	}
}

if {$matches != 1} {
	send_user "\nFAILURE: Immediate initiation option failure\n"
	set exit_code 1
}
if {$exit_code == 0} {
	send_user "\nSUCCESS\n"
}
exit $exit_code
