#!/usr/bin/env expect
############################################################################
# Purpose: Test of SLURM functionality
#          Verify environment variables controlling sbatch are processed:
#          SBATCH_ACCOUNT, SBATCH_DEBUG and SBATCH_TIMELIMIT
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2002-2006 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id          "17.25"
set exit_code        0
set file_in          "test$test_id.input"
set job_id           0
set timeout          $max_job_delay
set account	     "dummy_acct"

print_header $test_id

if {[test_assoc_enforced]} {
	send_user "\nWARNING: Using users default account instead of $account since associations are enforced.\n"
	set account [get_default_acct 0]
}

#
# Set target environment variables
#
global env
set env(SBATCH_ACCOUNT)      $account
set env(SBATCH_DEBUG)        4
set env(SBATCH_TIMELIMIT)    3

#
# Build input script file
#
make_bash_script $file_in "
  $bin_id
"

#
# Spawn a job via sbatch using these environment variables
#
set matches 0
spawn $sbatch -N1 --output=none $file_in
expect {
	-re "verbose *: 4" {
		incr matches
		exp_continue
	}
	-re "time_limit *: 3" {
		incr matches
		exp_continue
	}
	-re "account *: $account" {
		incr matches
		exp_continue
	}
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: sbatch not responding\n"
		set exit_code 1
	}
	eof {
		wait
	}
}

if {$job_id == 0} {
	send_user "\nFAILURE: did not get job_id\n"
	exit 1
}
if {$matches != 3} {
	send_user "\nFAILURE: processed $matches of 3 environment variables\n"
	set exit_code 1
}
cancel_job $job_id

if {$exit_code == 0} {
	exec $bin_rm -f $file_in
	send_user "\nSUCCESS\n"
}
exit $exit_code
