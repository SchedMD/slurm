#!/usr/bin/expect
############################################################################
# Purpose: Test of SLURM functionality
#          Test propagation of umask to spawned tasks.
#
# Output:  "TEST: #.#" followed by "SUCCESS" if test was successful, OR
#          "WARNING: ..." with an explanation of why the test can't be made, OR
#          "FAILURE: ..." otherwise with an explanation of the failure, OR
#          anything else indicates a failure mode that must be investigated.
############################################################################
# Copyright (C) 2005 The Regents of the University of California.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of SLURM, a resource management program.
# For details, see <http://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# SLURM is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# SLURM is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with SLURM; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set test_id      "1.51"
set exit_code    0
set file_in      "test$test_id.input"
set file_script  "test$test_id.script"

print_header $test_id

if {[test_front_end] != 0} {
	send_user "\nWARNING: This test is incompatible with front-end systems\n"
	exit $exit_code
}

#
# Build input script files
#
make_bash_script $file_in "umask"

make_bash_script $file_script "
  umask 023
  $srun -N1 -t1 ./$file_in
"

#
# Set umask and confirm it is propagated
#
set matches 0
set timeout $max_job_delay
set srun_pid [spawn ./$file_script]
expect {
	-re (0023|023) {
		set matches 1
		exp_continue
	}
	timeout {
		send_user "\nFAILURE: srun not responding\n"
		slow_kill [expr 0 - $srun_pid]
		exit 1
	}
	eof {
		wait
	}
}
if {$matches != 1} {
	send_user "\nFAILURE: umask not propagated\n"
	set exit_code 1
}

if {$exit_code == 0} {
	exec $bin_rm -f $file_in $file_script
	send_user "\nSUCCESS\n"
}
exit $exit_code
