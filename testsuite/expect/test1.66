#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          srun to make sure that the jobs are running on the correct
#          nodes within the allocation.
############################################################################
# Copyright (C) 2011-2013 SchedMD LLC
# Written by Nathan Yee <nyee32@schedmd.com>
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code   0
set script      "test$test_id.bash"
set file_out    "test$test_id.out"
set job_id      0

set node_cnt [available_nodes]
if {$node_cnt < 2} {
	skip "Not enough nodes in partition ($node_cnt < 2)"
}

exec $bin_rm -f $script $file_out
make_bash_script $script "
  $scontrol show hostname \$SLURM_JOB_NODELIST
  TEST_NODE=`$scontrol show hostname \$SLURM_JOB_NODELIST | tail -1`
  echo SUBMIT_NODE=\$TEST_NODE
  $srun -w \$TEST_NODE -N1 env | grep SLURM_STEP
"

spawn $sbatch -N2 --output=$file_out $script
expect {
	-re "Submitted batch job ($number)" {
		set job_id $expect_out(1,string)
		exp_continue
	}
	timeout {
		log_error "sbatch is not responding"
		set exit_code 1
	}
	eof {
		wait
	}
}
if {$job_id == 0} {
	fail "sbatch did not submit the job"
}

if {[wait_for_job $job_id "DONE"] != 0} {
	log_error "Waiting for job to complete"
	cancel_job $job_id
	set exit_code 1
}

if {[wait_for_file $file_out] == 0} {
	set node_name "UNSET"
	set matches  0
	spawn $bin_cat $file_out
	expect {
		-re "SUBMIT_NODE=($re_word_str)" {
			set node_name $expect_out(1,string)
			exp_continue
		}
		-re "SLURM_STEP_NODELIST=($re_word_str)" {
			if {![string compare $expect_out(1,string) $node_name]} {
				incr matches
				exp_continue
			}
		}
		eof {
			wait
		}
	}
	if {$matches != 1} {
		fail "Unexpected output ($matches != 1)"
	}
} else {
	fail "Output file missing"
}

if {$exit_code == 0} {
	exec $bin_rm -f $script $file_out
} else {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
