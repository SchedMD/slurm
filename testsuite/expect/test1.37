#!/usr/bin/env expect
############################################################################
# Purpose: Test of Slurm functionality
#          Test of --ntasks-per-node option.
############################################################################
# Copyright (C) 2008 Lawrence Livermore National Security.
# Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
# Written by Morris Jette <jette1@llnl.gov>
# CODE-OCEC-09-009. All rights reserved.
#
# This file is part of Slurm, a resource management program.
# For details, see <https://slurm.schedmd.com/>.
# Please also read the included file: DISCLAIMER.
#
# Slurm is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 2 of the License, or (at your option)
# any later version.
#
# Slurm is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along
# with Slurm; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA.
############################################################################
source ./globals

set exit_code   0
set task_num    0

if {[test_front_end]} {
        skip "This test is incompatible with front-end systems"
} else {
	set task_num 2
}

#
# Spawn srun with $task_cnt tasks each of which runs a $mult way /bin/id
#
set task_output 0
set timeout $max_job_delay
set srun_pid [spawn $srun -N1 --ntasks-per-node=$task_num -O -l -t1 $bin_id]
expect {
	-re "($number): uid=" {
		incr task_output
		exp_continue
	}
	-re "($number)-($number):uid=" {
		#needed for poe launch
		incr task_output
		incr task_output
		exp_continue
	}
	timeout {
		log_error "srun not responding"
		slow_kill $srun_pid
		set exit_code 1
	}
	eof {
		wait
	}
}

if {$task_output != $task_num} {
	fail "Failed to get output from all tasks"
}

if {$exit_code != 0} {
	fail "Test failed due to previous errors (\$exit_code = $exit_code)"
}
