{
  "tags": [
    {
      "name": "slurm",
      "description": "methods that query slurmctld"
    },
    {
      "name": "slurmdb",
      "description": "methods that query slurmdbd"
    },
    {
      "name": "openapi",
      "description": "methods that query for generated OpenAPI specifications"
    }
  ],
  "paths": {
    "/slurm/v0.0.43/shares": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get fairshare info",
        "operationId": "slurm_v0043_get_shares",
        "parameters": [
          {
            "in": "query",
            "name": "accounts",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Accounts to query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "users",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Users to query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_shares_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_shares_resp"
                }
              }
            },
            "description": "shares information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_shares_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_shares_resp"
                }
              }
            },
            "description": "shares information"
          }
        }
      }
    },
    "/slurm/v0.0.43/reconfigure/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "request slurmctld reconfigure",
        "operationId": "slurm_v0043_get_reconfigure",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "reconfigure request result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "reconfigure request result"
          }
        }
      }
    },
    "/slurm/v0.0.43/diag/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get diagnostics",
        "operationId": "slurm_v0043_get_diag",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_diag_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_diag_resp"
                }
              }
            },
            "description": "diagnostic results"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_diag_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_diag_resp"
                }
              }
            },
            "description": "diagnostic results"
          }
        }
      }
    },
    "/slurm/v0.0.43/ping/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "ping test",
        "operationId": "slurm_v0043_get_ping",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_ping_array_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_ping_array_resp"
                }
              }
            },
            "description": "results of ping test"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_ping_array_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_ping_array_resp"
                }
              }
            },
            "description": "results of ping test"
          }
        }
      }
    },
    "/slurm/v0.0.43/licenses/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get all Slurm tracked license info",
        "operationId": "slurm_v0043_get_licenses",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_licenses_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_licenses_resp"
                }
              }
            },
            "description": "results of get all licenses"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_licenses_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_licenses_resp"
                }
              }
            },
            "description": "results of get all licenses"
          }
        }
      }
    },
    "/slurm/v0.0.43/job/submit": {
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "submit new job",
        "operationId": "slurm_v0043_post_job_submit",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_submit_response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_submit_response"
                }
              }
            },
            "description": "job submission response"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_submit_response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_submit_response"
                }
              }
            },
            "description": "job submission response"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_job_submit_req"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_job_submit_req"
              }
            }
          },
          "description": "Job description"
        }
      }
    },
    "/slurm/v0.0.43/job/allocate": {
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "submit new job allocation without any steps that must be signaled to stop",
        "operationId": "slurm_v0043_post_job_allocate",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_alloc_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_alloc_resp"
                }
              }
            },
            "description": "job allocation response"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_alloc_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_alloc_resp"
                }
              }
            },
            "description": "job allocation response"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_job_alloc_req"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_job_alloc_req"
              }
            }
          },
          "description": "Job allocation description"
        }
      }
    },
    "/slurm/v0.0.43/jobs/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get list of jobs",
        "operationId": "slurm_v0043_get_jobs",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query jobs updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              }
            },
            "description": "job(s) information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              }
            },
            "description": "job(s) information"
          }
        }
      },
      "delete": {
        "tags": [
          "slurm"
        ],
        "summary": "send signal to list of jobs",
        "operationId": "slurm_v0043_delete_jobs",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_jobs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_jobs_resp"
                }
              }
            },
            "description": "description of jobs to signal"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_jobs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_jobs_resp"
                }
              }
            },
            "description": "description of jobs to signal"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_kill_jobs_msg"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_kill_jobs_msg"
              }
            }
          },
          "description": "Signal or cancel jobs"
        }
      }
    },
    "/slurm/v0.0.43/jobs/state/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get list of job states",
        "operationId": "slurm_v0043_get_jobs_state",
        "parameters": [
          {
            "in": "query",
            "name": "job_id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV list of Job IDs to search for",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              }
            },
            "description": "job(s) state information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              }
            },
            "description": "job(s) state information"
          }
        }
      }
    },
    "/slurm/v0.0.43/job/{job_id}": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get job info",
        "operationId": "slurm_v0043_get_job",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query jobs updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              }
            },
            "description": "job(s) information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_info_resp"
                }
              }
            },
            "description": "job(s) information"
          }
        }
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "update job",
        "operationId": "slurm_v0043_post_job",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_post_response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_post_response"
                }
              }
            },
            "description": "job update result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_post_response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_job_post_response"
                }
              }
            },
            "description": "job update result"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_job_desc_msg"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_job_desc_msg"
              }
            }
          },
          "description": "Job update description"
        }
      },
      "delete": {
        "tags": [
          "slurm"
        ],
        "summary": "cancel or signal job",
        "operationId": "slurm_v0043_delete_job",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "signal",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Signal to send to Job",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Signalling flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "BATCH_JOB",
                "ARRAY_TASK",
                "FULL_STEPS_ONLY",
                "FULL_JOB",
                "FEDERATION_REQUEUE",
                "HURRY",
                "OUT_OF_MEMORY",
                "NO_SIBLING_JOBS",
                "RESERVATION_JOB",
                "VERBOSE",
                "CRON_JOBS",
                "WARNING_SENT"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_job_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_job_resp"
                }
              }
            },
            "description": "job signal result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_job_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_kill_job_resp"
                }
              }
            },
            "description": "job signal result"
          }
        }
      }
    },
    "/slurm/v0.0.43/nodes/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get node(s) info",
        "operationId": "slurm_v0043_get_nodes",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query jobs updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              }
            },
            "description": "node(s) information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              }
            },
            "description": "node(s) information"
          }
        }
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "batch update node(s)",
        "operationId": "slurm_v0043_post_nodes",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "batch node update request result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "batch node update request result"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_update_node_msg"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_update_node_msg"
              }
            }
          },
          "description": "Nodelist update description"
        }
      }
    },
    "/slurm/v0.0.43/node/{node_name}": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get node info",
        "operationId": "slurm_v0043_get_node",
        "parameters": [
          {
            "in": "path",
            "name": "node_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Node name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query jobs updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              }
            },
            "description": "node information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_nodes_resp"
                }
              }
            },
            "description": "node information"
          }
        }
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "update node properties",
        "operationId": "slurm_v0043_post_node",
        "parameters": [
          {
            "in": "path",
            "name": "node_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Node name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "node update request result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "node update request result"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_update_node_msg"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_update_node_msg"
              }
            }
          },
          "description": "Node update description"
        }
      },
      "delete": {
        "tags": [
          "slurm"
        ],
        "summary": "delete node",
        "operationId": "slurm_v0043_delete_node",
        "parameters": [
          {
            "in": "path",
            "name": "node_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Node name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "node delete request result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "node delete request result"
          }
        }
      }
    },
    "/slurm/v0.0.43/partitions/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get all partition info",
        "operationId": "slurm_v0043_get_partitions",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query partitions updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              }
            },
            "description": "partition information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              }
            },
            "description": "partition information"
          }
        }
      }
    },
    "/slurm/v0.0.43/partition/{partition_name}": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get partition info",
        "operationId": "slurm_v0043_get_partition",
        "parameters": [
          {
            "in": "path",
            "name": "partition_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Partition name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query partitions updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              }
            },
            "description": "partition information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_partition_resp"
                }
              }
            },
            "description": "partition information"
          }
        }
      }
    },
    "/slurm/v0.0.43/reservations/": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get all reservation info",
        "operationId": "slurm_v0043_get_reservations",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query reservations updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              }
            },
            "description": "reservation information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              }
            },
            "description": "reservation information"
          }
        }
      },
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "create or update reservations",
        "operationId": "slurm_v0043_post_reservations",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              }
            },
            "description": "reservation descriptions"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              }
            },
            "description": "reservation descriptions"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_reservation_mod_req"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_reservation_mod_req"
              }
            }
          },
          "description": "reservation descriptions"
        }
      }
    },
    "/slurm/v0.0.43/reservation/{reservation_name}": {
      "get": {
        "tags": [
          "slurm"
        ],
        "summary": "get reservation info",
        "operationId": "slurm_v0043_get_reservation",
        "parameters": [
          {
            "in": "path",
            "name": "reservation_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Reservation name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query reservations updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              }
            },
            "description": "reservation information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_resp"
                }
              }
            },
            "description": "reservation information"
          }
        }
      },
      "delete": {
        "tags": [
          "slurm"
        ],
        "summary": "delete a reservation",
        "operationId": "slurm_v0043_delete_reservation",
        "parameters": [
          {
            "in": "path",
            "name": "reservation_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Reservation name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "reservation delete request result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "reservation delete request result"
          }
        }
      }
    },
    "/slurm/v0.0.43/reservation": {
      "post": {
        "tags": [
          "slurm"
        ],
        "summary": "create or update a reservation",
        "operationId": "slurm_v0043_post_reservation",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              }
            },
            "description": "reservation description"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_reservation_mod_resp"
                }
              }
            },
            "description": "reservation description"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_reservation_desc_msg"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_reservation_desc_msg"
              }
            }
          },
          "description": "reservation description"
        }
      }
    },
    "/slurmdb/v0.0.43/job/{job_id}": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get job info",
        "description": "This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.",
        "operationId": "slurmdb_v0043_get_job",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Job ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              }
            },
            "description": "Job description"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              }
            },
            "description": "Job description"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/config": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Dump all configuration information",
        "operationId": "slurmdb_v0043_get_config",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_config_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_config_resp"
                }
              }
            },
            "description": "slurmdbd configuration"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_config_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_config_resp"
                }
              }
            },
            "description": "slurmdbd configuration"
          }
        }
      },
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Load all configuration information",
        "operationId": "slurmdb_v0043_post_config",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "slurmdbd configuration"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "slurmdbd configuration"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_config_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_config_resp"
              }
            }
          },
          "description": "Add or update config"
        }
      }
    },
    "/slurmdb/v0.0.43/tres/": {
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Add TRES",
        "operationId": "slurmdb_v0043_post_tres",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "TRES update result"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "TRES update result"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_tres_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_tres_resp"
              }
            }
          },
          "description": "TRES descriptions. Only works in developer mode."
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get TRES info",
        "operationId": "slurmdb_v0043_get_tres",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_tres_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_tres_resp"
                }
              }
            },
            "description": "List of TRES"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_tres_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_tres_resp"
                }
              }
            },
            "description": "List of TRES"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/qos/{qos}": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get QOS info",
        "operationId": "slurmdb_v0043_get_single_qos",
        "parameters": [
          {
            "in": "path",
            "name": "qos",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "QOS name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Query includes deleted QOS",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              }
            },
            "description": "QOS information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              }
            },
            "description": "QOS information"
          }
        }
      },
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete QOS",
        "operationId": "slurmdb_v0043_delete_single_qos",
        "parameters": [
          {
            "in": "path",
            "name": "qos",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "QOS name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_removed_resp"
                }
              }
            },
            "description": "results of ping test"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_removed_resp"
                }
              }
            },
            "description": "results of ping test"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/qos/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get QOS list",
        "operationId": "slurmdb_v0043_get_qos",
        "parameters": [
          {
            "in": "query",
            "name": "description",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV description list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include deleted QOS",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS id list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preempt_mode",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "PreemptMode used when jobs in this QOS are preempted",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DISABLED",
                "SUSPEND",
                "REQUEUE",
                "CANCEL",
                "GANG"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              }
            },
            "description": "List of QOS"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
                }
              }
            },
            "description": "List of QOS"
          }
        }
      },
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Add or update QOSs",
        "operationId": "slurmdb_v0043_post_qos",
        "parameters": [
          {
            "in": "query",
            "name": "description",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV description list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include deleted QOS",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS id list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preempt_mode",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "PreemptMode used when jobs in this QOS are preempted",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DISABLED",
                "SUSPEND",
                "REQUEUE",
                "CANCEL",
                "GANG"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "QOS update response"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "QOS update response"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_qos_resp"
              }
            }
          },
          "description": "Description of QOS to add or update"
        }
      }
    },
    "/slurmdb/v0.0.43/associations/": {
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Set associations info",
        "operationId": "slurmdb_v0043_post_associations",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "status of associations update"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "status of associations update"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
              }
            }
          },
          "description": "Job description"
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get association list",
        "operationId": "slurmdb_v0043_get_associations",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV accounts list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV clusters list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "default_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include deleted associations",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Filter to only defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include the raw QOS or delta_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include sub acct information",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude parent id/name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude limits from parents",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parent_account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV names of parent account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV partition name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user list",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              }
            },
            "description": "List of associations"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              }
            },
            "description": "List of associations"
          }
        }
      },
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete associations",
        "operationId": "slurmdb_v0043_delete_associations",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV accounts list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV clusters list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "default_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include deleted associations",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Filter to only defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include the raw QOS or delta_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include sub acct information",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude parent id/name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude limits from parents",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parent_account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV names of parent account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV partition name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user list",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              }
            },
            "description": "List of associations deleted"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              }
            },
            "description": "List of associations deleted"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/association/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get association info",
        "operationId": "slurmdb_v0043_get_association",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV accounts list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV clusters list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "default_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include deleted associations",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Filter to only defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include the raw QOS or delta_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include sub acct information",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude parent id/name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude limits from parents",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parent_account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV names of parent account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV partition name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user list",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              }
            },
            "description": "List of associations"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_resp"
                }
              }
            },
            "description": "List of associations"
          }
        }
      },
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete association",
        "operationId": "slurmdb_v0043_delete_association",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV accounts list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV clusters list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "default_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include deleted associations",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Filter to only defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include the raw QOS or delta_qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Include sub acct information",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude parent id/name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "Exclude limits from parents",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "parent_account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV names of parent account",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV partition name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user list",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              }
            },
            "description": "Status of associations delete request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_assocs_removed_resp"
                }
              }
            },
            "description": "Status of associations delete request"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/instances/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get instance list",
        "operationId": "slurmdb_v0043_get_instances",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV clusters list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extra",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV extra list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "instance_id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV instance_id list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "instance_type",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV instance_type list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "node_list",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ranged node string",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "time_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Time end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "time_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Time start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              }
            },
            "description": "List of instances"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              }
            },
            "description": "List of instances"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/instance/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get instance info",
        "operationId": "slurmdb_v0043_get_instance",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV clusters list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "extra",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV extra list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "instance_id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV instance_id list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "instance_type",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV instance_type list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "node_list",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ranged node string",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "time_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Time end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "time_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Time start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              }
            },
            "description": "List of instances"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_instances_resp"
                }
              }
            },
            "description": "List of instances"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/user/{name}": {
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete user",
        "operationId": "slurmdb_v0043_delete_user",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Result of user delete request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Result of user delete request"
          }
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get user info",
        "operationId": "slurmdb_v0043_get_user",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "User name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include deleted users",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_assocs",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include associations",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_coords",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include coordinators",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_wckeys",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include WCKeys",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              }
            },
            "description": "List of users"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              }
            },
            "description": "List of users"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/users_association/": {
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Add users with conditional association",
        "operationId": "slurmdb_v0043_post_users_association",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query partitions updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ALL",
                "DETAIL",
                "MIXED",
                "LOCAL",
                "SIBLING",
                "FEDERATION",
                "FUTURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_add_cond_resp_str"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_add_cond_resp_str"
                }
              }
            },
            "description": "Add list of users with conditional association"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_add_cond_resp_str"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_add_cond_resp_str"
                }
              }
            },
            "description": "Add list of users with conditional association"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_users_add_cond_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_users_add_cond_resp"
              }
            }
          },
          "description": "Create users with conditional association"
        }
      }
    },
    "/slurmdb/v0.0.43/users/": {
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Update users",
        "operationId": "slurmdb_v0043_post_users",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Status of user update request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Status of user update request"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
              }
            }
          },
          "description": "add or update user"
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get user list",
        "operationId": "slurmdb_v0043_get_users",
        "parameters": [
          {
            "in": "query",
            "name": "admin_level",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Administrator level",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "Not Set",
                "None",
                "Operator",
                "Administrator"
              ]
            }
          },
          {
            "in": "query",
            "name": "default_account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV default account list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "default_wckey",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV default WCKey list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_assocs",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "With associations",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_coords",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "With coordinators",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "With deleted",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_wckeys",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "With WCKeys",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "without_defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Exclude defaults",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              }
            },
            "description": "List of users"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_users_resp"
                }
              }
            },
            "description": "List of users"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/cluster/{cluster_name}": {
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete cluster",
        "operationId": "slurmdb_v0043_delete_cluster",
        "parameters": [
          {
            "in": "path",
            "name": "cluster_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Cluster name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "classification",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Type of machine",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "UNCLASSIFIED",
                "CAPABILITY",
                "CAPACITY",
                "CAPAPACITY"
              ]
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV cluster list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "federation",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV federation list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DELETED",
                "REGISTERING",
                "MULTIPLE_SLURMD",
                "FEDERATION",
                "EXTERNAL"
              ]
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "rpc_version",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV RPC version list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include deleted clusters",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include usage",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_removed_resp"
                }
              }
            },
            "description": "Result of delete cluster request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_removed_resp"
                }
              }
            },
            "description": "Result of delete cluster request"
          }
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get cluster info",
        "operationId": "slurmdb_v0043_get_cluster",
        "parameters": [
          {
            "in": "path",
            "name": "cluster_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Cluster name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "classification",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Type of machine",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "UNCLASSIFIED",
                "CAPABILITY",
                "CAPACITY",
                "CAPAPACITY"
              ]
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV cluster list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "federation",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV federation list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "flags",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query flags",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "DELETED",
                "REGISTERING",
                "MULTIPLE_SLURMD",
                "FEDERATION",
                "EXTERNAL"
              ]
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "rpc_version",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV RPC version list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include deleted clusters",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include usage",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              }
            },
            "description": "Cluster information"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              }
            },
            "description": "Cluster information"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/clusters/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get cluster list",
        "operationId": "slurmdb_v0043_get_clusters",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query reservations updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              }
            },
            "description": "List of clusters"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
                }
              }
            },
            "description": "List of clusters"
          }
        }
      },
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get cluster list",
        "operationId": "slurmdb_v0043_post_clusters",
        "parameters": [
          {
            "in": "query",
            "name": "update_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Query reservations updated more recently than this time (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Result of modify clusters request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Result of modify clusters request"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_clusters_resp"
              }
            }
          },
          "description": "Cluster add or update descriptions"
        }
      }
    },
    "/slurmdb/v0.0.43/wckey/{id}": {
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete wckey",
        "operationId": "slurmdb_v0043_delete_wckey",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "WCKey ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_removed_resp"
                }
              }
            },
            "description": "Result of wckey deletion request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_removed_resp"
                }
              }
            },
            "description": "Result of wckey deletion request"
          }
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get wckey info",
        "operationId": "slurmdb_v0043_get_wckey",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "WCKey ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              }
            },
            "description": "Description of wckey"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              }
            },
            "description": "Description of wckey"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/wckeys/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get wckey list",
        "operationId": "slurmdb_v0043_get_wckeys",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV cluster name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "only_defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Only query defaults",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include usage",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include deleted WCKeys",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              }
            },
            "description": "List of wckeys"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
                }
              }
            },
            "description": "List of wckeys"
          }
        }
      },
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Add or update wckeys",
        "operationId": "slurmdb_v0043_post_wckeys",
        "parameters": [
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV cluster name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "only_defaults",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Only query defaults",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_end",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_start",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "user",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_usage",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include usage",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include deleted WCKeys",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Result of wckey addition or update request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Result of wckey addition or update request"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_wckey_resp"
              }
            }
          },
          "description": "wckeys description"
        }
      }
    },
    "/slurmdb/v0.0.43/account/{account_name}": {
      "delete": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Delete account",
        "operationId": "slurmdb_v0043_delete_account",
        "parameters": [
          {
            "in": "path",
            "name": "account_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Account name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_removed_resp"
                }
              }
            },
            "description": "Status of account deletion request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_removed_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_removed_resp"
                }
              }
            },
            "description": "Status of account deletion request"
          }
        }
      },
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get account info",
        "operationId": "slurmdb_v0043_get_account",
        "parameters": [
          {
            "in": "path",
            "name": "account_name",
            "style": "simple",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Account name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_assocs",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include associations",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_coords",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include coordinators",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "with_deleted",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include deleted",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              }
            },
            "description": "List of accounts"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              }
            },
            "description": "List of accounts"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/accounts_association/": {
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Add accounts with conditional association",
        "operationId": "slurmdb_v0043_post_accounts_association",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_add_cond_resp_str"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_add_cond_resp_str"
                }
              }
            },
            "description": "Status of account addition request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_add_cond_resp_str"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_add_cond_resp_str"
                }
              }
            },
            "description": "Status of account addition request"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_accounts_add_cond_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_accounts_add_cond_resp"
              }
            }
          },
          "description": "Add list of accounts with conditional association"
        }
      }
    },
    "/slurmdb/v0.0.43/accounts/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get account list",
        "operationId": "slurmdb_v0043_get_accounts",
        "parameters": [
          {
            "in": "query",
            "name": "description",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV description list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "DELETED",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "include deleted associations",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "WithAssociations",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "query includes associations",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "WithCoordinators",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "query includes coordinators",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "NoUsersAreCoords",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "remove users as coordinators",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "UsersAreCoords",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "users are coordinators",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              }
            },
            "description": "List of accounts"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
                }
              }
            },
            "description": "List of accounts"
          }
        }
      },
      "post": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Add/update list of accounts",
        "operationId": "slurmdb_v0043_post_accounts",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Status of account update request"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_resp"
                }
              }
            },
            "description": "Status of account update request"
          }
        },
        "requestBody": {
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v0.0.43_openapi_accounts_resp"
              }
            }
          },
          "description": "Description of accounts to update/create"
        }
      }
    },
    "/slurmdb/v0.0.43/jobs/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get job list",
        "operationId": "slurmdb_v0043_get_jobs",
        "parameters": [
          {
            "in": "query",
            "name": "account",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV account list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "association",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV association list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "cluster",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV cluster list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "constraints",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV constraint list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scheduler_unset",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Schedule bits not set",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scheduled_on_submit",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Job was started on submit",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scheduled_by_main",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Job was started from main scheduler",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "scheduled_by_backfill",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Job was started from backfill",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "job_started",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Job start RPC was received",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exit_code",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Job exit code (numeric)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "show_duplicates",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include duplicate job entries",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "skip_steps",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Exclude job step details",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "disable_truncate_usage_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Do not truncate the time to usage_start and usage_end",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "whole_hetjob",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include details on all hetjob components",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "disable_whole_hetjob",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Only show details on specified hetjob components",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "disable_wait_for_result",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Tell dbd not to wait for the result",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "usage_time_as_submit_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Use usage_time as the submit_time of the job",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "show_batch_script",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include job script",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "show_job_environment",
            "style": "form",
            "explode": false,
            "allowEmptyValue": true,
            "allowReserved": false,
            "description": "Include job environment",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "format",
            "style": "form",
            "explode": false,
            "deprecated": true,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ignored; process JSON manually to control output format",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "groups",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV group list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "job_name",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV job name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "partition",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV partition name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "qos",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV QOS name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "reason",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV reason list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "reservation",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV reservation name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "reservation_id",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV reservation ID list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV state list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "step",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV step id list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "end_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage end (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "start_time",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Usage start (UNIX timestamp)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "node",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "Ranged node string where jobs ran",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "users",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV user name list",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "wckey",
            "style": "form",
            "explode": false,
            "allowEmptyValue": false,
            "allowReserved": false,
            "description": "CSV WCKey list",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              }
            },
            "description": "List of jobs"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_jobs_resp"
                }
              }
            },
            "description": "List of jobs"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/diag/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "Get slurmdb diagnostics",
        "operationId": "slurmdb_v0043_get_diag",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_stats_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_stats_resp"
                }
              }
            },
            "description": "Dictionary of statistics"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_stats_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_stats_resp"
                }
              }
            },
            "description": "Dictionary of statistics"
          }
        }
      }
    },
    "/slurmdb/v0.0.43/ping/": {
      "get": {
        "tags": [
          "slurmdb"
        ],
        "summary": "ping test",
        "operationId": "slurmdb_v0043_get_ping",
        "responses": {
          "200": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_ping_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_ping_resp"
                }
              }
            },
            "description": "results of ping test"
          },
          "default": {
            "content": {
              "application/yaml": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_ping_resp"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v0.0.43_openapi_slurmdbd_ping_resp"
                }
              }
            },
            "description": "results of ping test"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "v0.0.43_openapi_shares_resp": {
        "type": "object",
        "properties": {
          "shares": {
            "$ref": "#/components/schemas/v0.0.43_shares_resp_msg",
            "description": "fairshare info"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "shares"
        ]
      },
      "v0.0.43_shares_resp_msg": {
        "type": "object",
        "properties": {
          "shares": {
            "$ref": "#/components/schemas/v0.0.43_assoc_shares_obj_list",
            "description": "Association shares"
          },
          "total_shares": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of shares"
          }
        },
        "required": []
      },
      "v0.0.43_assoc_shares_obj_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_assoc_shares_obj_wrap"
        }
      },
      "v0.0.43_assoc_shares_obj_wrap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Association ID"
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "name": {
            "type": "string",
            "description": "Share name"
          },
          "parent": {
            "type": "string",
            "description": "Parent name"
          },
          "partition": {
            "type": "string",
            "description": "Partition name"
          },
          "shares_normalized": {
            "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
            "description": "Normalized shares (64 bit floating point number with flags)"
          },
          "shares": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Number of shares allocated (32 bit integer number with flags)"
          },
          "tres": {
            "type": "object",
            "properties": {
              "run_seconds": {
                "$ref": "#/components/schemas/v0.0.43_shares_uint64_tres_list",
                "description": "Currently running tres-secs = grp_used_tres_run_secs"
              },
              "group_minutes": {
                "$ref": "#/components/schemas/v0.0.43_shares_uint64_tres_list",
                "description": "TRES-minute limit"
              },
              "usage": {
                "$ref": "#/components/schemas/v0.0.43_shares_float128_tres_list",
                "description": "Measure of each TRES usage"
              }
            }
          },
          "effective_usage": {
            "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
            "description": "Effective, normalized usage (64 bit floating point number with flags)"
          },
          "usage_normalized": {
            "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
            "description": "Normalized usage (64 bit floating point number with flags)"
          },
          "usage": {
            "type": "integer",
            "format": "int64",
            "description": "Measure of tresbillableunits usage"
          },
          "fairshare": {
            "type": "object",
            "properties": {
              "factor": {
                "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
                "description": "Fairshare factor (64 bit floating point number with flags)"
              },
              "level": {
                "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
                "description": "Fairshare factor at this level; stored on an assoc as a long double, but that is not needed for display in sshare (64 bit floating point number with flags)"
              }
            }
          },
          "type": {
            "type": "array",
            "description": "User or account association",
            "items": {
              "enum": [
                "USER",
                "ASSOCIATION"
              ],
              "type": "string"
            }
          }
        },
        "required": []
      },
      "v0.0.43_float64_no_val_struct": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "True if number has been set; False if number is unset"
          },
          "infinite": {
            "type": "boolean",
            "description": "True if number has been set to infinite; \"set\" and \"number\" will be ignored"
          },
          "number": {
            "type": "number",
            "format": "double",
            "description": "If \"set\" is True the number will be set with value; otherwise ignore number contents"
          }
        },
        "required": []
      },
      "v0.0.43_uint32_no_val_struct": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "True if number has been set; False if number is unset"
          },
          "infinite": {
            "type": "boolean",
            "description": "True if number has been set to infinite; \"set\" and \"number\" will be ignored"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "description": "If \"set\" is True the number will be set with value; otherwise ignore number contents"
          }
        },
        "required": []
      },
      "v0.0.43_shares_uint64_tres_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_shares_uint64_tres"
        }
      },
      "v0.0.43_shares_uint64_tres": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "TRES name"
          },
          "value": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "TRES value (64 bit integer number with flags)"
          }
        },
        "required": []
      },
      "v0.0.43_uint64_no_val_struct": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "True if number has been set; False if number is unset"
          },
          "infinite": {
            "type": "boolean",
            "description": "True if number has been set to infinite; \"set\" and \"number\" will be ignored"
          },
          "number": {
            "type": "integer",
            "format": "int64",
            "description": "If \"set\" is True the number will be set with value; otherwise ignore number contents"
          }
        },
        "required": []
      },
      "v0.0.43_shares_float128_tres_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_shares_float128_tres"
        }
      },
      "v0.0.43_shares_float128_tres": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "TRES name"
          },
          "value": {
            "type": "number",
            "description": "TRES value"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_meta": {
        "type": "object",
        "properties": {
          "plugin": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Slurm plugin type (if applicable)"
              },
              "name": {
                "type": "string",
                "description": "Slurm plugin name (if applicable)"
              },
              "data_parser": {
                "type": "string",
                "description": "Slurm data_parser plugin"
              },
              "accounting_storage": {
                "type": "string",
                "description": "Slurm accounting plugin"
              }
            }
          },
          "client": {
            "type": "object",
            "properties": {
              "source": {
                "type": "string",
                "description": "Client source description"
              },
              "user": {
                "type": "string",
                "description": "Client user (if known)"
              },
              "group": {
                "type": "string",
                "description": "Client group (if known)"
              }
            }
          },
          "command": {
            "$ref": "#/components/schemas/v0.0.43_string_array",
            "description": "CLI command (if applicable)"
          },
          "slurm": {
            "type": "object",
            "properties": {
              "version": {
                "type": "object",
                "properties": {
                  "major": {
                    "type": "string",
                    "description": "Slurm release major version"
                  },
                  "micro": {
                    "type": "string",
                    "description": "Slurm release micro version"
                  },
                  "minor": {
                    "type": "string",
                    "description": "Slurm release minor version"
                  }
                }
              },
              "release": {
                "type": "string",
                "description": "Slurm release string"
              },
              "cluster": {
                "type": "string",
                "description": "Slurm cluster name"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_string_array": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_openapi_errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_openapi_error"
        }
      },
      "v0.0.43_openapi_error": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Long form error description"
          },
          "error_number": {
            "type": "integer",
            "format": "int32",
            "description": "Slurm numeric error identifier"
          },
          "error": {
            "type": "string",
            "description": "Short form error description"
          },
          "source": {
            "type": "string",
            "description": "Source of error or where error was first detected"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_warnings": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_openapi_warning"
        }
      },
      "v0.0.43_openapi_warning": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Long form warning description"
          },
          "source": {
            "type": "string",
            "description": "Source of warning or where warning was first detected"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_resp": {
        "type": "object",
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_diag_resp": {
        "type": "object",
        "properties": {
          "statistics": {
            "$ref": "#/components/schemas/v0.0.43_stats_msg",
            "description": "statistics"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "statistics"
        ]
      },
      "v0.0.43_stats_msg": {
        "type": "object",
        "properties": {
          "parts_packed": {
            "type": "integer",
            "format": "int32",
            "description": "Zero if only RPC statistic included"
          },
          "req_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "When the request was made (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "req_time_start": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "When the data in the report started (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "server_thread_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of current active slurmctld threads"
          },
          "agent_queue_size": {
            "type": "integer",
            "format": "int32",
            "description": "Number of enqueued outgoing RPC requests in an internal retry list"
          },
          "agent_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of agent threads"
          },
          "agent_thread_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of active threads created by all agent threads"
          },
          "dbd_agent_queue_size": {
            "type": "integer",
            "format": "int32",
            "description": "Number of messages for SlurmDBD that are queued"
          },
          "gettimeofday_latency": {
            "type": "integer",
            "format": "int32",
            "description": "Latency of 1000 calls to the gettimeofday() syscall in microseconds, as measured at controller startup"
          },
          "schedule_cycle_max": {
            "type": "integer",
            "format": "int32",
            "description": "Max time of any scheduling cycle in microseconds since last reset"
          },
          "schedule_cycle_last": {
            "type": "integer",
            "format": "int32",
            "description": "Time in microseconds for last scheduling cycle"
          },
          "schedule_cycle_sum": {
            "type": "integer",
            "format": "int32",
            "description": "Total run time in microseconds for all scheduling cycles since last reset"
          },
          "schedule_cycle_total": {
            "type": "integer",
            "format": "int32",
            "description": "Number of scheduling cycles since last reset"
          },
          "schedule_cycle_mean": {
            "type": "integer",
            "format": "int64",
            "description": "Mean time in microseconds for all scheduling cycles since last reset"
          },
          "schedule_cycle_mean_depth": {
            "type": "integer",
            "format": "int64",
            "description": "Mean of the number of jobs processed in a scheduling cycle"
          },
          "schedule_cycle_per_minute": {
            "type": "integer",
            "format": "int64",
            "description": "Number of scheduling executions per minute"
          },
          "schedule_cycle_depth": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of jobs processed in scheduling cycles"
          },
          "schedule_exit": {
            "$ref": "#/components/schemas/v0.0.43_schedule_exit_fields",
            "description": "Reasons for which the scheduling cycle exited since last reset"
          },
          "schedule_queue_length": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs pending in queue"
          },
          "jobs_submitted": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs submitted since last reset"
          },
          "jobs_started": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs started since last reset"
          },
          "jobs_completed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs completed since last reset"
          },
          "jobs_canceled": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs canceled since the last reset"
          },
          "jobs_failed": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs failed due to slurmd or other internal issues since last reset"
          },
          "jobs_pending": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs pending at the time of listed in job_state_ts"
          },
          "jobs_running": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs running at the time of listed in job_state_ts"
          },
          "job_states_ts": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "When the job state counts were gathered (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "bf_backfilled_jobs": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs started through backfilling since last slurm start"
          },
          "bf_last_backfilled_jobs": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs started through backfilling since last reset"
          },
          "bf_backfilled_het_jobs": {
            "type": "integer",
            "format": "int32",
            "description": "Number of heterogeneous job components started through backfilling since last Slurm start"
          },
          "bf_cycle_counter": {
            "type": "integer",
            "format": "int32",
            "description": "Number of backfill scheduling cycles since last reset"
          },
          "bf_cycle_mean": {
            "type": "integer",
            "format": "int64",
            "description": "Mean time in microseconds of backfilling scheduling cycles since last reset"
          },
          "bf_depth_mean": {
            "type": "integer",
            "format": "int64",
            "description": "Mean number of eligible to run jobs processed during all backfilling scheduling cycles since last reset"
          },
          "bf_depth_mean_try": {
            "type": "integer",
            "format": "int64",
            "description": "The subset of Depth Mean that the backfill scheduler attempted to schedule"
          },
          "bf_cycle_sum": {
            "type": "integer",
            "format": "int64",
            "description": "Total time in microseconds of backfilling scheduling cycles since last reset"
          },
          "bf_cycle_last": {
            "type": "integer",
            "format": "int32",
            "description": "Execution time in microseconds of last backfill scheduling cycle"
          },
          "bf_cycle_max": {
            "type": "integer",
            "format": "int32",
            "description": "Execution time in microseconds of longest backfill scheduling cycle"
          },
          "bf_exit": {
            "$ref": "#/components/schemas/v0.0.43_bf_exit_fields",
            "description": "Reasons for which the backfill scheduling cycle exited since last reset"
          },
          "bf_last_depth": {
            "type": "integer",
            "format": "int32",
            "description": "Number of processed jobs during last backfilling scheduling cycle"
          },
          "bf_last_depth_try": {
            "type": "integer",
            "format": "int32",
            "description": "Number of processed jobs during last backfilling scheduling cycle that had a chance to start using available resources"
          },
          "bf_depth_sum": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of jobs processed during all backfilling scheduling cycles since last reset"
          },
          "bf_depth_try_sum": {
            "type": "integer",
            "format": "int32",
            "description": "Subset of bf_depth_sum that the backfill scheduler attempted to schedule"
          },
          "bf_queue_len": {
            "type": "integer",
            "format": "int32",
            "description": "Number of jobs pending to be processed by backfilling algorithm"
          },
          "bf_queue_len_mean": {
            "type": "integer",
            "format": "int64",
            "description": "Mean number of jobs pending to be processed by backfilling algorithm"
          },
          "bf_queue_len_sum": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of jobs pending to be processed by backfilling algorithm since last reset"
          },
          "bf_table_size": {
            "type": "integer",
            "format": "int32",
            "description": "Number of different time slots tested by the backfill scheduler in its last iteration"
          },
          "bf_table_size_sum": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of different time slots tested by the backfill scheduler"
          },
          "bf_table_size_mean": {
            "type": "integer",
            "format": "int64",
            "description": "Mean number of different time slots tested by the backfill scheduler"
          },
          "bf_when_last_cycle": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "When the last backfill scheduling cycle happened (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "bf_active": {
            "type": "boolean",
            "description": "Backfill scheduler currently running"
          },
          "rpcs_by_message_type": {
            "$ref": "#/components/schemas/v0.0.43_stats_msg_rpcs_by_type",
            "description": "Most frequently issued remote procedure calls (RPCs) (RPCs by type)"
          },
          "rpcs_by_user": {
            "$ref": "#/components/schemas/v0.0.43_stats_msg_rpcs_by_user",
            "description": "RPCs issued by user ID (RPCs by user)"
          },
          "pending_rpcs": {
            "$ref": "#/components/schemas/v0.0.43_stats_msg_rpcs_queue",
            "description": "Pending RPC statistics (Pending RPCs)"
          },
          "pending_rpcs_by_hostlist": {
            "$ref": "#/components/schemas/v0.0.43_stats_msg_rpcs_dump",
            "description": "Pending RPCs hostlists (Pending RPCs by hostlist)"
          }
        },
        "required": []
      },
      "v0.0.43_schedule_exit_fields": {
        "type": "object",
        "properties": {
          "end_job_queue": {
            "type": "integer",
            "format": "int32",
            "description": "Reached end of queue"
          },
          "default_queue_depth": {
            "type": "integer",
            "format": "int32",
            "description": "Reached number of jobs allowed to be tested"
          },
          "max_job_start": {
            "type": "integer",
            "format": "int32",
            "description": "Reached number of jobs allowed to start"
          },
          "max_rpc_cnt": {
            "type": "integer",
            "format": "int32",
            "description": "Reached RPC limit"
          },
          "max_sched_time": {
            "type": "integer",
            "format": "int32",
            "description": "Reached maximum allowed scheduler time"
          },
          "licenses": {
            "type": "integer",
            "format": "int32",
            "description": "Blocked on licenses"
          }
        },
        "required": []
      },
      "v0.0.43_bf_exit_fields": {
        "type": "object",
        "properties": {
          "end_job_queue": {
            "type": "integer",
            "format": "int32",
            "description": "Reached end of queue"
          },
          "bf_max_job_start": {
            "type": "integer",
            "format": "int32",
            "description": "Reached number of jobs allowed to start"
          },
          "bf_max_job_test": {
            "type": "integer",
            "format": "int32",
            "description": "Reached number of jobs allowed to be tested"
          },
          "bf_max_time": {
            "type": "integer",
            "format": "int32",
            "description": "Reached maximum allowed scheduler time"
          },
          "bf_node_space_size": {
            "type": "integer",
            "format": "int32",
            "description": "Reached table size limit"
          },
          "state_changed": {
            "type": "integer",
            "format": "int32",
            "description": "System state changed"
          }
        },
        "required": []
      },
      "v0.0.43_stats_msg_rpcs_by_type": {
        "type": "array",
        "description": "RPCs by type",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_stats_msg_rpc_type"
        }
      },
      "v0.0.43_stats_msg_rpc_type": {
        "type": "object",
        "properties": {
          "type_id": {
            "type": "integer",
            "format": "int32",
            "description": "Message type as integer"
          },
          "message_type": {
            "type": "string",
            "description": "Message type as string (Slurm RPC message type)"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of RPCs received"
          },
          "queued": {
            "type": "integer",
            "format": "int32",
            "description": "Number of RPCs queued"
          },
          "dropped": {
            "type": "integer",
            "format": "int64",
            "description": "Number of RPCs dropped"
          },
          "cycle_last": {
            "type": "integer",
            "format": "int32",
            "description": "Number of RPCs processed within the last RPC queue cycle"
          },
          "cycle_max": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of RPCs processed within a RPC queue cycle since start"
          },
          "total_time": {
            "type": "integer",
            "format": "int64",
            "description": "Total time spent processing RPC in seconds"
          },
          "average_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Average time spent processing RPC in seconds (64 bit integer number with flags)"
          }
        },
        "required": [
          "type_id",
          "message_type",
          "count",
          "queued",
          "dropped",
          "cycle_last",
          "cycle_max",
          "total_time",
          "average_time"
        ]
      },
      "v0.0.43_stats_msg_rpcs_by_user": {
        "type": "array",
        "description": "RPCs by user",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_stats_msg_rpc_user"
        }
      },
      "v0.0.43_stats_msg_rpc_user": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int32",
            "description": "User ID (numeric)"
          },
          "user": {
            "type": "string",
            "description": "User name"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of RPCs received"
          },
          "total_time": {
            "type": "integer",
            "format": "int64",
            "description": "Total time spent processing RPC in seconds"
          },
          "average_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Average time spent processing RPC in seconds (64 bit integer number with flags)"
          }
        },
        "required": [
          "user_id",
          "user",
          "count",
          "total_time",
          "average_time"
        ]
      },
      "v0.0.43_stats_msg_rpcs_queue": {
        "type": "array",
        "description": "Pending RPCs",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_stats_msg_rpc_queue"
        }
      },
      "v0.0.43_stats_msg_rpc_queue": {
        "type": "object",
        "properties": {
          "type_id": {
            "type": "integer",
            "format": "int32",
            "description": "Message type as integer"
          },
          "message_type": {
            "type": "string",
            "description": "Message type as string (Slurm RPC message type)"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of pending RPCs queued"
          }
        },
        "required": [
          "type_id",
          "message_type",
          "count"
        ]
      },
      "v0.0.43_stats_msg_rpcs_dump": {
        "type": "array",
        "description": "Pending RPCs by hostlist",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_stats_msg_rpc_dump"
        }
      },
      "v0.0.43_stats_msg_rpc_dump": {
        "type": "object",
        "properties": {
          "type_id": {
            "type": "integer",
            "format": "int32",
            "description": "Message type as integer"
          },
          "message_type": {
            "type": "string",
            "description": "Message type as string (Slurm RPC message type)"
          },
          "count": {
            "$ref": "#/components/schemas/v0.0.43_hostlist_string",
            "description": "Number of RPCs received"
          }
        },
        "required": [
          "type_id",
          "message_type",
          "count"
        ]
      },
      "v0.0.43_hostlist_string": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_openapi_ping_array_resp": {
        "type": "object",
        "properties": {
          "pings": {
            "$ref": "#/components/schemas/v0.0.43_controller_ping_array",
            "description": "pings"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "pings"
        ]
      },
      "v0.0.43_controller_ping_array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_controller_ping"
        }
      },
      "v0.0.43_controller_ping": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Target for ping"
          },
          "pinged": {
            "type": "string",
            "description": "Ping result",
            "deprecated": true
          },
          "responding": {
            "type": "boolean",
            "description": "If ping RPC responded with pong from controller"
          },
          "latency": {
            "type": "integer",
            "format": "int64",
            "description": "Number of microseconds it took to successfully ping or timeout"
          },
          "mode": {
            "type": "string",
            "description": "The operating mode of the responding slurmctld",
            "deprecated": true
          },
          "primary": {
            "type": "boolean",
            "description": "Is responding slurmctld the primary controller (Is responding slurmctld the primary controller)"
          }
        },
        "required": [
          "responding",
          "primary"
        ]
      },
      "v0.0.43_openapi_licenses_resp": {
        "type": "object",
        "properties": {
          "licenses": {
            "$ref": "#/components/schemas/v0.0.43_licenses",
            "description": "List of licenses"
          },
          "last_update": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last licenses change (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "licenses",
          "last_update"
        ]
      },
      "v0.0.43_licenses": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_license"
        }
      },
      "v0.0.43_license": {
        "type": "object",
        "properties": {
          "LicenseName": {
            "type": "string",
            "description": "Name of the license"
          },
          "Total": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of licenses present"
          },
          "Used": {
            "type": "integer",
            "format": "int32",
            "description": "Number of licenses in use"
          },
          "Free": {
            "type": "integer",
            "format": "int32",
            "description": "Number of licenses currently available"
          },
          "Remote": {
            "type": "boolean",
            "description": "Indicates whether licenses are served by the database"
          },
          "Reserved": {
            "type": "integer",
            "format": "int32",
            "description": "Number of licenses reserved"
          },
          "LastConsumed": {
            "type": "integer",
            "format": "int32",
            "description": "Last known number of licenses that were consumed in the license manager (Remote Only)"
          },
          "LastDeficit": {
            "type": "integer",
            "format": "int32",
            "description": "Number of \"missing licenses\" from the cluster's perspective"
          },
          "LastUpdate": {
            "type": "integer",
            "format": "int64",
            "description": "When the license information was last updated (UNIX Timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_job_submit_response": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "integer",
            "format": "int32",
            "description": "submitted Job ID"
          },
          "step_id": {
            "type": "string",
            "description": "submitted Step ID"
          },
          "job_submit_user_msg": {
            "type": "string",
            "description": "Job submission user message"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": []
      },
      "v0.0.43_job_submit_req": {
        "type": "object",
        "properties": {
          "script": {
            "type": "string",
            "description": "Deprecated; Populate script field in jobs[0] or job",
            "deprecated": true
          },
          "jobs": {
            "$ref": "#/components/schemas/v0.0.43_job_desc_msg_list",
            "description": "HetJob description"
          },
          "job": {
            "$ref": "#/components/schemas/v0.0.43_job_desc_msg",
            "description": "Job description"
          }
        },
        "required": []
      },
      "v0.0.43_job_desc_msg_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job_desc_msg"
        }
      },
      "v0.0.43_job_desc_msg": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account associated with the job"
          },
          "account_gather_frequency": {
            "type": "string",
            "description": "Job accounting and profiling sampling intervals in seconds"
          },
          "admin_comment": {
            "type": "string",
            "description": "Arbitrary comment made by administrator"
          },
          "allocation_node_list": {
            "type": "string",
            "description": "Local node making the resource allocation"
          },
          "allocation_node_port": {
            "type": "integer",
            "format": "int32",
            "description": "Port to send allocation confirmation to"
          },
          "argv": {
            "$ref": "#/components/schemas/v0.0.43_string_array",
            "description": "Arguments to the script. Note: The slurmstepd always overrides argv[0] with the path to the created script file. If this option is used, argv[0] should be a throwaway value."
          },
          "array": {
            "type": "string",
            "description": "Job array index value specification"
          },
          "batch_features": {
            "type": "string",
            "description": "Features required for batch script's node"
          },
          "begin_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Defer the allocation of the job until the specified time (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "flags": {
            "type": "array",
            "description": "Job flags",
            "items": {
              "enum": [
                "KILL_INVALID_DEPENDENCY",
                "NO_KILL_INVALID_DEPENDENCY",
                "HAS_STATE_DIRECTORY",
                "TESTING_BACKFILL",
                "GRES_BINDING_ENFORCED",
                "TEST_NOW_ONLY",
                "SEND_JOB_ENVIRONMENT",
                "SPREAD_JOB",
                "PREFER_MINIMUM_NODE_COUNT",
                "JOB_KILL_HURRY",
                "SKIP_TRES_STRING_ACCOUNTING",
                "SIBLING_CLUSTER_UPDATE_ONLY",
                "HETEROGENEOUS_JOB",
                "EXACT_TASK_COUNT_REQUESTED",
                "EXACT_CPU_COUNT_REQUESTED",
                "TESTING_WHOLE_NODE_BACKFILL",
                "TOP_PRIORITY_JOB",
                "ACCRUE_COUNT_CLEARED",
                "GRES_BINDING_DISABLED",
                "JOB_WAS_RUNNING",
                "JOB_ACCRUE_TIME_RESET",
                "CRON_JOB",
                "EXACT_MEMORY_REQUESTED",
                "EXTERNAL_JOB",
                "USING_DEFAULT_ACCOUNT",
                "USING_DEFAULT_PARTITION",
                "USING_DEFAULT_QOS",
                "USING_DEFAULT_WCKEY",
                "DEPENDENT",
                "MAGNETIC",
                "PARTITION_ASSIGNED",
                "BACKFILL_ATTEMPTED",
                "SCHEDULING_ATTEMPTED",
                "STEPMGR_ENABLED"
              ],
              "type": "string"
            }
          },
          "burst_buffer": {
            "type": "string",
            "description": "Burst buffer specifications"
          },
          "clusters": {
            "type": "string",
            "description": "Clusters that a federated job can run on"
          },
          "cluster_constraint": {
            "type": "string",
            "description": "Required features that a federated cluster must have to have a sibling job submitted to it"
          },
          "comment": {
            "type": "string",
            "description": "Arbitrary comment made by user"
          },
          "contiguous": {
            "type": "boolean",
            "description": "True if job requires contiguous nodes"
          },
          "container": {
            "type": "string",
            "description": "Absolute path to OCI container bundle"
          },
          "container_id": {
            "type": "string",
            "description": "OCI container ID"
          },
          "core_specification": {
            "type": "integer",
            "format": "int32",
            "description": "Specialized core count"
          },
          "thread_specification": {
            "type": "integer",
            "format": "int32",
            "description": "Specialized thread count"
          },
          "cpu_binding": {
            "type": "string",
            "description": "Method for binding tasks to allocated CPUs"
          },
          "cpu_binding_flags": {
            "type": "array",
            "description": "Flags for CPU binding",
            "items": {
              "enum": [
                "CPU_BIND_TO_THREADS",
                "CPU_BIND_TO_CORES",
                "CPU_BIND_TO_SOCKETS",
                "CPU_BIND_TO_LDOMS",
                "CPU_BIND_NONE",
                "CPU_BIND_RANK",
                "CPU_BIND_MAP",
                "CPU_BIND_MASK",
                "CPU_BIND_LDRANK",
                "CPU_BIND_LDMAP",
                "CPU_BIND_LDMASK",
                "VERBOSE",
                "CPU_BIND_ONE_THREAD_PER_CORE"
              ],
              "type": "string"
            }
          },
          "cpu_frequency": {
            "type": "string",
            "description": "Requested CPU frequency range <p1>[-p2][:p3]"
          },
          "cpus_per_tres": {
            "type": "string",
            "description": "Semicolon delimited list of TRES=# values values indicating how many CPUs should be allocated for each specified TRES (currently only used for gres/gpu)"
          },
          "crontab": {
            "$ref": "#/components/schemas/v0.0.43_cron_entry",
            "description": "Specification for scrontab job (crontab entry)"
          },
          "deadline": {
            "type": "integer",
            "format": "int64",
            "description": "Latest time that the job may start (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
          },
          "delay_boot": {
            "type": "integer",
            "format": "int32",
            "description": "Number of seconds after job eligible start that nodes will be rebooted to satisfy feature specification"
          },
          "dependency": {
            "type": "string",
            "description": "Other jobs that must meet certain criteria before this job can start"
          },
          "end_time": {
            "type": "integer",
            "format": "int64",
            "description": "Expected end time (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
          },
          "environment": {
            "$ref": "#/components/schemas/v0.0.43_string_array",
            "description": "Environment variables to be set for the job"
          },
          "rlimits": {
            "type": "object",
            "properties": {
              "cpu": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Per-process CPU limit, in seconds (Per-process CPU limit, in seconds.) (64 bit integer number with flags)"
              },
              "fsize": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Largest file that can be created, in bytes (Largest file that can be created, in bytes.) (64 bit integer number with flags)"
              },
              "data": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Maximum size of data segment, in bytes (Maximum size of data segment, in bytes. ) (64 bit integer number with flags)"
              },
              "stack": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Maximum size of stack segment, in bytes (Maximum size of stack segment, in bytes.) (64 bit integer number with flags)"
              },
              "core": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Largest core file that can be created, in bytes (Largest core file that can be created, in bytes.) (64 bit integer number with flags)"
              },
              "rss": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them (Largest resident set size, in bytes. This affects swapping; processes that are exceeding their resident set size will be more likely to have physical memory taken from them.) (64 bit integer number with flags)"
              },
              "nproc": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Number of processes (Number of processes.) (64 bit integer number with flags)"
              },
              "nofile": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Number of open files (Number of open files.) (64 bit integer number with flags)"
              },
              "memlock": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Locked-in-memory address space (Locked-in-memory address space) (64 bit integer number with flags)"
              },
              "as": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Address space limit (Address space limit.) (64 bit integer number with flags)"
              }
            }
          },
          "excluded_nodes": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Comma-separated list of nodes that may not be used"
          },
          "extra": {
            "type": "string",
            "description": "Arbitrary string used for node filtering if extra constraints are enabled"
          },
          "constraints": {
            "type": "string",
            "description": "Comma-separated list of features that are required"
          },
          "group_id": {
            "type": "string",
            "description": "Group ID of the user that owns the job"
          },
          "hetjob_group": {
            "type": "integer",
            "format": "int32",
            "description": "Unique sequence number applied to this component of the heterogeneous job"
          },
          "immediate": {
            "type": "boolean",
            "description": "If true, exit if resources are not available within the time period specified"
          },
          "job_id": {
            "type": "integer",
            "format": "int32",
            "description": "Job ID"
          },
          "kill_on_node_fail": {
            "type": "boolean",
            "description": "If true, kill job on node failure"
          },
          "licenses": {
            "type": "string",
            "description": "License(s) required by the job"
          },
          "mail_type": {
            "type": "array",
            "description": "Mail event type(s)",
            "items": {
              "enum": [
                "BEGIN",
                "END",
                "FAIL",
                "REQUEUE",
                "TIME=100%",
                "TIME=90%",
                "TIME=80%",
                "TIME=50%",
                "STAGE_OUT",
                "ARRAY_TASKS",
                "INVALID_DEPENDENCY"
              ],
              "type": "string"
            }
          },
          "mail_user": {
            "type": "string",
            "description": "User to receive email notifications"
          },
          "mcs_label": {
            "type": "string",
            "description": "Multi-Category Security label on the job"
          },
          "memory_binding": {
            "type": "string",
            "description": "Binding map for map/mask_cpu"
          },
          "memory_binding_type": {
            "type": "array",
            "description": "Method for binding tasks to memory",
            "items": {
              "enum": [
                "NONE",
                "RANK",
                "MAP",
                "MASK",
                "LOCAL",
                "VERBOSE",
                "SORT",
                "PREFER"
              ],
              "type": "string"
            }
          },
          "memory_per_tres": {
            "type": "string",
            "description": "Semicolon delimited list of TRES=# values indicating how much memory in megabytes should be allocated for each specified TRES (currently only used for gres/gpu)"
          },
          "name": {
            "type": "string",
            "description": "Job name"
          },
          "network": {
            "type": "string",
            "description": "Network specs for job step"
          },
          "nice": {
            "type": "integer",
            "format": "int32",
            "description": "Requested job priority change"
          },
          "tasks": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks"
          },
          "oom_kill_step": {
            "type": "integer",
            "format": "int32",
            "description": "Kill whole step in case of OOM in one of the tasks"
          },
          "open_mode": {
            "type": "array",
            "description": "Open mode used for stdout and stderr files",
            "items": {
              "enum": [
                "APPEND",
                "TRUNCATE"
              ],
              "type": "string"
            }
          },
          "reserve_ports": {
            "type": "integer",
            "format": "int32",
            "description": "Port to send various notification msg to"
          },
          "overcommit": {
            "type": "boolean",
            "description": "Overcommit resources"
          },
          "partition": {
            "type": "string",
            "description": "Partition assigned to the job"
          },
          "distribution_plane_size": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Plane size specification when distribution specifies plane (16 bit integer number with flags)"
          },
          "power_flags": {
            "type": "array",
            "items": {},
            "deprecated": true
          },
          "prefer": {
            "type": "string",
            "description": "Comma-separated list of features that are preferred but not required"
          },
          "hold": {
            "type": "boolean",
            "description": "Hold (true) or release (false) job (Job held)"
          },
          "priority": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Request specific job priority (32 bit integer number with flags)"
          },
          "profile": {
            "type": "array",
            "description": "Profile used by the acct_gather_profile plugin",
            "items": {
              "enum": [
                "NOT_SET",
                "NONE",
                "ENERGY",
                "LUSTRE",
                "NETWORK",
                "TASK"
              ],
              "type": "string"
            }
          },
          "qos": {
            "type": "string",
            "description": "Quality of Service assigned to the job"
          },
          "reboot": {
            "type": "boolean",
            "description": "Node reboot requested before start"
          },
          "required_nodes": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Comma-separated list of required nodes"
          },
          "requeue": {
            "type": "boolean",
            "description": "Determines whether the job may be requeued"
          },
          "reservation": {
            "type": "string",
            "description": "Name of reservation to use"
          },
          "script": {
            "type": "string",
            "description": "Job batch script; only the first component in a HetJob is populated or honored"
          },
          "shared": {
            "type": "array",
            "description": "How the job can share resources with other jobs, if at all",
            "items": {
              "enum": [
                "none",
                "oversubscribe",
                "user",
                "mcs",
                "topo"
              ],
              "type": "string"
            }
          },
          "site_factor": {
            "type": "integer",
            "format": "int32",
            "description": "Site-specific priority factor"
          },
          "spank_environment": {
            "$ref": "#/components/schemas/v0.0.43_string_array",
            "description": "Environment variables for job prolog/epilog scripts as set by SPANK plugins"
          },
          "distribution": {
            "type": "string",
            "description": "Layout"
          },
          "time_limit": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum run time in minutes (32 bit integer number with flags)"
          },
          "time_minimum": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Minimum run time in minutes (32 bit integer number with flags)"
          },
          "tres_bind": {
            "type": "string",
            "description": "Task to TRES binding directives"
          },
          "tres_freq": {
            "type": "string",
            "description": "TRES frequency directives"
          },
          "tres_per_job": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated for every job"
          },
          "tres_per_node": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated for every node"
          },
          "tres_per_socket": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated for every socket"
          },
          "tres_per_task": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated for every task"
          },
          "user_id": {
            "type": "string",
            "description": "User ID that owns the job"
          },
          "wait_all_nodes": {
            "type": "boolean",
            "description": "If true, wait to start until after all nodes have booted"
          },
          "kill_warning_flags": {
            "type": "array",
            "description": "Flags related to job signals",
            "items": {
              "enum": [
                "BATCH_JOB",
                "ARRAY_TASK",
                "FULL_STEPS_ONLY",
                "FULL_JOB",
                "FEDERATION_REQUEUE",
                "HURRY",
                "OUT_OF_MEMORY",
                "NO_SIBLING_JOBS",
                "RESERVATION_JOB",
                "VERBOSE",
                "CRON_JOBS",
                "WARNING_SENT"
              ],
              "type": "string"
            }
          },
          "kill_warning_signal": {
            "type": "string",
            "description": "Signal to send when approaching end time (e.g. \"10\" or \"USR1\")"
          },
          "kill_warning_delay": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of seconds before end time to send the warning signal (16 bit integer number with flags)"
          },
          "current_working_directory": {
            "type": "string",
            "description": "Working directory to use for the job"
          },
          "cpus_per_task": {
            "type": "integer",
            "format": "int32",
            "description": "Number of CPUs required by each task"
          },
          "minimum_cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum number of CPUs required"
          },
          "maximum_cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of CPUs required"
          },
          "nodes": {
            "type": "string",
            "description": "Node count range specification (e.g. 1-15:4)"
          },
          "minimum_nodes": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum node count"
          },
          "maximum_nodes": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum node count"
          },
          "minimum_boards_per_node": {
            "type": "integer",
            "format": "int32",
            "description": "Boards per node required"
          },
          "minimum_sockets_per_board": {
            "type": "integer",
            "format": "int32",
            "description": "Sockets per board required"
          },
          "sockets_per_node": {
            "type": "integer",
            "format": "int32",
            "description": "Sockets per node required"
          },
          "threads_per_core": {
            "type": "integer",
            "format": "int32",
            "description": "Threads per core required"
          },
          "tasks_per_node": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks to invoke on each node"
          },
          "tasks_per_socket": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks to invoke on each socket"
          },
          "tasks_per_core": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks to invoke on each core"
          },
          "tasks_per_board": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks to invoke on each board"
          },
          "ntasks_per_tres": {
            "type": "integer",
            "format": "int32",
            "description": "Number of tasks that can access each GPU"
          },
          "minimum_cpus_per_node": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum number of CPUs per node"
          },
          "memory_per_cpu": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Minimum memory in megabytes per allocated CPU (64 bit integer number with flags)"
          },
          "memory_per_node": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Minimum memory in megabytes per allocated node (64 bit integer number with flags)"
          },
          "temporary_disk_per_node": {
            "type": "integer",
            "format": "int32",
            "description": "Minimum tmp disk space required per node"
          },
          "selinux_context": {
            "type": "string",
            "description": "SELinux context"
          },
          "required_switches": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum number of switches (32 bit integer number with flags)"
          },
          "segment_size": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Segment size for topology/block (16 bit integer number with flags)"
          },
          "standard_error": {
            "type": "string",
            "description": "Path to stderr file"
          },
          "standard_input": {
            "type": "string",
            "description": "Path to stdin file"
          },
          "standard_output": {
            "type": "string",
            "description": "Path to stdout file"
          },
          "wait_for_switch": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum time to wait for switches in seconds"
          },
          "wckey": {
            "type": "string",
            "description": "Workload characterization key"
          },
          "x11": {
            "type": "array",
            "description": "X11 forwarding options",
            "items": {
              "enum": [
                "FORWARD_ALL_NODES",
                "BATCH_NODE",
                "FIRST_NODE",
                "LAST_NODE"
              ],
              "type": "string"
            }
          },
          "x11_magic_cookie": {
            "type": "string",
            "description": "Magic cookie for X11 forwarding"
          },
          "x11_target_host": {
            "type": "string",
            "description": "Hostname or UNIX socket if x11_target_port=0"
          },
          "x11_target_port": {
            "type": "integer",
            "format": "int32",
            "description": "TCP port"
          }
        },
        "required": []
      },
      "v0.0.43_cron_entry": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "description": "Flags",
            "items": {
              "enum": [
                "WILD_MINUTE",
                "WILD_HOUR",
                "WILD_DAY_OF_MONTH",
                "WILD_MONTH",
                "WILD_DAY_OF_WEEK"
              ],
              "type": "string"
            }
          },
          "minute": {
            "type": "string",
            "description": "Ranged string specifying eligible minute values (e.g. 0-10,50)"
          },
          "hour": {
            "type": "string",
            "description": "Ranged string specifying eligible hour values (e.g. 0-5,23)"
          },
          "day_of_month": {
            "type": "string",
            "description": "Ranged string specifying eligible day of month values (e.g. 0-10,29)"
          },
          "month": {
            "type": "string",
            "description": "Ranged string specifying eligible month values (e.g. 0-5,12)"
          },
          "day_of_week": {
            "type": "string",
            "description": "Ranged string specifying eligible day of week values (e.g.0-3,7)"
          },
          "specification": {
            "type": "string",
            "description": "Complete time specification (* means valid for all allowed values) - minute hour day_of_month month day_of_week"
          },
          "command": {
            "type": "string",
            "description": "Command to run"
          },
          "line": {
            "type": "object",
            "properties": {
              "start": {
                "type": "integer",
                "format": "int32",
                "description": "Start of this entry in file"
              },
              "end": {
                "type": "integer",
                "format": "int32",
                "description": "End of this entry in file"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_csv_string": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_uint16_no_val_struct": {
        "type": "object",
        "properties": {
          "set": {
            "type": "boolean",
            "description": "True if number has been set; False if number is unset"
          },
          "infinite": {
            "type": "boolean",
            "description": "True if number has been set to infinite; \"set\" and \"number\" will be ignored"
          },
          "number": {
            "type": "integer",
            "format": "int32",
            "description": "If \"set\" is True the number will be set with value; otherwise ignore number contents"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_job_alloc_resp": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "integer",
            "format": "int32",
            "description": "Submitted Job ID"
          },
          "job_submit_user_msg": {
            "type": "string",
            "description": "Job submission user message"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": []
      },
      "v0.0.43_job_alloc_req": {
        "type": "object",
        "properties": {
          "hetjob": {
            "$ref": "#/components/schemas/v0.0.43_job_desc_msg_list",
            "description": "HetJob description"
          },
          "job": {
            "$ref": "#/components/schemas/v0.0.43_job_desc_msg",
            "description": "Job description"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_job_info_resp": {
        "type": "object",
        "properties": {
          "jobs": {
            "$ref": "#/components/schemas/v0.0.43_job_info_msg",
            "description": "List of jobs"
          },
          "last_backfill": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last backfill scheduler run (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "last_update": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last job change (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "jobs",
          "last_backfill",
          "last_update"
        ]
      },
      "v0.0.43_job_info_msg": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job_info"
        }
      },
      "v0.0.43_job_info": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account associated with the job"
          },
          "accrue_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "When the job started accruing age priority (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "admin_comment": {
            "type": "string",
            "description": "Arbitrary comment made by administrator"
          },
          "allocating_node": {
            "type": "string",
            "description": "Local node making the resource allocation"
          },
          "array_job_id": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Job ID of job array, or 0 if N/A (32 bit integer number with flags)"
          },
          "array_task_id": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Task ID of this task in job array (32 bit integer number with flags)"
          },
          "array_max_tasks": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum number of simultaneously running array tasks, 0 if no limit (32 bit integer number with flags)"
          },
          "array_task_string": {
            "type": "string",
            "description": "String expression of task IDs in this record"
          },
          "association_id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique identifier for the association"
          },
          "batch_features": {
            "type": "string",
            "description": "Features required for batch script's node"
          },
          "batch_flag": {
            "type": "boolean",
            "description": "True if batch job"
          },
          "batch_host": {
            "type": "string",
            "description": "Name of host running batch script"
          },
          "flags": {
            "type": "array",
            "description": "Job flags",
            "items": {
              "enum": [
                "KILL_INVALID_DEPENDENCY",
                "NO_KILL_INVALID_DEPENDENCY",
                "HAS_STATE_DIRECTORY",
                "TESTING_BACKFILL",
                "GRES_BINDING_ENFORCED",
                "TEST_NOW_ONLY",
                "SEND_JOB_ENVIRONMENT",
                "SPREAD_JOB",
                "PREFER_MINIMUM_NODE_COUNT",
                "JOB_KILL_HURRY",
                "SKIP_TRES_STRING_ACCOUNTING",
                "SIBLING_CLUSTER_UPDATE_ONLY",
                "HETEROGENEOUS_JOB",
                "EXACT_TASK_COUNT_REQUESTED",
                "EXACT_CPU_COUNT_REQUESTED",
                "TESTING_WHOLE_NODE_BACKFILL",
                "TOP_PRIORITY_JOB",
                "ACCRUE_COUNT_CLEARED",
                "GRES_BINDING_DISABLED",
                "JOB_WAS_RUNNING",
                "JOB_ACCRUE_TIME_RESET",
                "CRON_JOB",
                "EXACT_MEMORY_REQUESTED",
                "EXTERNAL_JOB",
                "USING_DEFAULT_ACCOUNT",
                "USING_DEFAULT_PARTITION",
                "USING_DEFAULT_QOS",
                "USING_DEFAULT_WCKEY",
                "DEPENDENT",
                "MAGNETIC",
                "PARTITION_ASSIGNED",
                "BACKFILL_ATTEMPTED",
                "SCHEDULING_ATTEMPTED",
                "STEPMGR_ENABLED"
              ],
              "type": "string"
            }
          },
          "burst_buffer": {
            "type": "string",
            "description": "Burst buffer specifications"
          },
          "burst_buffer_state": {
            "type": "string",
            "description": "Burst buffer state details"
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "cluster_features": {
            "type": "string",
            "description": "List of required cluster features"
          },
          "command": {
            "type": "string",
            "description": "Executed command"
          },
          "comment": {
            "type": "string",
            "description": "Arbitrary comment"
          },
          "container": {
            "type": "string",
            "description": "Absolute path to OCI container bundle"
          },
          "container_id": {
            "type": "string",
            "description": "OCI container ID"
          },
          "contiguous": {
            "type": "boolean",
            "description": "True if job requires contiguous nodes"
          },
          "core_spec": {
            "type": "integer",
            "format": "int32",
            "description": "Specialized core count"
          },
          "thread_spec": {
            "type": "integer",
            "format": "int32",
            "description": "Specialized thread count"
          },
          "cores_per_socket": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Cores per socket required (16 bit integer number with flags)"
          },
          "billable_tres": {
            "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
            "description": "Billable TRES (64 bit floating point number with flags)"
          },
          "cpus_per_task": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of CPUs required by each task (16 bit integer number with flags)"
          },
          "cpu_frequency_minimum": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Minimum CPU frequency (32 bit integer number with flags)"
          },
          "cpu_frequency_maximum": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum CPU frequency (32 bit integer number with flags)"
          },
          "cpu_frequency_governor": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "CPU frequency governor (32 bit integer number with flags)"
          },
          "cpus_per_tres": {
            "type": "string",
            "description": "Semicolon delimited list of TRES=# values indicating how many CPUs should be allocated for each specified TRES (currently only used for gres/gpu)"
          },
          "cron": {
            "type": "string",
            "description": "Time specification for scrontab job"
          },
          "deadline": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Latest time that the job may start (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "delay_boot": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Number of seconds after job eligible start that nodes will be rebooted to satisfy feature specification (32 bit integer number with flags)"
          },
          "dependency": {
            "type": "string",
            "description": "Other jobs that must meet certain criteria before this job can start"
          },
          "derived_exit_code": {
            "$ref": "#/components/schemas/v0.0.43_process_exit_code_verbose",
            "description": "Highest exit code of all job steps (return code returned by process)"
          },
          "eligible_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time when the job became eligible to run (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "end_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "End time, real or expected (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "excluded_nodes": {
            "type": "string",
            "description": "Comma-separated list of nodes that may not be used"
          },
          "exit_code": {
            "$ref": "#/components/schemas/v0.0.43_process_exit_code_verbose",
            "description": "Exit code of the job (return code returned by process)"
          },
          "extra": {
            "type": "string",
            "description": "Arbitrary string used for node filtering if extra constraints are enabled"
          },
          "failed_node": {
            "type": "string",
            "description": "Name of node that caused job failure"
          },
          "features": {
            "type": "string",
            "description": "Comma-separated list of features that are required"
          },
          "federation_origin": {
            "type": "string",
            "description": "Origin cluster's name (when using federation)"
          },
          "federation_siblings_active": {
            "type": "string",
            "description": "Active sibling job names"
          },
          "federation_siblings_viable": {
            "type": "string",
            "description": "Viable sibling job names"
          },
          "gres_detail": {
            "$ref": "#/components/schemas/v0.0.43_job_info_gres_detail",
            "description": "List of GRES index and counts allocated per node"
          },
          "group_id": {
            "type": "integer",
            "format": "int32",
            "description": "Group ID of the user that owns the job"
          },
          "group_name": {
            "type": "string",
            "description": "Group name of the user that owns the job"
          },
          "het_job_id": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Heterogeneous job ID, if applicable (32 bit integer number with flags)"
          },
          "het_job_id_set": {
            "type": "string",
            "description": "Job ID range for all heterogeneous job components"
          },
          "het_job_offset": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Unique sequence number applied to this component of the heterogeneous job (32 bit integer number with flags)"
          },
          "job_id": {
            "type": "integer",
            "format": "int32",
            "description": "Job ID"
          },
          "job_resources": {
            "$ref": "#/components/schemas/v0.0.43_job_res",
            "description": "Resources used by the job"
          },
          "job_size_str": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Number of nodes (in a range) required for this job"
          },
          "job_state": {
            "type": "array",
            "description": "Current state",
            "items": {
              "enum": [
                "PENDING",
                "RUNNING",
                "SUSPENDED",
                "COMPLETED",
                "CANCELLED",
                "FAILED",
                "TIMEOUT",
                "NODE_FAIL",
                "PREEMPTED",
                "BOOT_FAIL",
                "DEADLINE",
                "OUT_OF_MEMORY",
                "LAUNCH_FAILED",
                "REQUEUED",
                "REQUEUE_HOLD",
                "SPECIAL_EXIT",
                "RESIZING",
                "CONFIGURING",
                "COMPLETING",
                "STOPPED",
                "RECONFIG_FAIL",
                "POWER_UP_NODE",
                "REVOKED",
                "REQUEUE_FED",
                "RESV_DEL_HOLD",
                "SIGNALING",
                "STAGE_OUT"
              ],
              "type": "string"
            }
          },
          "last_sched_evaluation": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Last time job was evaluated for scheduling (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "licenses": {
            "type": "string",
            "description": "License(s) required by the job"
          },
          "licenses_allocated": {
            "type": "string",
            "description": "License(s) allocated to the job"
          },
          "mail_type": {
            "type": "array",
            "description": "Mail event type(s)",
            "items": {
              "enum": [
                "BEGIN",
                "END",
                "FAIL",
                "REQUEUE",
                "TIME=100%",
                "TIME=90%",
                "TIME=80%",
                "TIME=50%",
                "STAGE_OUT",
                "ARRAY_TASKS",
                "INVALID_DEPENDENCY"
              ],
              "type": "string"
            }
          },
          "mail_user": {
            "type": "string",
            "description": "User to receive email notifications"
          },
          "max_cpus": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum number of CPUs usable by the job (32 bit integer number with flags)"
          },
          "max_nodes": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum number of nodes usable by the job (32 bit integer number with flags)"
          },
          "mcs_label": {
            "type": "string",
            "description": "Multi-Category Security label on the job"
          },
          "memory_per_tres": {
            "type": "string",
            "description": "Semicolon delimited list of TRES=# values indicating how much memory in megabytes should be allocated for each specified TRES (currently only used for gres/gpu)"
          },
          "name": {
            "type": "string",
            "description": "Job name"
          },
          "network": {
            "type": "string",
            "description": "Network specs for the job"
          },
          "nodes": {
            "type": "string",
            "description": "Node(s) allocated to the job"
          },
          "nice": {
            "type": "integer",
            "format": "int32",
            "description": "Requested job priority change"
          },
          "tasks_per_core": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of tasks invoked on each core (16 bit integer number with flags)"
          },
          "tasks_per_tres": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of tasks that can assess each GPU (16 bit integer number with flags)"
          },
          "tasks_per_node": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of tasks invoked on each node (16 bit integer number with flags)"
          },
          "tasks_per_socket": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of tasks invoked on each socket (16 bit integer number with flags)"
          },
          "tasks_per_board": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of tasks invoked on each board (16 bit integer number with flags)"
          },
          "cpus": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Minimum number of CPUs required (32 bit integer number with flags)"
          },
          "node_count": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Minimum number of nodes required (32 bit integer number with flags)"
          },
          "tasks": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Number of tasks (32 bit integer number with flags)"
          },
          "partition": {
            "type": "string",
            "description": "Partition assigned to the job"
          },
          "prefer": {
            "type": "string",
            "description": "Feature(s) the job requested but that are not required"
          },
          "memory_per_cpu": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Minimum memory in megabytes per allocated CPU (64 bit integer number with flags)"
          },
          "memory_per_node": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Minimum memory in megabytes per allocated node (64 bit integer number with flags)"
          },
          "minimum_cpus_per_node": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Minimum number of CPUs per node (16 bit integer number with flags)"
          },
          "minimum_tmp_disk_per_node": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Minimum tmp disk space required per node (32 bit integer number with flags)"
          },
          "power": {
            "type": "object",
            "properties": {
              "flags": {
                "type": "array",
                "items": {},
                "deprecated": true
              }
            }
          },
          "preempt_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time job received preemption signal (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "preemptable_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time job becomes eligible for preemption (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "pre_sus_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Total run time prior to last suspend in seconds (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "hold": {
            "type": "boolean",
            "description": "Hold (true) or release (false) job (Job held)"
          },
          "priority": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Request specific job priority (32 bit integer number with flags)"
          },
          "priority_by_partition": {
            "$ref": "#/components/schemas/v0.0.43_priority_by_partition",
            "description": "Prospective job priority in each partition that may be used by this job"
          },
          "profile": {
            "type": "array",
            "description": "Profile used by the acct_gather_profile plugin",
            "items": {
              "enum": [
                "NOT_SET",
                "NONE",
                "ENERGY",
                "LUSTRE",
                "NETWORK",
                "TASK"
              ],
              "type": "string"
            }
          },
          "qos": {
            "type": "string",
            "description": "Quality of Service assigned to the job, if pending the QOS requested"
          },
          "reboot": {
            "type": "boolean",
            "description": "Node reboot requested before start"
          },
          "required_nodes": {
            "type": "string",
            "description": "Comma-separated list of required nodes"
          },
          "required_switches": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of switches"
          },
          "requeue": {
            "type": "boolean",
            "description": "Determines whether the job may be requeued"
          },
          "resize_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last size change (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "restart_cnt": {
            "type": "integer",
            "format": "int32",
            "description": "Number of job restarts"
          },
          "resv_name": {
            "type": "string",
            "description": "Name of reservation to use"
          },
          "scheduled_nodes": {
            "type": "string",
            "description": "List of nodes scheduled to be used for the job"
          },
          "segment_size": {
            "type": "integer",
            "format": "int32",
            "description": "Requested segment size"
          },
          "selinux_context": {
            "type": "string",
            "description": "SELinux context"
          },
          "shared": {
            "type": "array",
            "description": "How the job can share resources with other jobs, if at all",
            "items": {
              "enum": [
                "none",
                "oversubscribe",
                "user",
                "mcs",
                "topo"
              ],
              "type": "string"
            }
          },
          "sockets_per_board": {
            "type": "integer",
            "format": "int32",
            "description": "Number of sockets per board required"
          },
          "sockets_per_node": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of sockets per node required (16 bit integer number with flags)"
          },
          "start_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time execution began, or is expected to begin (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "state_description": {
            "type": "string",
            "description": "Optional details for state_reason"
          },
          "state_reason": {
            "type": "string",
            "description": "Reason for current Pending or Failed state"
          },
          "standard_input": {
            "type": "string",
            "description": "Path to stdin file"
          },
          "standard_output": {
            "type": "string",
            "description": "Path to stdout file"
          },
          "standard_error": {
            "type": "string",
            "description": "Path to stderr file"
          },
          "stdin_expanded": {
            "type": "string",
            "description": "Job stdin with expanded fields"
          },
          "stdout_expanded": {
            "type": "string",
            "description": "Job stdout with expanded fields"
          },
          "stderr_expanded": {
            "type": "string",
            "description": "Job stderr with expanded fields"
          },
          "submit_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time when the job was submitted (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "suspend_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time the job was last suspended or resumed (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "system_comment": {
            "type": "string",
            "description": "Arbitrary comment from slurmctld"
          },
          "time_limit": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Maximum run time in minutes (32 bit integer number with flags)"
          },
          "time_minimum": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Minimum run time in minutes (32 bit integer number with flags)"
          },
          "threads_per_core": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of processor threads per CPU core required (16 bit integer number with flags)"
          },
          "tres_bind": {
            "type": "string",
            "description": "Task to TRES binding directives"
          },
          "tres_freq": {
            "type": "string",
            "description": "TRES frequency directives"
          },
          "tres_per_job": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated per job"
          },
          "tres_per_node": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated per node"
          },
          "tres_per_socket": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated per socket"
          },
          "tres_per_task": {
            "type": "string",
            "description": "Comma-separated list of TRES=# values to be allocated per task"
          },
          "tres_req_str": {
            "type": "string",
            "description": "TRES requested by the job"
          },
          "tres_alloc_str": {
            "type": "string",
            "description": "TRES used by the job"
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "description": "User ID that owns the job"
          },
          "user_name": {
            "type": "string",
            "description": "User name that owns the job"
          },
          "maximum_switch_wait_time": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum time to wait for switches in seconds"
          },
          "wckey": {
            "type": "string",
            "description": "Workload characterization key"
          },
          "current_working_directory": {
            "type": "string",
            "description": "Working directory to use for the job"
          }
        },
        "required": []
      },
      "v0.0.43_process_exit_code_verbose": {
        "type": "object",
        "properties": {
          "status": {
            "type": "array",
            "description": "Status given by return code",
            "items": {
              "enum": [
                "INVALID",
                "PENDING",
                "SUCCESS",
                "ERROR",
                "SIGNALED",
                "CORE_DUMPED"
              ],
              "type": "string"
            }
          },
          "return_code": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Process return code (numeric) (32 bit integer number with flags)"
          },
          "signal": {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
                "description": "Signal sent to process (numeric) (16 bit integer number with flags)"
              },
              "name": {
                "type": "string",
                "description": "Signal sent to process (name)"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_job_info_gres_detail": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_job_res": {
        "type": "object",
        "properties": {
          "select_type": {
            "type": "array",
            "description": "Scheduler consumable resource selection type",
            "items": {
              "enum": [
                "CPU",
                "SOCKET",
                "CORE",
                "BOARD",
                "MEMORY",
                "ONE_TASK_PER_CORE",
                "PACK_NODES",
                "CORE_DEFAULT_DIST_BLOCK",
                "LLN",
                "LINEAR"
              ],
              "type": "string"
            }
          },
          "nodes": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Number of allocated nodes"
              },
              "select_type": {
                "type": "array",
                "description": "Node scheduling selection method",
                "items": {
                  "enum": [
                    "AVAILABLE",
                    "ONE_ROW",
                    "RESERVED"
                  ],
                  "type": "string"
                }
              },
              "list": {
                "type": "string",
                "description": "Node(s) allocated to the job"
              },
              "whole": {
                "type": "boolean",
                "description": "Whether whole nodes were allocated"
              },
              "allocation": {
                "$ref": "#/components/schemas/v0.0.43_job_res_nodes",
                "description": "Allocated node resources (Job resources for a node)"
              }
            }
          },
          "cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Number of allocated CPUs"
          },
          "threads_per_core": {
            "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
            "description": "Number of processor threads per CPU core (16 bit integer number with flags)"
          }
        },
        "required": [
          "select_type",
          "nodes/count",
          "nodes/select_type",
          "nodes/list",
          "cpus",
          "threads_per_core",
          "nodes/whole",
          "nodes/allocation"
        ]
      },
      "v0.0.43_job_res_nodes": {
        "type": "array",
        "description": "Job resources for a node",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job_res_node"
        }
      },
      "v0.0.43_job_res_node": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "Node index"
          },
          "name": {
            "type": "string",
            "description": "Node name"
          },
          "cpus": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of CPUs assigned to job"
              },
              "used": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of CPUs used by job"
              }
            }
          },
          "memory": {
            "type": "object",
            "properties": {
              "used": {
                "type": "integer",
                "format": "int64",
                "description": "Total memory (MiB) used by job"
              },
              "allocated": {
                "type": "integer",
                "format": "int64",
                "description": "Total memory (MiB) allocated to job"
              }
            }
          },
          "sockets": {
            "$ref": "#/components/schemas/v0.0.43_job_res_socket_array",
            "description": "Socket allocations in node"
          }
        },
        "required": [
          "index",
          "name",
          "cpus/count",
          "cpus/used",
          "memory/used",
          "memory/allocated",
          "sockets"
        ]
      },
      "v0.0.43_job_res_socket_array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job_res_socket"
        }
      },
      "v0.0.43_job_res_socket": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "Core index"
          },
          "cores": {
            "$ref": "#/components/schemas/v0.0.43_job_res_core_array",
            "description": "Core in socket"
          }
        },
        "required": [
          "index",
          "cores"
        ]
      },
      "v0.0.43_job_res_core_array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job_res_core"
        }
      },
      "v0.0.43_job_res_core": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "description": "Core index"
          },
          "status": {
            "type": "array",
            "description": "Core status",
            "items": {
              "enum": [
                "INVALID",
                "UNALLOCATED",
                "ALLOCATED",
                "IN_USE"
              ],
              "type": "string"
            }
          }
        },
        "required": [
          "index",
          "status"
        ]
      },
      "v0.0.43_priority_by_partition": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_part_prio"
        }
      },
      "v0.0.43_part_prio": {
        "type": "object",
        "properties": {
          "partition": {
            "type": "string",
            "description": "Partition name"
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "description": "Prospective job priority if it runs in this partition"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_kill_jobs_resp": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/v0.0.43_kill_jobs_resp_msg",
            "description": "resultant status of signal request (List of jobs signal responses)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "status"
        ]
      },
      "v0.0.43_kill_jobs_resp_msg": {
        "type": "array",
        "description": "List of jobs signal responses",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_kill_jobs_resp_job"
        }
      },
      "v0.0.43_kill_jobs_resp_job": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "description": "String error encountered signaling job"
              },
              "code": {
                "type": "integer",
                "format": "int32",
                "description": "Numeric error encountered signaling job"
              },
              "message": {
                "type": "string",
                "description": "Error message why signaling job failed"
              }
            }
          },
          "step_id": {
            "type": "string",
            "description": "Job or Step ID that signaling failed"
          },
          "job_id": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Job ID that signaling failed (32 bit integer number with flags)"
          },
          "federation": {
            "type": "object",
            "properties": {
              "sibling": {
                "type": "string",
                "description": "Name of federation sibling (may be empty for non-federation)"
              }
            }
          }
        },
        "required": [
          "error/string",
          "error/code",
          "error/message",
          "step_id",
          "job_id",
          "federation/sibling"
        ]
      },
      "v0.0.43_kill_jobs_msg": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Filter jobs to a specific account"
          },
          "flags": {
            "type": "array",
            "description": "Filter jobs according to flags",
            "items": {
              "enum": [
                "BATCH_JOB",
                "ARRAY_TASK",
                "FULL_STEPS_ONLY",
                "FULL_JOB",
                "FEDERATION_REQUEUE",
                "HURRY",
                "OUT_OF_MEMORY",
                "NO_SIBLING_JOBS",
                "RESERVATION_JOB",
                "VERBOSE",
                "CRON_JOBS",
                "WARNING_SENT"
              ],
              "type": "string"
            }
          },
          "job_name": {
            "type": "string",
            "description": "Filter jobs to a specific name"
          },
          "jobs": {
            "$ref": "#/components/schemas/v0.0.43_kill_jobs_msg_jobs_array",
            "description": "List of jobs to signal"
          },
          "partition": {
            "type": "string",
            "description": "Filter jobs to a specific partition"
          },
          "qos": {
            "type": "string",
            "description": "Filter jobs to a specific QOS"
          },
          "reservation": {
            "type": "string",
            "description": "Filter jobs to a specific reservation"
          },
          "signal": {
            "type": "string",
            "description": "Signal to send to jobs"
          },
          "job_state": {
            "type": "array",
            "description": "Filter jobs to a specific state",
            "items": {
              "enum": [
                "PENDING",
                "RUNNING",
                "SUSPENDED",
                "COMPLETED",
                "CANCELLED",
                "FAILED",
                "TIMEOUT",
                "NODE_FAIL",
                "PREEMPTED",
                "BOOT_FAIL",
                "DEADLINE",
                "OUT_OF_MEMORY",
                "LAUNCH_FAILED",
                "REQUEUED",
                "REQUEUE_HOLD",
                "SPECIAL_EXIT",
                "RESIZING",
                "CONFIGURING",
                "COMPLETING",
                "STOPPED",
                "RECONFIG_FAIL",
                "POWER_UP_NODE",
                "REVOKED",
                "REQUEUE_FED",
                "RESV_DEL_HOLD",
                "SIGNALING",
                "STAGE_OUT"
              ],
              "type": "string"
            }
          },
          "user_id": {
            "type": "string",
            "description": "Filter jobs to a specific numeric user id"
          },
          "user_name": {
            "type": "string",
            "description": "Filter jobs to a specific user name"
          },
          "wckey": {
            "type": "string",
            "description": "Filter jobs to a specific wckey"
          },
          "nodes": {
            "$ref": "#/components/schemas/v0.0.43_hostlist_string",
            "description": "Filter jobs to a set of nodes"
          }
        },
        "required": []
      },
      "v0.0.43_kill_jobs_msg_jobs_array": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_openapi_job_post_response": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/v0.0.43_job_array_response_array",
            "description": "Job update results (Job update results)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": []
      },
      "v0.0.43_job_array_response_array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job_array_response_msg_entry"
        }
      },
      "v0.0.43_job_array_response_msg_entry": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "integer",
            "format": "int32",
            "description": "Job ID for updated job"
          },
          "step_id": {
            "type": "string",
            "description": "Step ID for updated job"
          },
          "error": {
            "type": "string",
            "description": "Verbose update status or error"
          },
          "error_code": {
            "type": "integer",
            "format": "int32",
            "description": "Verbose update status or error"
          },
          "why": {
            "type": "string",
            "description": "Update response message"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_kill_job_resp": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/v0.0.43_kill_jobs_resp_msg",
            "description": "resultant status of signal request (List of jobs signal responses)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "status"
        ]
      },
      "v0.0.43_openapi_nodes_resp": {
        "type": "object",
        "properties": {
          "nodes": {
            "$ref": "#/components/schemas/v0.0.43_nodes",
            "description": "List of nodes"
          },
          "last_update": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last node change (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "nodes",
          "last_update"
        ]
      },
      "v0.0.43_nodes": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_node"
        }
      },
      "v0.0.43_node": {
        "type": "object",
        "properties": {
          "architecture": {
            "type": "string",
            "description": "Computer architecture"
          },
          "burstbuffer_network_address": {
            "type": "string",
            "description": "Alternate network path to be used for sbcast network traffic"
          },
          "boards": {
            "type": "integer",
            "format": "int32",
            "description": "Number of Baseboards in nodes with a baseboard controller"
          },
          "boot_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time when the node booted (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "tls_cert_last_renewal": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time when TLS certificate was created (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "cert_flags": {
            "type": "array",
            "description": "Certmgr status flags",
            "items": {
              "enum": [
                "TOKEN_SET"
              ],
              "type": "string"
            }
          },
          "cluster_name": {
            "type": "string",
            "description": "Cluster name (only set in federated environments)"
          },
          "cores": {
            "type": "integer",
            "format": "int32",
            "description": "Number of cores in a single physical processor socket"
          },
          "specialized_cores": {
            "type": "integer",
            "format": "int32",
            "description": "Number of cores reserved for system use"
          },
          "cpu_binding": {
            "type": "integer",
            "format": "int32",
            "description": "Default method for binding tasks to allocated CPUs"
          },
          "cpu_load": {
            "type": "integer",
            "format": "int32",
            "description": "CPU load as reported by the OS"
          },
          "free_mem": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Total memory in MB currently free as reported by the OS (64 bit integer number with flags)"
          },
          "cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Total CPUs, including cores and threads"
          },
          "effective_cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Number of effective CPUs (excluding specialized CPUs)"
          },
          "specialized_cpus": {
            "type": "string",
            "description": "Abstract CPU IDs on this node reserved for exclusive use by slurmd and slurmstepd"
          },
          "energy": {
            "$ref": "#/components/schemas/v0.0.43_acct_gather_energy",
            "description": "Energy usage data"
          },
          "external_sensors": {
            "type": "object",
            "properties": {},
            "deprecated": true
          },
          "extra": {
            "type": "string",
            "description": "Arbitrary string used for node filtering if extra constraints are enabled"
          },
          "power": {
            "type": "object",
            "properties": {},
            "deprecated": true
          },
          "features": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Available features"
          },
          "active_features": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Currently active features"
          },
          "gpu_spec": {
            "type": "string",
            "description": "CPU cores reserved for jobs that also use a GPU"
          },
          "gres": {
            "type": "string",
            "description": "Generic resources"
          },
          "gres_drained": {
            "type": "string",
            "description": "Drained generic resources"
          },
          "gres_used": {
            "type": "string",
            "description": "Generic resources currently in use"
          },
          "instance_id": {
            "type": "string",
            "description": "Cloud instance ID"
          },
          "instance_type": {
            "type": "string",
            "description": "Cloud instance type"
          },
          "last_busy": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time when the node was last busy (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "mcs_label": {
            "type": "string",
            "description": "Multi-Category Security label"
          },
          "specialized_memory": {
            "type": "integer",
            "format": "int64",
            "description": "Combined memory limit, in MB, for Slurm compute node daemons"
          },
          "name": {
            "type": "string",
            "description": "NodeName"
          },
          "next_state_after_reboot": {
            "type": "array",
            "description": "The state the node will be assigned after rebooting",
            "items": {
              "enum": [
                "INVALID",
                "UNKNOWN",
                "DOWN",
                "IDLE",
                "ALLOCATED",
                "ERROR",
                "MIXED",
                "FUTURE",
                "RESERVED",
                "UNDRAIN",
                "CLOUD",
                "RESUME",
                "DRAIN",
                "COMPLETING",
                "NOT_RESPONDING",
                "POWERED_DOWN",
                "FAIL",
                "POWERING_UP",
                "MAINTENANCE",
                "REBOOT_REQUESTED",
                "REBOOT_CANCELED",
                "POWERING_DOWN",
                "DYNAMIC_FUTURE",
                "REBOOT_ISSUED",
                "PLANNED",
                "INVALID_REG",
                "POWER_DOWN",
                "POWER_UP",
                "POWER_DRAIN",
                "DYNAMIC_NORM"
              ],
              "type": "string"
            }
          },
          "address": {
            "type": "string",
            "description": "NodeAddr, used to establish a communication path"
          },
          "hostname": {
            "type": "string",
            "description": "NodeHostname"
          },
          "state": {
            "type": "array",
            "description": "Node state(s) applicable to this node",
            "items": {
              "enum": [
                "INVALID",
                "UNKNOWN",
                "DOWN",
                "IDLE",
                "ALLOCATED",
                "ERROR",
                "MIXED",
                "FUTURE",
                "RESERVED",
                "UNDRAIN",
                "CLOUD",
                "RESUME",
                "DRAIN",
                "COMPLETING",
                "NOT_RESPONDING",
                "POWERED_DOWN",
                "FAIL",
                "POWERING_UP",
                "MAINTENANCE",
                "REBOOT_REQUESTED",
                "REBOOT_CANCELED",
                "POWERING_DOWN",
                "DYNAMIC_FUTURE",
                "REBOOT_ISSUED",
                "PLANNED",
                "INVALID_REG",
                "POWER_DOWN",
                "POWER_UP",
                "POWER_DRAIN",
                "DYNAMIC_NORM"
              ],
              "type": "string"
            }
          },
          "operating_system": {
            "type": "string",
            "description": "Operating system reported by the node"
          },
          "owner": {
            "type": "string",
            "description": "User allowed to run jobs on this node (unset if no restriction)"
          },
          "partitions": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Partitions containing this node"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "TCP port number of the slurmd"
          },
          "real_memory": {
            "type": "integer",
            "format": "int64",
            "description": "Total memory in MB on the node"
          },
          "res_cores_per_gpu": {
            "type": "integer",
            "format": "int32",
            "description": "Number of CPU cores per GPU restricted to GPU jobs"
          },
          "comment": {
            "type": "string",
            "description": "Arbitrary comment"
          },
          "reason": {
            "type": "string",
            "description": "Describes why the node is in a \"DOWN\", \"DRAINED\", \"DRAINING\", \"FAILING\" or \"FAIL\" state"
          },
          "reason_changed_at": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "When the reason changed (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "reason_set_by_user": {
            "type": "string",
            "description": "User who set the reason"
          },
          "resume_after": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Number of seconds after the node's state is updated to \"DOWN\" or \"DRAIN\" before scheduling a node state resume (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "reservation": {
            "type": "string",
            "description": "Name of reservation containing this node"
          },
          "alloc_memory": {
            "type": "integer",
            "format": "int64",
            "description": "Total memory in MB currently allocated for jobs"
          },
          "alloc_cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of CPUs currently allocated for jobs"
          },
          "alloc_idle_cpus": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of idle CPUs"
          },
          "tres_used": {
            "type": "string",
            "description": "Trackable resources currently allocated for jobs"
          },
          "tres_weighted": {
            "type": "number",
            "format": "double",
            "description": "Ignored. Was weighted number of billable trackable resources allocated",
            "deprecated": true
          },
          "slurmd_start_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time when the slurmd started (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "sockets": {
            "type": "integer",
            "format": "int32",
            "description": "Number of physical processor sockets/chips on the node"
          },
          "threads": {
            "type": "integer",
            "format": "int32",
            "description": "Number of logical threads in a single physical core"
          },
          "temporary_disk": {
            "type": "integer",
            "format": "int32",
            "description": "Total size in MB of temporary disk storage in TmpFS"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Weight of the node for scheduling purposes"
          },
          "topology": {
            "type": "string",
            "description": "Topology"
          },
          "tres": {
            "type": "string",
            "description": "Configured trackable resources"
          },
          "version": {
            "type": "string",
            "description": "Slurmd version"
          }
        },
        "required": []
      },
      "v0.0.43_acct_gather_energy": {
        "type": "object",
        "properties": {
          "average_watts": {
            "type": "integer",
            "format": "int32",
            "description": "Average power consumption, in watts"
          },
          "base_consumed_energy": {
            "type": "integer",
            "format": "int64",
            "description": "The energy consumed between when the node was powered on and the last time it was registered by slurmd, in joules"
          },
          "consumed_energy": {
            "type": "integer",
            "format": "int64",
            "description": "The energy consumed between the last time the node was registered by the slurmd daemon and the last node energy accounting sample, in joules"
          },
          "current_watts": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "The instantaneous power consumption at the time of the last node energy accounting sample, in watts (32 bit integer number with flags)"
          },
          "previous_consumed_energy": {
            "type": "integer",
            "format": "int64",
            "description": "Previous value of consumed_energy"
          },
          "last_collected": {
            "type": "integer",
            "format": "int64",
            "description": "Time when energy data was last retrieved (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
          }
        },
        "required": []
      },
      "v0.0.43_update_node_msg": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Arbitrary comment"
          },
          "cpu_bind": {
            "type": "integer",
            "format": "int32",
            "description": "Default method for binding tasks to allocated CPUs"
          },
          "extra": {
            "type": "string",
            "description": "Arbitrary string used for node filtering if extra constraints are enabled"
          },
          "features": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Available features"
          },
          "features_act": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "Currently active features"
          },
          "gres": {
            "type": "string",
            "description": "Generic resources"
          },
          "address": {
            "$ref": "#/components/schemas/v0.0.43_hostlist_string",
            "description": "NodeAddr, used to establish a communication path"
          },
          "hostname": {
            "$ref": "#/components/schemas/v0.0.43_hostlist_string",
            "description": "NodeHostname"
          },
          "name": {
            "$ref": "#/components/schemas/v0.0.43_hostlist_string",
            "description": "NodeName"
          },
          "state": {
            "type": "array",
            "description": "New state to assign to the node",
            "items": {
              "enum": [
                "INVALID",
                "UNKNOWN",
                "DOWN",
                "IDLE",
                "ALLOCATED",
                "ERROR",
                "MIXED",
                "FUTURE",
                "RESERVED",
                "UNDRAIN",
                "CLOUD",
                "RESUME",
                "DRAIN",
                "COMPLETING",
                "NOT_RESPONDING",
                "POWERED_DOWN",
                "FAIL",
                "POWERING_UP",
                "MAINTENANCE",
                "REBOOT_REQUESTED",
                "REBOOT_CANCELED",
                "POWERING_DOWN",
                "DYNAMIC_FUTURE",
                "REBOOT_ISSUED",
                "PLANNED",
                "INVALID_REG",
                "POWER_DOWN",
                "POWER_UP",
                "POWER_DRAIN",
                "DYNAMIC_NORM"
              ],
              "type": "string"
            }
          },
          "reason": {
            "type": "string",
            "description": "Reason for node being DOWN or DRAINING"
          },
          "reason_uid": {
            "type": "string",
            "description": "User ID to associate with the reason (needed if user root is sending message)"
          },
          "resume_after": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Number of seconds after which to automatically resume DOWN or DRAINED node (32 bit integer number with flags)"
          },
          "topology_str": {
            "type": "string",
            "description": "Topology"
          },
          "weight": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Weight of the node for scheduling purposes (32 bit integer number with flags)"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_partition_resp": {
        "type": "object",
        "properties": {
          "partitions": {
            "$ref": "#/components/schemas/v0.0.43_partition_info_msg",
            "description": "List of partitions"
          },
          "last_update": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last partition change (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "partitions",
          "last_update"
        ]
      },
      "v0.0.43_partition_info_msg": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_partition_info"
        }
      },
      "v0.0.43_partition_info": {
        "type": "object",
        "properties": {
          "nodes": {
            "type": "object",
            "properties": {
              "allowed_allocation": {
                "type": "string",
                "description": "AllocNodes - Comma-separated list of nodes from which users can submit jobs in the partition"
              },
              "configured": {
                "type": "string",
                "description": "Nodes - Comma-separated list of nodes which are associated with this partition"
              },
              "total": {
                "type": "integer",
                "format": "int32",
                "description": "TotalNodes - Number of nodes available in this partition"
              }
            }
          },
          "accounts": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "string",
                "description": "AllowAccounts - Comma-separated list of accounts which may execute jobs in the partition"
              },
              "deny": {
                "type": "string",
                "description": "DenyAccounts - Comma-separated list of accounts which may not execute jobs in the partition"
              }
            }
          },
          "groups": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "string",
                "description": "AllowGroups - Comma-separated list of group names which may execute jobs in this partition"
              }
            }
          },
          "qos": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "string",
                "description": "AllowQOS - Comma-separated list of Qos which may execute jobs in the partition"
              },
              "deny": {
                "type": "string",
                "description": "DenyQOS - Comma-separated list of Qos which may not execute jobs in the partition"
              },
              "assigned": {
                "type": "string",
                "description": "QOS - QOS name containing limits that will apply to all jobs in this partition"
              }
            }
          },
          "alternate": {
            "type": "string",
            "description": "Alternate - Partition name of alternate partition to be used if the state of this partition is DRAIN or INACTIVE"
          },
          "tres": {
            "type": "object",
            "properties": {
              "billing_weights": {
                "type": "string",
                "description": "TRESBillingWeights - Billing weights of each tracked TRES type that will be used in calculating the usage of a job"
              },
              "configured": {
                "type": "string",
                "description": "TRES - Number of each applicable TRES type available in this partition"
              }
            }
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "select_type": {
            "type": "array",
            "description": "Scheduler consumable resource selection type",
            "items": {
              "enum": [
                "CPU",
                "SOCKET",
                "CORE",
                "BOARD",
                "MEMORY",
                "ONE_TASK_PER_CORE",
                "PACK_NODES",
                "CORE_DEFAULT_DIST_BLOCK",
                "LLN",
                "LINEAR"
              ],
              "type": "string"
            }
          },
          "cpus": {
            "type": "object",
            "properties": {
              "task_binding": {
                "type": "integer",
                "format": "int32",
                "description": "CpuBind - Default method controlling how tasks are bound to allocated resources"
              },
              "total": {
                "type": "integer",
                "format": "int32",
                "description": "TotalCPUs - Number of CPUs available in this partition"
              }
            }
          },
          "defaults": {
            "type": "object",
            "properties": {
              "memory_per_cpu": {
                "type": "integer",
                "format": "int64",
                "description": "Raw value for DefMemPerCPU or DefMemPerNode"
              },
              "partition_memory_per_cpu": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "DefMemPerCPU - Default real memory size available per allocated CPU in megabytes (64 bit integer number with flags)"
              },
              "partition_memory_per_node": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "DefMemPerNode - Default real memory size available per allocated node in megabytes (64 bit integer number with flags)"
              },
              "time": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "DefaultTime - Run time limit in minutes used for jobs that don't specify a value (32 bit integer number with flags)"
              },
              "job": {
                "type": "string",
                "description": "JobDefaults - Comma-separated list of job default values (this field is only used to set new defaults)"
              }
            }
          },
          "grace_time": {
            "type": "integer",
            "format": "int32",
            "description": "GraceTime - Grace time in seconds to be extended to a job which has been selected for preemption"
          },
          "maximums": {
            "type": "object",
            "properties": {
              "cpus_per_node": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "MaxCPUsPerNode - Maximum number of CPUs on any node available to all jobs from this partition (32 bit integer number with flags)"
              },
              "cpus_per_socket": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "MaxCPUsPerSocket - Maximum number of CPUs on any node available on the all jobs from this partition (32 bit integer number with flags)"
              },
              "memory_per_cpu": {
                "type": "integer",
                "format": "int64",
                "description": "Raw value for MaxMemPerCPU or MaxMemPerNode"
              },
              "partition_memory_per_cpu": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "MaxMemPerCPU - Maximum real memory size available per allocated CPU in megabytes (64 bit integer number with flags)"
              },
              "partition_memory_per_node": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "MaxMemPerNode - Maximum real memory size available per allocated node in a job allocation in megabytes (64 bit integer number with flags)"
              },
              "nodes": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "MaxNodes - Maximum count of nodes which may be allocated to any single job (32 bit integer number with flags)"
              },
              "shares": {
                "type": "integer",
                "format": "int32",
                "description": "OverSubscribe - Controls the ability of the partition to execute more than one job at a time on each resource"
              },
              "oversubscribe": {
                "type": "object",
                "properties": {
                  "jobs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum number of jobs allowed to oversubscribe resources"
                  },
                  "flags": {
                    "type": "array",
                    "description": "Flags applicable to the OverSubscribe setting",
                    "items": {
                      "enum": [
                        "force"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "time": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "MaxTime - Maximum run time limit for jobs (32 bit integer number with flags)"
              },
              "over_time_limit": {
                "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
                "description": "OverTimeLimit - Number of minutes by which a job can exceed its time limit before being canceled (16 bit integer number with flags)"
              }
            }
          },
          "minimums": {
            "type": "object",
            "properties": {
              "nodes": {
                "type": "integer",
                "format": "int32",
                "description": "MinNodes - Minimum count of nodes which may be allocated to any single job"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "PartitionName - Name by which the partition may be referenced"
          },
          "node_sets": {
            "type": "string",
            "description": "NodeSets - Comma-separated list of nodesets which are associated with this partition"
          },
          "priority": {
            "type": "object",
            "properties": {
              "job_factor": {
                "type": "integer",
                "format": "int32",
                "description": "PriorityJobFactor - Partition factor used by priority/multifactor plugin in calculating job priority"
              },
              "tier": {
                "type": "integer",
                "format": "int32",
                "description": "PriorityTier - Controls the order in which the scheduler evaluates jobs from different partitions"
              }
            }
          },
          "timeouts": {
            "type": "object",
            "properties": {
              "resume": {
                "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
                "description": "ResumeTimeout - Resumed nodes which fail to respond in this time frame will be marked DOWN (GLOBAL if both set and infinite are false) (16 bit integer number with flags)"
              },
              "suspend": {
                "$ref": "#/components/schemas/v0.0.43_uint16_no_val_struct",
                "description": "SuspendTimeout - Maximum time permitted (in seconds) between when a node suspend request is issued and when the node is shutdown (GLOBAL if both set and infinite are false) (16 bit integer number with flags)"
              }
            }
          },
          "topology": {
            "type": "string",
            "description": "Topology - Name of the topology, defined in topology.yaml, used by jobs in this partition"
          },
          "partition": {
            "type": "object",
            "properties": {
              "state": {
                "type": "array",
                "description": "Current state(s)",
                "items": {
                  "enum": [
                    "INACTIVE",
                    "UNKNOWN",
                    "UP",
                    "DOWN",
                    "DRAIN"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "suspend_time": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "SuspendTime - Nodes which remain idle or down for this number of seconds will be placed into power save mode (GLOBAL if both set and infinite are false) (32 bit integer number with flags)"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_reservation_resp": {
        "type": "object",
        "properties": {
          "reservations": {
            "$ref": "#/components/schemas/v0.0.43_reservation_info_msg",
            "description": "List of reservations"
          },
          "last_update": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "Time of last reservation change (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "reservations",
          "last_update"
        ]
      },
      "v0.0.43_reservation_info_msg": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_reservation_info"
        }
      },
      "v0.0.43_reservation_info": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "string",
            "description": "Comma-separated list of permitted accounts"
          },
          "burst_buffer": {
            "type": "string",
            "description": "BurstBuffer - Burst buffer resources reserved"
          },
          "core_count": {
            "type": "integer",
            "format": "int32",
            "description": "CoreCnt - Number of cores reserved"
          },
          "core_specializations": {
            "$ref": "#/components/schemas/v0.0.43_reservation_info_core_spec",
            "description": "Reserved cores specification"
          },
          "end_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "EndTime (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "features": {
            "type": "string",
            "description": "Features - Expression describing the reservation's required node features"
          },
          "flags": {
            "type": "array",
            "description": "Flags associated with this reservation",
            "items": {
              "enum": [
                "MAINT",
                "NO_MAINT",
                "DAILY",
                "NO_DAILY",
                "WEEKLY",
                "NO_WEEKLY",
                "IGNORE_JOBS",
                "NO_IGNORE_JOBS",
                "ANY_NODES",
                "STATIC",
                "NO_STATIC",
                "PART_NODES",
                "NO_PART_NODES",
                "OVERLAP",
                "SPEC_NODES",
                "TIME_FLOAT",
                "REPLACE",
                "ALL_NODES",
                "PURGE_COMP",
                "WEEKDAY",
                "NO_WEEKDAY",
                "WEEKEND",
                "NO_WEEKEND",
                "FLEX",
                "NO_FLEX",
                "DURATION_PLUS",
                "DURATION_MINUS",
                "NO_HOLD_JOBS_AFTER_END",
                "NO_PURGE_COMP",
                "MAGNETIC",
                "SKIP",
                "HOURLY",
                "NO_HOURLY",
                "USER_DELETE",
                "NO_USER_DELETE",
                "REOCCURRING"
              ],
              "type": "string"
            }
          },
          "groups": {
            "type": "string",
            "description": "Groups - Comma-separated list of permitted groups"
          },
          "licenses": {
            "type": "string",
            "description": "Licenses - Comma-separated list of licenses reserved"
          },
          "max_start_delay": {
            "type": "integer",
            "format": "int32",
            "description": "MaxStartDelay - Maximum time an eligible job not requesting this reservation can delay a job requesting it in seconds"
          },
          "name": {
            "type": "string",
            "description": "ReservationName - Name of the reservation"
          },
          "node_count": {
            "type": "integer",
            "format": "int32",
            "description": "NodeCnt - Number of nodes reserved"
          },
          "node_list": {
            "type": "string",
            "description": "Nodes - Comma-separated list of node names and/or node ranges reserved"
          },
          "partition": {
            "type": "string",
            "description": "PartitionName - Partition used to reserve nodes from"
          },
          "purge_completed": {
            "type": "object",
            "properties": {
              "time": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "If PURGE_COMP flag is set, the number of seconds this reservation will sit idle until it is revoked (32 bit integer number with flags)"
              }
            }
          },
          "start_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "StartTime (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "watts": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "32 bit integer number with flags",
            "deprecated": true
          },
          "tres": {
            "type": "string",
            "description": "Comma-separated list of required TRES"
          },
          "users": {
            "type": "string",
            "description": "Comma-separated list of permitted users"
          }
        },
        "required": []
      },
      "v0.0.43_reservation_info_core_spec": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_reservation_core_spec"
        }
      },
      "v0.0.43_reservation_core_spec": {
        "type": "object",
        "properties": {
          "node": {
            "type": "string",
            "description": "Name of reserved node"
          },
          "core": {
            "type": "string",
            "description": "IDs of reserved cores"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_reservation_mod_resp": {
        "type": "object",
        "properties": {
          "reservations": {
            "$ref": "#/components/schemas/v0.0.43_reservation_desc_msg_list",
            "description": "Reservation descriptions"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "reservations"
        ]
      },
      "v0.0.43_reservation_desc_msg_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_reservation_desc_msg"
        }
      },
      "v0.0.43_reservation_desc_msg": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "List of permitted accounts"
          },
          "burst_buffer": {
            "type": "string",
            "description": "BurstBuffer"
          },
          "comment": {
            "type": "string",
            "description": "Arbitrary string"
          },
          "core_count": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Number of cores to reserve (32 bit integer number with flags)"
          },
          "duration": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "The length of a reservation in minutes (32 bit integer number with flags)"
          },
          "end_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "EndTime (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "features": {
            "type": "string",
            "description": "Requested node features. Multiple values may be \"&\" separated if all features are required (AND operation) or separated by \"|\" if any of the specified features are required (OR operation). Parenthesis are also supported for features to be ANDed together with counts of nodes having the specified features."
          },
          "flags": {
            "type": "array",
            "description": "Flags associated with this reservation. Note, to remove flags use \"NO_\" prefixed flag excluding NO_HOLD_JOBS_AFTER_END",
            "items": {
              "enum": [
                "MAINT",
                "NO_MAINT",
                "DAILY",
                "NO_DAILY",
                "WEEKLY",
                "NO_WEEKLY",
                "IGNORE_JOBS",
                "NO_IGNORE_JOBS",
                "ANY_NODES",
                "STATIC",
                "NO_STATIC",
                "PART_NODES",
                "NO_PART_NODES",
                "OVERLAP",
                "SPEC_NODES",
                "TIME_FLOAT",
                "REPLACE",
                "ALL_NODES",
                "PURGE_COMP",
                "WEEKDAY",
                "NO_WEEKDAY",
                "WEEKEND",
                "NO_WEEKEND",
                "FLEX",
                "NO_FLEX",
                "DURATION_PLUS",
                "DURATION_MINUS",
                "NO_HOLD_JOBS_AFTER_END",
                "NO_PURGE_COMP",
                "MAGNETIC",
                "SKIP",
                "HOURLY",
                "NO_HOURLY",
                "USER_DELETE",
                "NO_USER_DELETE",
                "REOCCURRING"
              ],
              "type": "string"
            }
          },
          "groups": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "List of groups permitted to use the reservation. This is mutually exclusive with users."
          },
          "licenses": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "List of license names"
          },
          "max_start_delay": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "MaxStartDelay in seconds (32 bit integer number with flags)"
          },
          "name": {
            "type": "string",
            "description": "ReservationName"
          },
          "node_count": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "NodeCnt (32 bit integer number with flags)"
          },
          "node_list": {
            "$ref": "#/components/schemas/v0.0.43_hostlist_string",
            "description": "The nodes to be reserved. Multiple node names may be specified using simple node range expressions."
          },
          "partition": {
            "type": "string",
            "description": "Partition used to reserve nodes from. This will attempt to allocate all nodes in the specified partition unless you request fewer resources than are available with core_cnt, node_cnt or tres."
          },
          "purge_completed": {
            "type": "object",
            "properties": {
              "time": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "If PURGE_COMP flag is set, the number of seconds this reservation will sit idle until it is revoked (32 bit integer number with flags)"
              }
            }
          },
          "start_time": {
            "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
            "description": "StartTime (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
          },
          "tres": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "List of trackable resources"
          },
          "users": {
            "$ref": "#/components/schemas/v0.0.43_csv_string",
            "description": "List of permitted users"
          }
        },
        "required": []
      },
      "v0.0.43_tres_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_tres"
        }
      },
      "v0.0.43_tres": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "TRES type (CPU, MEM, etc)"
          },
          "name": {
            "type": "string",
            "description": "TRES name (if applicable)"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "ID used in the database"
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "TRES count (0 if listed generically)"
          }
        },
        "required": [
          "type"
        ]
      },
      "v0.0.43_reservation_mod_req": {
        "type": "object",
        "properties": {
          "reservations": {
            "$ref": "#/components/schemas/v0.0.43_reservation_desc_msg_list",
            "description": "Array of reservation descriptions"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_slurmdbd_jobs_resp": {
        "type": "object",
        "properties": {
          "jobs": {
            "$ref": "#/components/schemas/v0.0.43_job_list",
            "description": "jobs"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "jobs"
        ]
      },
      "v0.0.43_job_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_job"
        }
      },
      "v0.0.43_job": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account the job ran under"
          },
          "comment": {
            "type": "object",
            "properties": {
              "administrator": {
                "type": "string",
                "description": "Arbitrary comment made by administrator"
              },
              "job": {
                "type": "string",
                "description": "Arbitrary comment made by user"
              },
              "system": {
                "type": "string",
                "description": "Arbitrary comment from slurmctld"
              }
            }
          },
          "allocation_nodes": {
            "type": "integer",
            "format": "int32",
            "description": "List of nodes allocated to the job"
          },
          "array": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "integer",
                "format": "int32",
                "description": "Job ID of job array, or 0 if N/A"
              },
              "limits": {
                "type": "object",
                "properties": {
                  "max": {
                    "type": "object",
                    "properties": {
                      "running": {
                        "type": "object",
                        "properties": {
                          "tasks": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of simultaneously running tasks, 0 if no limit"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "task_id": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "Task ID of this task in job array (32 bit integer number with flags)"
              },
              "task": {
                "type": "string",
                "description": "String expression of task IDs in this record"
              }
            }
          },
          "association": {
            "$ref": "#/components/schemas/v0.0.43_assoc_short",
            "description": "Unique identifier for the association"
          },
          "block": {
            "type": "string",
            "description": "The name of the block to be used (used with Blue Gene systems)"
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "constraints": {
            "type": "string",
            "description": "Feature(s) the job requested as a constraint"
          },
          "container": {
            "type": "string",
            "description": "Absolute path to OCI container bundle"
          },
          "derived_exit_code": {
            "$ref": "#/components/schemas/v0.0.43_process_exit_code_verbose",
            "description": "Highest exit code of all job steps (return code returned by process)"
          },
          "time": {
            "type": "object",
            "properties": {
              "elapsed": {
                "type": "integer",
                "format": "int32",
                "description": "Elapsed time in seconds"
              },
              "eligible": {
                "type": "integer",
                "format": "int64",
                "description": "Time when the job became eligible to run (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "end": {
                "type": "integer",
                "format": "int64",
                "description": "End time (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "planned": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Time required to start job after becoming eligible to run in seconds (64 bit integer number with flags)"
              },
              "start": {
                "type": "integer",
                "format": "int64",
                "description": "Time execution began (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "submission": {
                "type": "integer",
                "format": "int64",
                "description": "Time when the job was submitted (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "suspended": {
                "type": "integer",
                "format": "int32",
                "description": "Total time in suspended state in seconds"
              },
              "system": {
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "System CPU time used by the job in seconds"
                  },
                  "microseconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "System CPU time used by the job in microseconds"
                  }
                }
              },
              "limit": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "Maximum run time in minutes (32 bit integer number with flags)"
              },
              "total": {
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Sum of System and User CPU time used by the job in seconds"
                  },
                  "microseconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Sum of System and User CPU time used by the job in microseconds"
                  }
                }
              },
              "user": {
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User CPU time used by the job in seconds"
                  },
                  "microseconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User CPU time used by the job in microseconds"
                  }
                }
              }
            }
          },
          "exit_code": {
            "$ref": "#/components/schemas/v0.0.43_process_exit_code_verbose",
            "description": "Exit code (return code returned by process)"
          },
          "extra": {
            "type": "string",
            "description": "Arbitrary string used for node filtering if extra constraints are enabled"
          },
          "failed_node": {
            "type": "string",
            "description": "Name of node that caused job failure"
          },
          "flags": {
            "type": "array",
            "description": "Flags associated with this job",
            "items": {
              "enum": [
                "NONE",
                "CLEAR_SCHEDULING",
                "NOT_SET",
                "STARTED_ON_SUBMIT",
                "STARTED_ON_SCHEDULE",
                "STARTED_ON_BACKFILL",
                "START_RECEIVED"
              ],
              "type": "string"
            }
          },
          "group": {
            "type": "string",
            "description": "Group ID of the user that owns the job"
          },
          "het": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "integer",
                "format": "int32",
                "description": "Heterogeneous job ID, if applicable"
              },
              "job_offset": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "Unique sequence number applied to this component of the heterogeneous job (32 bit integer number with flags)"
              }
            }
          },
          "job_id": {
            "type": "integer",
            "format": "int32",
            "description": "Job ID"
          },
          "name": {
            "type": "string",
            "description": "Job name"
          },
          "licenses": {
            "type": "string",
            "description": "License(s) required by the job"
          },
          "mcs": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "Multi-Category Security label on the job"
              }
            }
          },
          "nodes": {
            "type": "string",
            "description": "Node(s) allocated to the job"
          },
          "partition": {
            "type": "string",
            "description": "Partition assigned to the job"
          },
          "hold": {
            "type": "boolean",
            "description": "Hold (true) or release (false) job (Job held)"
          },
          "priority": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Request specific job priority (32 bit integer number with flags)"
          },
          "qos": {
            "type": "string",
            "description": "Quality of Service assigned to the job"
          },
          "qosreq": {
            "type": "string",
            "description": "Requested QOS"
          },
          "required": {
            "type": "object",
            "properties": {
              "CPUs": {
                "type": "integer",
                "format": "int32",
                "description": "Minimum number of CPUs required"
              },
              "memory_per_cpu": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Minimum memory in megabytes per allocated CPU (64 bit integer number with flags)"
              },
              "memory_per_node": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Minimum memory in megabytes per allocated node (64 bit integer number with flags)"
              }
            }
          },
          "kill_request_user": {
            "type": "string",
            "description": "User ID that requested termination of the job"
          },
          "restart_cnt": {
            "type": "integer",
            "format": "int32",
            "description": "How many times this job has been requeued/restarted"
          },
          "reservation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32",
                "description": "Unique identifier of requested reservation"
              },
              "name": {
                "type": "string",
                "description": "Name of reservation to use"
              },
              "requested": {
                "type": "string",
                "description": "Comma-separated list of requested reservation names"
              }
            }
          },
          "script": {
            "type": "string",
            "description": "Job batch script; only the first component in a HetJob is populated or honored"
          },
          "segment_size": {
            "type": "integer",
            "format": "int32",
            "description": "Requested segment size"
          },
          "stdin_expanded": {
            "type": "string",
            "description": "Job stdin with expanded fields"
          },
          "stdout_expanded": {
            "type": "string",
            "description": "Job stdout with expanded fields"
          },
          "stderr_expanded": {
            "type": "string",
            "description": "Job stderr with expanded fields"
          },
          "stdout": {
            "type": "string",
            "description": "Path to stdout file"
          },
          "stderr": {
            "type": "string",
            "description": "Path to stderr file"
          },
          "stdin": {
            "type": "string",
            "description": "Path to stdin file"
          },
          "state": {
            "type": "object",
            "properties": {
              "current": {
                "type": "array",
                "description": "Current state",
                "items": {
                  "enum": [
                    "PENDING",
                    "RUNNING",
                    "SUSPENDED",
                    "COMPLETED",
                    "CANCELLED",
                    "FAILED",
                    "TIMEOUT",
                    "NODE_FAIL",
                    "PREEMPTED",
                    "BOOT_FAIL",
                    "DEADLINE",
                    "OUT_OF_MEMORY",
                    "LAUNCH_FAILED",
                    "REQUEUED",
                    "REQUEUE_HOLD",
                    "SPECIAL_EXIT",
                    "RESIZING",
                    "CONFIGURING",
                    "COMPLETING",
                    "STOPPED",
                    "RECONFIG_FAIL",
                    "POWER_UP_NODE",
                    "REVOKED",
                    "REQUEUE_FED",
                    "RESV_DEL_HOLD",
                    "SIGNALING",
                    "STAGE_OUT"
                  ],
                  "type": "string"
                }
              },
              "reason": {
                "type": "string",
                "description": "Reason for previous Pending or Failed state"
              }
            }
          },
          "steps": {
            "$ref": "#/components/schemas/v0.0.43_step_list",
            "description": "Individual steps in the job"
          },
          "submit_line": {
            "type": "string",
            "description": "Command used to submit the job"
          },
          "tres": {
            "type": "object",
            "properties": {
              "allocated": {
                "$ref": "#/components/schemas/v0.0.43_tres_list",
                "description": "Trackable resources allocated to the job"
              },
              "requested": {
                "$ref": "#/components/schemas/v0.0.43_tres_list",
                "description": "Trackable resources requested by job"
              }
            }
          },
          "used_gres": {
            "type": "string",
            "description": "Generic resources used by job"
          },
          "user": {
            "type": "string",
            "description": "User that owns the job"
          },
          "wckey": {
            "$ref": "#/components/schemas/v0.0.43_wckey_tag_struct",
            "description": "Workload characterization key (WCKey ID with tagging)"
          },
          "working_directory": {
            "type": "string",
            "description": "Path to current working directory"
          }
        },
        "required": []
      },
      "v0.0.43_assoc_short": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "Account name"
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "partition": {
            "type": "string",
            "description": "Partition name"
          },
          "user": {
            "type": "string",
            "description": "User name"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Numeric association ID"
          }
        },
        "required": [
          "user"
        ]
      },
      "v0.0.43_step_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_step"
        }
      },
      "v0.0.43_step": {
        "type": "object",
        "properties": {
          "time": {
            "type": "object",
            "properties": {
              "elapsed": {
                "type": "integer",
                "format": "int32",
                "description": "Elapsed time in seconds"
              },
              "end": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "End time (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
              },
              "start": {
                "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                "description": "Time execution began (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'); may also be infinite or unset) (64 bit integer number with flags)"
              },
              "suspended": {
                "type": "integer",
                "format": "int32",
                "description": "Total time in suspended state in seconds"
              },
              "system": {
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "System CPU time used by the step in seconds"
                  },
                  "microseconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System CPU time used by the step in microseconds"
                  }
                }
              },
              "limit": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "Maximum run time in minutes (32 bit integer number with flags)"
              },
              "total": {
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total CPU time used by the step in seconds"
                  },
                  "microseconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total CPU time used by the step in microseconds"
                  }
                }
              },
              "user": {
                "type": "object",
                "properties": {
                  "seconds": {
                    "type": "integer",
                    "format": "int64",
                    "description": "User CPU time used by the step in seconds"
                  },
                  "microseconds": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User CPU time used by the step in microseconds"
                  }
                }
              }
            }
          },
          "exit_code": {
            "$ref": "#/components/schemas/v0.0.43_process_exit_code_verbose",
            "description": "Exit code (return code returned by process)"
          },
          "nodes": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Number of nodes in the job step"
              },
              "range": {
                "type": "string",
                "description": "Node(s) allocated to the job step"
              },
              "list": {
                "$ref": "#/components/schemas/v0.0.43_hostlist",
                "description": "List of nodes used by the step"
              }
            }
          },
          "tasks": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Total number of tasks"
              }
            }
          },
          "pid": {
            "type": "string",
            "description": "Deprecated; Process ID",
            "deprecated": true
          },
          "CPU": {
            "type": "object",
            "properties": {
              "requested_frequency": {
                "type": "object",
                "properties": {
                  "min": {
                    "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                    "description": "Minimum requested CPU frequency in kHz (32 bit integer number with flags)"
                  },
                  "max": {
                    "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                    "description": "Maximum requested CPU frequency in kHz (32 bit integer number with flags)"
                  }
                }
              },
              "governor": {
                "type": "string",
                "description": "Requested CPU frequency governor in kHz"
              }
            }
          },
          "kill_request_user": {
            "type": "string",
            "description": "User ID that requested termination of the step"
          },
          "state": {
            "type": "array",
            "description": "Current state",
            "items": {
              "enum": [
                "PENDING",
                "RUNNING",
                "SUSPENDED",
                "COMPLETED",
                "CANCELLED",
                "FAILED",
                "TIMEOUT",
                "NODE_FAIL",
                "PREEMPTED",
                "BOOT_FAIL",
                "DEADLINE",
                "OUT_OF_MEMORY",
                "LAUNCH_FAILED",
                "REQUEUED",
                "REQUEUE_HOLD",
                "SPECIAL_EXIT",
                "RESIZING",
                "CONFIGURING",
                "COMPLETING",
                "STOPPED",
                "RECONFIG_FAIL",
                "POWER_UP_NODE",
                "REVOKED",
                "REQUEUE_FED",
                "RESV_DEL_HOLD",
                "SIGNALING",
                "STAGE_OUT"
              ],
              "type": "string"
            }
          },
          "statistics": {
            "type": "object",
            "properties": {
              "CPU": {
                "type": "object",
                "properties": {
                  "actual_frequency": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Average weighted CPU frequency of all tasks in kHz"
                  }
                }
              },
              "energy": {
                "type": "object",
                "properties": {
                  "consumed": {
                    "$ref": "#/components/schemas/v0.0.43_uint64_no_val_struct",
                    "description": "Total energy consumed by all tasks in a job in joules (64 bit integer number with flags)"
                  }
                }
              }
            }
          },
          "step": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Step ID (Slurm job step ID)"
              },
              "name": {
                "type": "string",
                "description": "Step name"
              },
              "stderr": {
                "type": "string",
                "description": "Path to stderr file"
              },
              "stdin": {
                "type": "string",
                "description": "Path to stdin file"
              },
              "stdout": {
                "type": "string",
                "description": "Path to stdout file"
              },
              "stderr_expanded": {
                "type": "string",
                "description": "Step stderr with expanded fields"
              },
              "stdin_expanded": {
                "type": "string",
                "description": "Step stdin with expanded fields"
              },
              "stdout_expanded": {
                "type": "string",
                "description": "Step stdout with expanded fields"
              }
            }
          },
          "task": {
            "type": "object",
            "properties": {
              "distribution": {
                "type": "string",
                "description": "The layout of the step was when it was running"
              }
            }
          },
          "tres": {
            "type": "object",
            "properties": {
              "requested": {
                "type": "object",
                "properties": {
                  "max": {
                    "$ref": "#/components/schemas/v0.0.43_step_tres_req_max",
                    "description": "Maximum TRES usage requested among all tasks"
                  },
                  "min": {
                    "$ref": "#/components/schemas/v0.0.43_step_tres_req_min",
                    "description": "Minimum TRES usage requested among all tasks"
                  },
                  "average": {
                    "$ref": "#/components/schemas/v0.0.43_tres_list",
                    "description": "Average TRES usage requested among all tasks"
                  },
                  "total": {
                    "$ref": "#/components/schemas/v0.0.43_tres_list",
                    "description": "Total TRES usage requested among all tasks"
                  }
                }
              },
              "consumed": {
                "type": "object",
                "properties": {
                  "max": {
                    "$ref": "#/components/schemas/v0.0.43_step_tres_usage_max",
                    "description": "Maximum TRES usage consumed among all tasks"
                  },
                  "min": {
                    "$ref": "#/components/schemas/v0.0.43_step_tres_usage_min",
                    "description": "Minimum TRES usage consumed among all tasks"
                  },
                  "average": {
                    "$ref": "#/components/schemas/v0.0.43_tres_list",
                    "description": "Average TRES usage consumed among all tasks"
                  },
                  "total": {
                    "$ref": "#/components/schemas/v0.0.43_tres_list",
                    "description": "Total TRES usage consumed among all tasks"
                  }
                }
              },
              "allocated": {
                "$ref": "#/components/schemas/v0.0.43_tres_list",
                "description": "Trackable resources allocated to the step"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_hostlist": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_step_tres_req_max": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_tres"
        }
      },
      "v0.0.43_step_tres_req_min": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_tres"
        }
      },
      "v0.0.43_step_tres_usage_max": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_tres"
        }
      },
      "v0.0.43_step_tres_usage_min": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_tres"
        }
      },
      "v0.0.43_wckey_tag_struct": {
        "type": "object",
        "properties": {
          "wckey": {
            "type": "string",
            "description": "WCKey name"
          },
          "flags": {
            "type": "array",
            "description": "Active flags",
            "items": {
              "enum": [
                "ASSIGNED_DEFAULT"
              ],
              "type": "string"
            }
          }
        },
        "required": [
          "wckey",
          "flags"
        ]
      },
      "v0.0.43_openapi_slurmdbd_config_resp": {
        "type": "object",
        "properties": {
          "clusters": {
            "$ref": "#/components/schemas/v0.0.43_cluster_rec_list",
            "description": "Clusters"
          },
          "tres": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "TRES"
          },
          "accounts": {
            "$ref": "#/components/schemas/v0.0.43_account_list",
            "description": "Accounts"
          },
          "users": {
            "$ref": "#/components/schemas/v0.0.43_user_list",
            "description": "Users"
          },
          "qos": {
            "$ref": "#/components/schemas/v0.0.43_qos_list",
            "description": "QOS"
          },
          "wckeys": {
            "$ref": "#/components/schemas/v0.0.43_wckey_list",
            "description": "WCKeys"
          },
          "associations": {
            "$ref": "#/components/schemas/v0.0.43_assoc_list",
            "description": "Associations"
          },
          "instances": {
            "$ref": "#/components/schemas/v0.0.43_instance_list",
            "deprecated": true
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": []
      },
      "v0.0.43_cluster_rec_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_cluster_rec"
        }
      },
      "v0.0.43_cluster_rec": {
        "type": "object",
        "properties": {
          "controller": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string",
                "description": "ControlHost"
              },
              "port": {
                "type": "integer",
                "format": "int32",
                "description": "ControlPort"
              }
            }
          },
          "flags": {
            "type": "array",
            "description": "Flags",
            "items": {
              "enum": [
                "DELETED",
                "REGISTERING",
                "MULTIPLE_SLURMD",
                "FEDERATION",
                "EXTERNAL"
              ],
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "ClusterName"
          },
          "nodes": {
            "type": "string",
            "description": "Node names"
          },
          "select_plugin": {
            "type": "string",
            "deprecated": true
          },
          "associations": {
            "type": "object",
            "properties": {
              "root": {
                "$ref": "#/components/schemas/v0.0.43_assoc_short",
                "description": "Root association information"
              }
            }
          },
          "rpc_version": {
            "type": "integer",
            "format": "int32",
            "description": "RPC version used in the cluster"
          },
          "tres": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "Trackable resources"
          }
        },
        "required": []
      },
      "v0.0.43_account_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_account"
        }
      },
      "v0.0.43_account": {
        "type": "object",
        "properties": {
          "associations": {
            "$ref": "#/components/schemas/v0.0.43_assoc_short_list",
            "description": "Associations involving this account (only populated if requested)"
          },
          "coordinators": {
            "$ref": "#/components/schemas/v0.0.43_coord_list",
            "description": "List of users that are a coordinator of this account (only populated if requested)"
          },
          "description": {
            "type": "string",
            "description": "Arbitrary string describing the account"
          },
          "name": {
            "type": "string",
            "description": "Account name"
          },
          "organization": {
            "type": "string",
            "description": "Organization to which the account belongs"
          },
          "flags": {
            "type": "array",
            "description": "Flags associated with this account",
            "items": {
              "enum": [
                "DELETED",
                "WithAssociations",
                "WithCoordinators",
                "NoUsersAreCoords",
                "UsersAreCoords"
              ],
              "type": "string"
            }
          }
        },
        "required": [
          "description",
          "name",
          "organization"
        ]
      },
      "v0.0.43_assoc_short_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_assoc_short"
        }
      },
      "v0.0.43_coord_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_coord"
        }
      },
      "v0.0.43_coord": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name"
          },
          "direct": {
            "type": "boolean",
            "description": "Indicates whether the coordinator was directly assigned to this account"
          }
        },
        "required": [
          "name"
        ]
      },
      "v0.0.43_user_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_user"
        }
      },
      "v0.0.43_user": {
        "type": "object",
        "properties": {
          "administrator_level": {
            "type": "array",
            "description": "AdminLevel granted to the user",
            "items": {
              "enum": [
                "Not Set",
                "None",
                "Operator",
                "Administrator"
              ],
              "type": "string"
            }
          },
          "associations": {
            "$ref": "#/components/schemas/v0.0.43_assoc_short_list",
            "description": "Associations created for this user"
          },
          "coordinators": {
            "$ref": "#/components/schemas/v0.0.43_coord_list",
            "description": "Accounts this user is a coordinator for"
          },
          "default": {
            "type": "object",
            "properties": {
              "account": {
                "type": "string",
                "description": "Default account"
              },
              "wckey": {
                "type": "string",
                "description": "Default WCKey"
              }
            }
          },
          "flags": {
            "type": "array",
            "description": "Flags associated with this user",
            "items": {
              "enum": [
                "NONE",
                "DELETED"
              ],
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "old_name": {
            "type": "string",
            "description": "Previous user name"
          },
          "wckeys": {
            "$ref": "#/components/schemas/v0.0.43_wckey_list",
            "description": "List of available WCKeys"
          }
        },
        "required": [
          "name"
        ]
      },
      "v0.0.43_wckey_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_wckey"
        }
      },
      "v0.0.43_wckey": {
        "type": "object",
        "properties": {
          "accounting": {
            "$ref": "#/components/schemas/v0.0.43_accounting_list",
            "description": "Accounting records containing related resource usage"
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique ID for this user-cluster-wckey combination"
          },
          "name": {
            "type": "string",
            "description": "WCKey name"
          },
          "user": {
            "type": "string",
            "description": "User name"
          },
          "flags": {
            "type": "array",
            "description": "Flags associated with this WCKey",
            "items": {
              "enum": [
                "DELETED"
              ],
              "type": "string"
            }
          }
        },
        "required": [
          "cluster",
          "name",
          "user"
        ]
      },
      "v0.0.43_accounting_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_accounting"
        }
      },
      "v0.0.43_accounting": {
        "type": "object",
        "properties": {
          "allocated": {
            "type": "object",
            "properties": {
              "seconds": {
                "type": "integer",
                "format": "int64",
                "description": "Number of seconds allocated"
              }
            }
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Association ID or Workload characterization key ID"
          },
          "id_alt": {
            "type": "integer",
            "format": "int32",
            "description": "Alternate ID (not currently used)"
          },
          "start": {
            "type": "integer",
            "format": "int64",
            "description": "When the record was started (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
          },
          "TRES": {
            "$ref": "#/components/schemas/v0.0.43_tres",
            "description": "Trackable resources"
          }
        },
        "required": []
      },
      "v0.0.43_qos_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_qos"
        }
      },
      "v0.0.43_qos": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Arbitrary description"
          },
          "flags": {
            "type": "array",
            "description": "Flags, to avoid modifying current values specify NOT_SET",
            "items": {
              "enum": [
                "NOT_SET",
                "ADD",
                "REMOVE",
                "DELETED",
                "PARTITION_MINIMUM_NODE",
                "PARTITION_MAXIMUM_NODE",
                "PARTITION_TIME_LIMIT",
                "ENFORCE_USAGE_THRESHOLD",
                "NO_RESERVE",
                "REQUIRED_RESERVATION",
                "DENY_LIMIT",
                "OVERRIDE_PARTITION_QOS",
                "PARTITION_QOS",
                "NO_DECAY",
                "USAGE_FACTOR_SAFE",
                "RELATIVE"
              ],
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique ID"
          },
          "limits": {
            "type": "object",
            "properties": {
              "grace_time": {
                "type": "integer",
                "format": "int32",
                "description": "GraceTime - Preemption grace time in seconds to be extended to a job which has been selected for preemption"
              },
              "max": {
                "type": "object",
                "properties": {
                  "active_jobs": {
                    "type": "object",
                    "properties": {
                      "accruing": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpJobsAccrue - Maximum number of pending jobs able to accrue age priority (32 bit integer number with flags)"
                      },
                      "count": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpJobs - Maximum number of running jobs (32 bit integer number with flags)"
                      }
                    }
                  },
                  "jobs": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpSubmitJobs - Maximum number of jobs in a pending or running state at any time (32 bit integer number with flags)"
                      },
                      "active_jobs": {
                        "type": "object",
                        "properties": {
                          "per": {
                            "type": "object",
                            "properties": {
                              "account": {
                                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                                "description": "MaxJobsPerAccount - Maximum number of running jobs per account (32 bit integer number with flags)"
                              },
                              "user": {
                                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                                "description": "MaxJobsPerUser - Maximum number of running jobs per user (32 bit integer number with flags)"
                              }
                            }
                          }
                        }
                      },
                      "per": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                            "description": "MaxSubmitJobsPerAccount - Maximum number of jobs in a pending or running state per account (32 bit integer number with flags)"
                          },
                          "user": {
                            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                            "description": "MaxSubmitJobsPerUser - Maximum number of jobs in a pending or running state per user (32 bit integer number with flags)"
                          }
                        }
                      }
                    }
                  },
                  "tres": {
                    "type": "object",
                    "properties": {
                      "total": {
                        "$ref": "#/components/schemas/v0.0.43_tres_list",
                        "description": "GrpTRES - Maximum number of TRES able to be allocated by running jobs"
                      },
                      "minutes": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "GrpTRESMins - Maximum number of TRES minutes that can possibly be used by past, present, and future jobs"
                          },
                          "per": {
                            "type": "object",
                            "properties": {
                              "qos": {
                                "$ref": "#/components/schemas/v0.0.43_tres_list",
                                "description": "GrpTRESRunMins - Maximum number of TRES minutes able to be allocated by running jobs"
                              },
                              "job": {
                                "$ref": "#/components/schemas/v0.0.43_tres_list",
                                "description": "MaxTRESMinsPerJob - Maximum number of TRES minutes each job can use"
                              },
                              "account": {
                                "$ref": "#/components/schemas/v0.0.43_tres_list",
                                "description": "MaxTRESRunMinsPerAccount - Maximum number of TRES minutes each account can use"
                              },
                              "user": {
                                "$ref": "#/components/schemas/v0.0.43_tres_list",
                                "description": "MaxTRESRunMinsPerUser - Maximum number of TRES minutes each user can use"
                              }
                            }
                          }
                        }
                      },
                      "per": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "MaxTRESPerAccount - Maximum number of TRES each account can use"
                          },
                          "job": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "MaxTRESPerJob - Maximum number of TRES each job can use"
                          },
                          "node": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "MaxTRESPerNode - Maximum number of TRES each node in a job allocation can use"
                          },
                          "user": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "MaxTRESPerUser - Maximum number of TRES each user can use"
                          }
                        }
                      }
                    }
                  },
                  "wall_clock": {
                    "type": "object",
                    "properties": {
                      "per": {
                        "type": "object",
                        "properties": {
                          "qos": {
                            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                            "description": "GrpWall - Maximum wall clock time in minutes able to be allocated by running jobs (32 bit integer number with flags)"
                          },
                          "job": {
                            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                            "description": "MaxWallDurationPerJob - Maximum wall clock time in minutes each job can use (32 bit integer number with flags)"
                          }
                        }
                      }
                    }
                  },
                  "accruing": {
                    "type": "object",
                    "properties": {
                      "per": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                            "description": "MaxJobsAccruePerAccount - Maximum number of pending jobs an account (or subacct) can have accruing age priority (32 bit integer number with flags)"
                          },
                          "user": {
                            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                            "description": "MaxJobsAccruePerUser - Maximum number of pending jobs a user can have accruing age priority (32 bit integer number with flags)"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "factor": {
                "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
                "description": "LimitFactor - A float that is factored into an association's [Grp|Max]TRES limits (64 bit floating point number with flags)"
              },
              "min": {
                "type": "object",
                "properties": {
                  "priority_threshold": {
                    "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                    "description": "MinPrioThreshold - Minimum priority required to reserve resources when scheduling (32 bit integer number with flags)"
                  },
                  "tres": {
                    "type": "object",
                    "properties": {
                      "per": {
                        "type": "object",
                        "properties": {
                          "job": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "MinTRESPerJob - Minimum number of TRES each job running under this QOS must request"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "preempt": {
            "type": "object",
            "properties": {
              "list": {
                "$ref": "#/components/schemas/v0.0.43_qos_preempt_list",
                "description": "Other QOS's this QOS can preempt"
              },
              "mode": {
                "type": "array",
                "description": "PreemptMode - Mechanism used to preempt jobs or enable gang scheduling",
                "items": {
                  "enum": [
                    "DISABLED",
                    "SUSPEND",
                    "REQUEUE",
                    "CANCEL",
                    "GANG"
                  ],
                  "type": "string"
                }
              },
              "exempt_time": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "PreemptExemptTime - Specifies a minimum run time for jobs before they are considered for preemption (32 bit integer number with flags)"
              }
            }
          },
          "priority": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Priority - QOS priority factor (32 bit integer number with flags)"
          },
          "usage_factor": {
            "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
            "description": "UsageFactor - A float that is factored into a job's TRES usage (64 bit floating point number with flags)"
          },
          "usage_threshold": {
            "$ref": "#/components/schemas/v0.0.43_float64_no_val_struct",
            "description": "UsageThreshold - A float representing the lowest fairshare of an association allowed to run a job (64 bit floating point number with flags)"
          }
        },
        "required": []
      },
      "v0.0.43_qos_preempt_list": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_assoc_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_assoc"
        }
      },
      "v0.0.43_assoc": {
        "type": "object",
        "properties": {
          "accounting": {
            "$ref": "#/components/schemas/v0.0.43_accounting_list",
            "description": "Accounting records containing related resource usage"
          },
          "account": {
            "type": "string",
            "description": "Account name"
          },
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "comment": {
            "type": "string",
            "description": "Arbitrary comment"
          },
          "default": {
            "type": "object",
            "properties": {
              "qos": {
                "type": "string",
                "description": "Default QOS"
              }
            }
          },
          "flags": {
            "type": "array",
            "description": "Flags on the association",
            "items": {
              "enum": [
                "DELETED",
                "NoUpdate",
                "Exact",
                "NoUsersAreCoords",
                "UsersAreCoords"
              ],
              "type": "string"
            }
          },
          "max": {
            "type": "object",
            "properties": {
              "jobs": {
                "type": "object",
                "properties": {
                  "per": {
                    "type": "object",
                    "properties": {
                      "count": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpJobs - Maximum number of running jobs in this association and its children (32 bit integer number with flags)"
                      },
                      "accruing": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpJobsAccrue - Maximum number of pending jobs able to accrue age priority in this association and its children (32 bit integer number with flags)"
                      },
                      "submitted": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpSubmitJobs - Maximum number of jobs in a pending or running state at any time in this association and its children (32 bit integer number with flags)"
                      },
                      "wall_clock": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "MaxWallDurationPerJob - Maximum wall clock time in minutes each job can use in this association (32 bit integer number with flags)"
                      }
                    }
                  },
                  "active": {
                    "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                    "description": "MaxJobs - Maximum number of running jobs per user in this association (32 bit integer number with flags)"
                  },
                  "accruing": {
                    "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                    "description": "MaxJobsAccrue - Maximum number of pending jobs able to accrue age priority at any given time in this association (32 bit integer number with flags)"
                  },
                  "total": {
                    "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                    "description": "MaxSubmitJobs - Maximum number of jobs in a pending or running state at any time in this association (32 bit integer number with flags)"
                  }
                }
              },
              "tres": {
                "type": "object",
                "properties": {
                  "total": {
                    "$ref": "#/components/schemas/v0.0.43_tres_list",
                    "description": "GrpTRES - Maximum number of TRES able to be allocated by running jobs in this association and its children"
                  },
                  "group": {
                    "type": "object",
                    "properties": {
                      "minutes": {
                        "$ref": "#/components/schemas/v0.0.43_tres_list",
                        "description": "GrpTRESMins - Maximum number of TRES minutes that can possibly be used by past, present, and future jobs in this association and its children"
                      },
                      "active": {
                        "$ref": "#/components/schemas/v0.0.43_tres_list",
                        "description": "GrpTRESRunMins - Maximum number of TRES minutes able to be allocated by running jobs in this association and its children"
                      }
                    }
                  },
                  "minutes": {
                    "type": "object",
                    "properties": {
                      "total": {
                        "$ref": "#/components/schemas/v0.0.43_tres_list",
                        "description": "Not implemented"
                      },
                      "per": {
                        "type": "object",
                        "properties": {
                          "job": {
                            "$ref": "#/components/schemas/v0.0.43_tres_list",
                            "description": "MaxTRESMinsPerJob - Maximum number of TRES minutes each job can use in this association"
                          }
                        }
                      }
                    }
                  },
                  "per": {
                    "type": "object",
                    "properties": {
                      "job": {
                        "$ref": "#/components/schemas/v0.0.43_tres_list",
                        "description": "MaxTRESPerJob - Maximum number of TRES each job can use in this association"
                      },
                      "node": {
                        "$ref": "#/components/schemas/v0.0.43_tres_list",
                        "description": "MaxTRESPerNode - Maximum number of TRES each node in a job allocation can use in this association"
                      }
                    }
                  }
                }
              },
              "per": {
                "type": "object",
                "properties": {
                  "account": {
                    "type": "object",
                    "properties": {
                      "wall_clock": {
                        "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                        "description": "GrpWall - Maximum wall clock time in minutes able to be allocated by running jobs in this association and its children (32 bit integer number with flags)"
                      }
                    }
                  }
                }
              }
            }
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Unique ID (Association ID)"
          },
          "is_default": {
            "type": "boolean",
            "description": "Is default association for user"
          },
          "lineage": {
            "type": "string",
            "description": "Complete path up the hierarchy to the root association"
          },
          "min": {
            "type": "object",
            "properties": {
              "priority_threshold": {
                "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
                "description": "MinPrioThreshold - Minimum priority required to reserve resources when scheduling (32 bit integer number with flags)"
              }
            }
          },
          "parent_account": {
            "type": "string",
            "description": "Name of parent account"
          },
          "partition": {
            "type": "string",
            "description": "Partition name"
          },
          "priority": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Association priority factor (32 bit integer number with flags)"
          },
          "qos": {
            "$ref": "#/components/schemas/v0.0.43_qos_string_id_list",
            "description": "List of available QOS names (List of QOS names)"
          },
          "shares_raw": {
            "type": "integer",
            "format": "int32",
            "description": "Allocated shares used for fairshare calculation"
          },
          "user": {
            "type": "string",
            "description": "User name"
          }
        },
        "required": [
          "user"
        ]
      },
      "v0.0.43_qos_string_id_list": {
        "type": "array",
        "description": "List of QOS names",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_instance_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_instance"
        }
      },
      "v0.0.43_instance": {
        "type": "object",
        "properties": {
          "cluster": {
            "type": "string",
            "description": "Cluster name"
          },
          "extra": {
            "type": "string",
            "description": "Arbitrary string used for node filtering if extra constraints are enabled"
          },
          "instance_id": {
            "type": "string",
            "description": "Cloud instance ID"
          },
          "instance_type": {
            "type": "string",
            "description": "Cloud instance type"
          },
          "node_name": {
            "type": "string",
            "description": "NodeName"
          },
          "time": {
            "type": "object",
            "properties": {
              "time_end": {
                "type": "integer",
                "format": "int64",
                "description": "When the instance will end (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "time_start": {
                "type": "integer",
                "format": "int64",
                "description": "When the instance will start (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_openapi_tres_resp": {
        "type": "object",
        "properties": {
          "TRES": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "TRES"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "TRES"
        ]
      },
      "v0.0.43_openapi_slurmdbd_qos_resp": {
        "type": "object",
        "properties": {
          "qos": {
            "$ref": "#/components/schemas/v0.0.43_qos_list",
            "description": "List of QOS"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "qos"
        ]
      },
      "v0.0.43_openapi_slurmdbd_qos_removed_resp": {
        "type": "object",
        "properties": {
          "removed_qos": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "removed QOS"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "removed_qos"
        ]
      },
      "v0.0.43_string_list": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "v0.0.43_openapi_assocs_resp": {
        "type": "object",
        "properties": {
          "associations": {
            "$ref": "#/components/schemas/v0.0.43_assoc_list",
            "description": "associations"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "associations"
        ]
      },
      "v0.0.43_openapi_assocs_removed_resp": {
        "type": "object",
        "properties": {
          "removed_associations": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "removed_associations"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "removed_associations"
        ]
      },
      "v0.0.43_openapi_instances_resp": {
        "type": "object",
        "properties": {
          "instances": {
            "$ref": "#/components/schemas/v0.0.43_instance_list",
            "description": "instances"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "instances"
        ]
      },
      "v0.0.43_openapi_users_resp": {
        "type": "object",
        "properties": {
          "users": {
            "$ref": "#/components/schemas/v0.0.43_user_list",
            "description": "users"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "users"
        ]
      },
      "v0.0.43_openapi_users_add_cond_resp_str": {
        "type": "object",
        "properties": {
          "added_users": {
            "type": "string",
            "description": "added_users"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "added_users"
        ]
      },
      "v0.0.43_openapi_users_add_cond_resp": {
        "type": "object",
        "properties": {
          "association_condition": {
            "$ref": "#/components/schemas/v0.0.43_users_add_cond",
            "description": "Filters to select associations for users"
          },
          "user": {
            "$ref": "#/components/schemas/v0.0.43_user_short",
            "description": "Admin level of user, DefaultAccount, DefaultWCKey"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "association_condition",
          "user"
        ]
      },
      "v0.0.43_users_add_cond": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV accounts list"
          },
          "association": {
            "$ref": "#/components/schemas/v0.0.43_assoc_rec_set",
            "description": "Association limits and options"
          },
          "clusters": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV clusters list"
          },
          "partitions": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV partitions list"
          },
          "users": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV users list"
          },
          "wckeys": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV WCKeys list"
          }
        },
        "required": [
          "users"
        ]
      },
      "v0.0.43_assoc_rec_set": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Arbitrary comment"
          },
          "defaultqos": {
            "type": "string",
            "description": "Default QOS"
          },
          "grpjobs": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "GrpJobs - Maximum number of running jobs in this association and its children (32 bit integer number with flags)"
          },
          "grpjobsaccrue": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "GrpJobsAccrue - Maximum number of pending jobs able to accrue age priority in this association and its children (32 bit integer number with flags)"
          },
          "grpsubmitjobs": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "GrpSubmitJobs - Maximum number of jobs in a pending or running state at any time in this association and its children (32 bit integer number with flags)"
          },
          "grptres": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "GrpTRES - Maximum number of TRES able to be allocated by running jobs in this association and its children"
          },
          "grptresmins": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "GrpTRESMins - Maximum number of TRES minutes that can possibly be used by past, present, and future jobs in this association and its children"
          },
          "grptresrunmins": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "GrpTRESRunMins - Maximum number of TRES minutes able to be allocated by running jobs in this association and its children"
          },
          "grpwall": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "GrpWall - Maximum wall clock time in minutes able to be allocated by running jobs in this association and its children (32 bit integer number with flags)"
          },
          "maxjobs": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "MaxJobs - Maximum number of running jobs per user in this association (32 bit integer number with flags)"
          },
          "maxjobsaccrue": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "MaxJobsAccrue - Maximum number of pending jobs able to accrue age priority at any given time in this association (32 bit integer number with flags)"
          },
          "maxsubmitjobs": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "MaxSubmitJobs - Maximum number of jobs in a pending or running state at any time in this association (32 bit integer number with flags)"
          },
          "maxtresminsperjob": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "MaxTRESMinsPerJob - Maximum number of TRES minutes each job can use in this association"
          },
          "maxtresrunmins": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "Not implemented"
          },
          "maxtresperjob": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "MaxTRESPerJob - Maximum number of TRES each job can use in this association"
          },
          "maxtrespernode": {
            "$ref": "#/components/schemas/v0.0.43_tres_list",
            "description": "MaxTRESPerNode - Maximum number of TRES each node in a job allocation can use in this association"
          },
          "maxwalldurationperjob": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "MaxWallDurationPerJob - Maximum wall clock time in minutes each job can use in this association (32 bit integer number with flags)"
          },
          "minpriothresh": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "MinPrioThreshold - Minimum priority required to reserve resources when scheduling (32 bit integer number with flags)"
          },
          "parent": {
            "type": "string",
            "description": "Name of parent account"
          },
          "priority": {
            "$ref": "#/components/schemas/v0.0.43_uint32_no_val_struct",
            "description": "Association priority factor (32 bit integer number with flags)"
          },
          "qoslevel": {
            "$ref": "#/components/schemas/v0.0.43_qos_string_id_list",
            "description": "List of available QOS names (List of QOS names)"
          },
          "fairshare": {
            "type": "integer",
            "format": "int32",
            "description": "Allocated shares used for fairshare calculation"
          }
        },
        "required": []
      },
      "v0.0.43_user_short": {
        "type": "object",
        "properties": {
          "adminlevel": {
            "type": "array",
            "description": "AdminLevel granted to the user",
            "items": {
              "enum": [
                "Not Set",
                "None",
                "Operator",
                "Administrator"
              ],
              "type": "string"
            }
          },
          "defaultaccount": {
            "type": "string",
            "description": "Default account"
          },
          "defaultwckey": {
            "type": "string",
            "description": "Default WCKey"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_clusters_removed_resp": {
        "type": "object",
        "properties": {
          "deleted_clusters": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "deleted_clusters"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "deleted_clusters"
        ]
      },
      "v0.0.43_openapi_clusters_resp": {
        "type": "object",
        "properties": {
          "clusters": {
            "$ref": "#/components/schemas/v0.0.43_cluster_rec_list",
            "description": "clusters"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "clusters"
        ]
      },
      "v0.0.43_openapi_wckey_removed_resp": {
        "type": "object",
        "properties": {
          "deleted_wckeys": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "deleted wckeys"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "deleted_wckeys"
        ]
      },
      "v0.0.43_openapi_wckey_resp": {
        "type": "object",
        "properties": {
          "wckeys": {
            "$ref": "#/components/schemas/v0.0.43_wckey_list",
            "description": "wckeys"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "wckeys"
        ]
      },
      "v0.0.43_openapi_accounts_removed_resp": {
        "type": "object",
        "properties": {
          "removed_accounts": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "removed_accounts"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "removed_accounts"
        ]
      },
      "v0.0.43_openapi_accounts_resp": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/v0.0.43_account_list",
            "description": "accounts"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "accounts"
        ]
      },
      "v0.0.43_openapi_accounts_add_cond_resp_str": {
        "type": "object",
        "properties": {
          "added_accounts": {
            "type": "string",
            "description": "added_accounts"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "added_accounts"
        ]
      },
      "v0.0.43_openapi_accounts_add_cond_resp": {
        "type": "object",
        "properties": {
          "association_condition": {
            "$ref": "#/components/schemas/v0.0.43_accounts_add_cond",
            "description": "CSV list of accounts, association limits and options, CSV list of clusters"
          },
          "account": {
            "$ref": "#/components/schemas/v0.0.43_account_short",
            "description": "Account organization and description"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": []
      },
      "v0.0.43_accounts_add_cond": {
        "type": "object",
        "properties": {
          "accounts": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV accounts list"
          },
          "association": {
            "$ref": "#/components/schemas/v0.0.43_assoc_rec_set",
            "description": "Association limits and options"
          },
          "clusters": {
            "$ref": "#/components/schemas/v0.0.43_string_list",
            "description": "CSV clusters list"
          }
        },
        "required": [
          "accounts"
        ]
      },
      "v0.0.43_account_short": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Arbitrary string describing the account"
          },
          "organization": {
            "type": "string",
            "description": "Organization to which the account belongs"
          }
        },
        "required": []
      },
      "v0.0.43_openapi_slurmdbd_stats_resp": {
        "type": "object",
        "properties": {
          "statistics": {
            "$ref": "#/components/schemas/v0.0.43_stats_rec",
            "description": "statistics"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "statistics"
        ]
      },
      "v0.0.43_stats_rec": {
        "type": "object",
        "properties": {
          "time_start": {
            "type": "integer",
            "format": "int64",
            "description": "When data collection started (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
          },
          "rollups": {
            "$ref": "#/components/schemas/v0.0.43_rollup_stats",
            "description": "Rollup statistics"
          },
          "RPCs": {
            "$ref": "#/components/schemas/v0.0.43_stats_rpc_list",
            "description": "List of RPCs sent to the slurmdbd"
          },
          "users": {
            "$ref": "#/components/schemas/v0.0.43_stats_user_list",
            "description": "List of users that issued RPCs"
          }
        },
        "required": []
      },
      "v0.0.43_rollup_stats": {
        "type": "object",
        "properties": {
          "hourly": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Number of hourly rollups since last_run"
              },
              "last_run": {
                "type": "integer",
                "format": "int64",
                "description": "Last time hourly rollup ran (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "duration": {
                "type": "object",
                "properties": {
                  "last": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total time spent doing last daily rollup (seconds)"
                  },
                  "max": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Longest hourly rollup time (seconds)"
                  },
                  "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total time spent doing hourly rollups (seconds)"
                  }
                }
              }
            }
          },
          "daily": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Number of daily rollups since last_run"
              },
              "last_run": {
                "type": "integer",
                "format": "int64",
                "description": "Last time daily rollup ran (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "duration": {
                "type": "object",
                "properties": {
                  "last": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total time spent doing daily daily rollup (seconds)"
                  },
                  "max": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Longest daily rollup time (seconds)"
                  },
                  "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total time spent doing daily rollups (seconds)"
                  }
                }
              }
            }
          },
          "monthly": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Number of monthly rollups since last_run"
              },
              "last_run": {
                "type": "integer",
                "format": "int64",
                "description": "Last time monthly rollup ran (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]'))"
              },
              "duration": {
                "type": "object",
                "properties": {
                  "last": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total time spent doing monthly daily rollup (seconds)"
                  },
                  "max": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Longest monthly rollup time (seconds)"
                  },
                  "time": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Total time spent doing monthly rollups (seconds)"
                  }
                }
              }
            }
          }
        },
        "required": [
          "hourly/count",
          "daily/count",
          "monthly/count",
          "hourly/last_run",
          "daily/last_run",
          "monthly/last_run",
          "hourly/duration/last",
          "daily/duration/last",
          "monthly/duration/last",
          "hourly/duration/max",
          "daily/duration/max",
          "monthly/duration/max",
          "hourly/duration/time",
          "daily/duration/time",
          "monthly/duration/time"
        ]
      },
      "v0.0.43_stats_rpc_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_stats_rpc"
        }
      },
      "v0.0.43_stats_rpc": {
        "type": "object",
        "properties": {
          "rpc": {
            "type": "string",
            "description": "RPC type"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of RPCs processed"
          },
          "time": {
            "type": "object",
            "properties": {
              "average": {
                "type": "integer",
                "format": "int64",
                "description": "Average RPC processing time in microseconds"
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "description": "Total RPC processing time in microseconds"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_stats_user_list": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_stats_user"
        }
      },
      "v0.0.43_stats_user": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "User ID"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of RPCs processed"
          },
          "time": {
            "type": "object",
            "properties": {
              "average": {
                "type": "integer",
                "format": "int64",
                "description": "Average RPC processing time in microseconds"
              },
              "total": {
                "type": "integer",
                "format": "int64",
                "description": "Total RPC processing time in microseconds"
              }
            }
          }
        },
        "required": []
      },
      "v0.0.43_openapi_slurmdbd_ping_resp": {
        "type": "object",
        "properties": {
          "pings": {
            "$ref": "#/components/schemas/v0.0.43_slurmdbd_ping_array",
            "description": "pings"
          },
          "meta": {
            "$ref": "#/components/schemas/v0.0.43_openapi_meta",
            "description": "Slurm meta values"
          },
          "errors": {
            "$ref": "#/components/schemas/v0.0.43_openapi_errors",
            "description": "Query errors"
          },
          "warnings": {
            "$ref": "#/components/schemas/v0.0.43_openapi_warnings",
            "description": "Query warnings"
          }
        },
        "required": [
          "pings"
        ]
      },
      "v0.0.43_slurmdbd_ping_array": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/v0.0.43_slurmdbd_ping"
        }
      },
      "v0.0.43_slurmdbd_ping": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "description": "Target for ping"
          },
          "responding": {
            "type": "boolean",
            "description": "If ping RPC responded with pong from slurmdbd"
          },
          "latency": {
            "type": "integer",
            "format": "int64",
            "description": "Number of microseconds it took to successfully ping or timeout"
          },
          "primary": {
            "type": "boolean",
            "description": "Is responding slurmdbd the primary controller (Is responding slurmctld the primary controller)"
          }
        },
        "required": [
          "hostname",
          "responding",
          "latency",
          "primary"
        ]
      }
    },
    "securitySchemes": {
      "user": {
        "type": "apiKey",
        "description": "User name",
        "name": "X-SLURM-USER-NAME",
        "in": "header"
      },
      "token": {
        "type": "apiKey",
        "description": "User access token",
        "name": "X-SLURM-USER-TOKEN",
        "in": "header"
      },
      "bearerAuth": {
        "type": "http",
        "description": "Bearer Authentication",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "info": {
    "contact": {
      "name": "SchedMD LLC",
      "url": "https://www.schedmd.com/",
      "email": "sales@schedmd.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-slurm": {
      "data_parsers": [
        {
          "plugin": "v0.0.43",
          "flags": [
            "NONE"
          ]
        }
      ],
      "openapi": [
        "openapi/slurmctld",
        "openapi/slurmdbd"
      ],
      "version": {
        "major": "25",
        "micro": "0",
        "minor": "11"
      },
      "release": "25.11.0-0rc1"
    },
    "title": "Slurm REST API",
    "description": "API to access and control Slurm",
    "termsOfService": "https://github.com/SchedMD/slurm/blob/master/DISCLAIMER",
    "version": "Slurm-25.11.0-0rc1"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "user": [],
      "token": []
    },
    {
      "token": []
    },
    {
      "bearerAuth": []
    },
    {}
  ],
  "openapi": "3.0.3"
}
