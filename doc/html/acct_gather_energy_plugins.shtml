<!--#include virtual="header.txt"-->

<h1><a name="top">Slurm Energy Accounting Plugin API (AcctGatherEnergyType)</a></h1>

<h2> Overview</h2>
<p> This document describes Slurm's energy accounting plugins and the API that
defines them. It is intended as a resource to programmers wishing to write
their own Slurm energy accounting plugins.

<p>Slurm energy accounting plugins must conform to the
Slurm Plugin API with the following specifications:

<p><span class="commandline">const char
plugin_name[]="<i>full&nbsp;text&nbsp;name</i>"</span>
<p style="margin-left:.2in">
A free-formatted ASCII text string that identifies the plugin.

<p><span class="commandline">const char
plugin_type[]="<i>major/minor</i>"</span><br>
<p style="margin-left:.2in">
The major type must be &quot;acct_gather_energy.&quot;
The minor type can be any suitable name
for the type of energy accounting. We currently use
<ul>
<li><b>none</b> &mdash; No energy consumption data is provided.
<li><b>ipmi</b> &mdash; Gets energy consumption data from the
BMC (Baseboard Management Controller) using the
IPMI (Intelligent Platform Management Interface) tool.
<li><b>rapl</b> &mdash; Gets energy consumption data from hardware sensors on each
core/socket, using RAPL (Running Average Power Limit) sensors. Note that
enabling RAPL may require the execution of the command "sudo modprobe msr".
<li><b>xcc</b> &mdash; Gets energy consumption data from the Lenovo ThinkSystem
SD650 XClarity Controller (XCC) using IPMI OEM raw commands.
</ul>

<p><span class="commandline">const uint32_t plugin_version</span><br>
If specified, identifies the version of Slurm used to build this plugin and
any attempt to load the plugin from a different version of Slurm will result
in an error.
If not specified, then the plugin may be loaded by Slurm commands and
daemons from any version, however this may result in difficult to diagnose
failures due to changes in the arguments to plugin functions or changes
in other Slurm functions used by the plugin.</p>

<p>The programmer is urged to study
<span class="commandline">src/plugins/acct_gather_energy/rapl</span> and 
<span class="commandline">src/common/slurm_acct_gather_energy.c</span>
for a sample implementation of a Slurm energy accounting plugin.

<h2>API Functions</h2>
<p>All of the following functions are required. Functions which are not
implemented must be stubbed.

<p class="commandline"> int init (void)
<p style="margin-left:.2in"><b>Description</b>:<br>
  Called when the plugin is loaded, before any other functions are
  called. Put global initialization here.
<p style="margin-left:.2in"><b>Returns</b>: <br>
  <span class="commandline">SLURM_SUCCESS</span> on success, or<br>
  <span class="commandline">SLURM_ERROR</span> on failure.</p>

<p class="commandline"> void fini (void)
<p style="margin-left:.2in"><b>Description</b>:<br>
  Called when the plugin is removed. Clear any allocated storage here.
<p style="margin-left:.2in"><b>Returns</b>: None.</p>

<p><b>Note</b>: These init and fini functions are not the same as those
described in the <span class="commandline">dlopen (3)</span> system library.
The C run-time system co-opts those symbols for its own initialization.
The system <span class="commandline">_init()</span> is called before the Slurm
<span class="commandline">init()</span>, and the Slurm
<span class="commandline">fini()</span> is called before the system's
<span class="commandline">_fini()</span>.</p>

<p class="commandline">int acct_gather_energy_p_update_node_energy(void)
<p style="margin-left:.2in"><b>Description</b>:<br>
Updates energy accounting data for a node.
Sets/updates the energy and power accounting values in the acct_gather_energy_t
structure for the node on which it is called.
Called by the slurmd daemon.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">int acct_gather_energy_p_get_data(enum acct_energy_type data_type, acct_gather_energy_t *energy)
<p style="margin-left:.2in"><b>Description</b>:<br>
Updates and returns energy consumption of a task, or returns current energy and 
power consumption of a node, according to specified data_type.
Called by jobacct_gather plugin to update and return energy consumption of a 
task.
Called by slurmd to return energy and power consumption of a node.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> data_type</span> (input) type of energy/power data 
to be returned.<br>
<span class="commandline"> energy</span> (input) pointer to acct_gather_energy_t 
struct in which energy/power data is to be returned.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">int acct_gather_energy_p_set_data(enum acct_energy_type data_type, acct_gather_energy_t *energy)
<p style="margin-left:.2in"><b>Description</b>:<br>
Sets the energy consumption data for a node. Not currently used.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> data_type</span> (input) type of energy/power data 
to be set.<br>
<span class="commandline"> energy</span> (input) pointer to acct_gather_energy_t 
struct from which energy/power data is to be taken.
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<h2>Parameters</h2>
<p>These parameters can be used in the slurm.conf to configure the
plugin and the frequency at which to gather node energy data.</p>
<dl>
<dt><span class="commandline">AcctGatherEnergyType</span>
<dd>Specifies which plugin should be used.
<dt><span class="commandline">AcctGatherNodeFreq</span>
<dd>Time interval between pollings in seconds.
</dl>


<p style="text-align:center;">Last modified 14 April 2020</p>

<!--#include virtual="footer.txt"-->

