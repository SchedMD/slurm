<!--#include virtual="header.txt"--><link rel="stylesheet" type="text/css" href="openapi.css" /> <body>
  <h1>Slurm REST API</h1>
    <div class="app-desc">API to access and control Slurm</div>
    <div class="app-desc">More information: <a href="https://www.schedmd.com/">https://www.schedmd.com/</a></div>
    <div class="app-desc">Contact Info: <a href="sales@schedmd.com">sales@schedmd.com</a></div>
    <div class="app-desc">Version: Slurm-25.05.2</div>
    <div class="app-desc">BasePath:</div>
    <div class="license-info">Apache 2.0</div>
    <div class="license-url">https://www.apache.org/licenses/LICENSE-2.0.html</div>
  <h2>Access</h2>
    <ol>
      <li>APIKey KeyParamName:X-SLURM-USER-NAME KeyInQuery:false KeyInHeader:true</li>
      <li>APIKey KeyParamName:X-SLURM-USER-TOKEN KeyInQuery:false KeyInHeader:true</li>
      <li>HTTP Basic Authentication</li>
    </ol>

  <h2><a name="__Methods">Methods</a></h2>
  [ Jump to <a href="#__Models">Models</a> ]

  <h3>Table of Contents </h3>
  <div class="method-summary"></div>
  <h4><a href="#Slurm">Slurm</a></h4>
  <ul>
  <li><a href="#slurmV0043DeleteJob"><code><span class="http-method">delete</span> /slurm/v0.0.43/job/{job_id}</code></a></li>
  <li><a href="#slurmV0043DeleteJobs"><code><span class="http-method">delete</span> /slurm/v0.0.43/jobs/</code></a></li>
  <li><a href="#slurmV0043DeleteNode"><code><span class="http-method">delete</span> /slurm/v0.0.43/node/{node_name}</code></a></li>
  <li><a href="#slurmV0043DeleteReservation"><code><span class="http-method">delete</span> /slurm/v0.0.43/reservation/{reservation_name}</code></a></li>
  <li><a href="#slurmV0043GetDiag"><code><span class="http-method">get</span> /slurm/v0.0.43/diag/</code></a></li>
  <li><a href="#slurmV0043GetJob"><code><span class="http-method">get</span> /slurm/v0.0.43/job/{job_id}</code></a></li>
  <li><a href="#slurmV0043GetJobs"><code><span class="http-method">get</span> /slurm/v0.0.43/jobs/</code></a></li>
  <li><a href="#slurmV0043GetJobsState"><code><span class="http-method">get</span> /slurm/v0.0.43/jobs/state/</code></a></li>
  <li><a href="#slurmV0043GetLicenses"><code><span class="http-method">get</span> /slurm/v0.0.43/licenses/</code></a></li>
  <li><a href="#slurmV0043GetNode"><code><span class="http-method">get</span> /slurm/v0.0.43/node/{node_name}</code></a></li>
  <li><a href="#slurmV0043GetNodes"><code><span class="http-method">get</span> /slurm/v0.0.43/nodes/</code></a></li>
  <li><a href="#slurmV0043GetPartition"><code><span class="http-method">get</span> /slurm/v0.0.43/partition/{partition_name}</code></a></li>
  <li><a href="#slurmV0043GetPartitions"><code><span class="http-method">get</span> /slurm/v0.0.43/partitions/</code></a></li>
  <li><a href="#slurmV0043GetPing"><code><span class="http-method">get</span> /slurm/v0.0.43/ping/</code></a></li>
  <li><a href="#slurmV0043GetReconfigure"><code><span class="http-method">get</span> /slurm/v0.0.43/reconfigure/</code></a></li>
  <li><a href="#slurmV0043GetReservation"><code><span class="http-method">get</span> /slurm/v0.0.43/reservation/{reservation_name}</code></a></li>
  <li><a href="#slurmV0043GetReservations"><code><span class="http-method">get</span> /slurm/v0.0.43/reservations/</code></a></li>
  <li><a href="#slurmV0043GetShares"><code><span class="http-method">get</span> /slurm/v0.0.43/shares</code></a></li>
  <li><a href="#slurmV0043PostJob"><code><span class="http-method">post</span> /slurm/v0.0.43/job/{job_id}</code></a></li>
  <li><a href="#slurmV0043PostJobAllocate"><code><span class="http-method">post</span> /slurm/v0.0.43/job/allocate</code></a></li>
  <li><a href="#slurmV0043PostJobSubmit"><code><span class="http-method">post</span> /slurm/v0.0.43/job/submit</code></a></li>
  <li><a href="#slurmV0043PostNode"><code><span class="http-method">post</span> /slurm/v0.0.43/node/{node_name}</code></a></li>
  <li><a href="#slurmV0043PostNodes"><code><span class="http-method">post</span> /slurm/v0.0.43/nodes/</code></a></li>
  <li><a href="#slurmV0043PostReservation"><code><span class="http-method">post</span> /slurm/v0.0.43/reservation</code></a></li>
  <li><a href="#slurmV0043PostReservations"><code><span class="http-method">post</span> /slurm/v0.0.43/reservations/</code></a></li>
  </ul>
  <h4><a href="#Slurmdb">Slurmdb</a></h4>
  <ul>
  <li><a href="#slurmdbV0043DeleteAccount"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/account/{account_name}</code></a></li>
  <li><a href="#slurmdbV0043DeleteAssociation"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/association/</code></a></li>
  <li><a href="#slurmdbV0043DeleteAssociations"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/associations/</code></a></li>
  <li><a href="#slurmdbV0043DeleteCluster"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbV0043DeleteSingleQos"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/qos/{qos}</code></a></li>
  <li><a href="#slurmdbV0043DeleteUser"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/user/{name}</code></a></li>
  <li><a href="#slurmdbV0043DeleteWckey"><code><span class="http-method">delete</span> /slurmdb/v0.0.43/wckey/{id}</code></a></li>
  <li><a href="#slurmdbV0043GetAccount"><code><span class="http-method">get</span> /slurmdb/v0.0.43/account/{account_name}</code></a></li>
  <li><a href="#slurmdbV0043GetAccounts"><code><span class="http-method">get</span> /slurmdb/v0.0.43/accounts/</code></a></li>
  <li><a href="#slurmdbV0043GetAssociation"><code><span class="http-method">get</span> /slurmdb/v0.0.43/association/</code></a></li>
  <li><a href="#slurmdbV0043GetAssociations"><code><span class="http-method">get</span> /slurmdb/v0.0.43/associations/</code></a></li>
  <li><a href="#slurmdbV0043GetCluster"><code><span class="http-method">get</span> /slurmdb/v0.0.43/cluster/{cluster_name}</code></a></li>
  <li><a href="#slurmdbV0043GetClusters"><code><span class="http-method">get</span> /slurmdb/v0.0.43/clusters/</code></a></li>
  <li><a href="#slurmdbV0043GetConfig"><code><span class="http-method">get</span> /slurmdb/v0.0.43/config</code></a></li>
  <li><a href="#slurmdbV0043GetDiag"><code><span class="http-method">get</span> /slurmdb/v0.0.43/diag/</code></a></li>
  <li><a href="#slurmdbV0043GetInstance"><code><span class="http-method">get</span> /slurmdb/v0.0.43/instance/</code></a></li>
  <li><a href="#slurmdbV0043GetInstances"><code><span class="http-method">get</span> /slurmdb/v0.0.43/instances/</code></a></li>
  <li><a href="#slurmdbV0043GetJob"><code><span class="http-method">get</span> /slurmdb/v0.0.43/job/{job_id}</code></a></li>
  <li><a href="#slurmdbV0043GetJobs"><code><span class="http-method">get</span> /slurmdb/v0.0.43/jobs/</code></a></li>
  <li><a href="#slurmdbV0043GetPing"><code><span class="http-method">get</span> /slurmdb/v0.0.43/ping/</code></a></li>
  <li><a href="#slurmdbV0043GetQos"><code><span class="http-method">get</span> /slurmdb/v0.0.43/qos/</code></a></li>
  <li><a href="#slurmdbV0043GetSingleQos"><code><span class="http-method">get</span> /slurmdb/v0.0.43/qos/{qos}</code></a></li>
  <li><a href="#slurmdbV0043GetTres"><code><span class="http-method">get</span> /slurmdb/v0.0.43/tres/</code></a></li>
  <li><a href="#slurmdbV0043GetUser"><code><span class="http-method">get</span> /slurmdb/v0.0.43/user/{name}</code></a></li>
  <li><a href="#slurmdbV0043GetUsers"><code><span class="http-method">get</span> /slurmdb/v0.0.43/users/</code></a></li>
  <li><a href="#slurmdbV0043GetWckey"><code><span class="http-method">get</span> /slurmdb/v0.0.43/wckey/{id}</code></a></li>
  <li><a href="#slurmdbV0043GetWckeys"><code><span class="http-method">get</span> /slurmdb/v0.0.43/wckeys/</code></a></li>
  <li><a href="#slurmdbV0043PostAccounts"><code><span class="http-method">post</span> /slurmdb/v0.0.43/accounts/</code></a></li>
  <li><a href="#slurmdbV0043PostAccountsAssociation"><code><span class="http-method">post</span> /slurmdb/v0.0.43/accounts_association/</code></a></li>
  <li><a href="#slurmdbV0043PostAssociations"><code><span class="http-method">post</span> /slurmdb/v0.0.43/associations/</code></a></li>
  <li><a href="#slurmdbV0043PostClusters"><code><span class="http-method">post</span> /slurmdb/v0.0.43/clusters/</code></a></li>
  <li><a href="#slurmdbV0043PostConfig"><code><span class="http-method">post</span> /slurmdb/v0.0.43/config</code></a></li>
  <li><a href="#slurmdbV0043PostQos"><code><span class="http-method">post</span> /slurmdb/v0.0.43/qos/</code></a></li>
  <li><a href="#slurmdbV0043PostTres"><code><span class="http-method">post</span> /slurmdb/v0.0.43/tres/</code></a></li>
  <li><a href="#slurmdbV0043PostUsers"><code><span class="http-method">post</span> /slurmdb/v0.0.43/users/</code></a></li>
  <li><a href="#slurmdbV0043PostUsersAssociation"><code><span class="http-method">post</span> /slurmdb/v0.0.43/users_association/</code></a></li>
  <li><a href="#slurmdbV0043PostWckeys"><code><span class="http-method">post</span> /slurmdb/v0.0.43/wckeys/</code></a></li>
  </ul>

  <h1><a name="Slurm">Slurm</a></h1>
  <div class="method"><a name="slurmV0043DeleteJob">
    </a><div class="method-path"><a name="slurmV0043DeleteJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.43/job/{job_id}</code></pre></div>
    <div class="method-summary">cancel or signal job (<span class="nickname">slurmV0043DeleteJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Job ID default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">signal (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Signal to send to Job default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Signalling flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_kill_job_resp">v0.0.43_openapi_kill_job_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "status" : [ {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  }, {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job signal result
        <a href="#v0.0.43_openapi_kill_job_resp">v0.0.43_openapi_kill_job_resp</a>
    <h4 class="field-label">default</h4>
    job signal result
        <a href="#v0.0.43_openapi_kill_job_resp">v0.0.43_openapi_kill_job_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043DeleteJobs">
    </a><div class="method-path"><a name="slurmV0043DeleteJobs">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.43/jobs/</code></pre></div>
    <div class="method-summary">send signal to list of jobs (<span class="nickname">slurmV0043DeleteJobs</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_kill_jobs_msg <a href="#v0.0.43_kill_jobs_msg">v0.0.43_kill_jobs_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_kill_jobs_resp">v0.0.43_openapi_kill_jobs_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "status" : [ {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  }, {
    "federation" : {
      "sibling" : "sibling"
    },
    "job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "error" : {
      "code" : 0,
      "string" : "string",
      "message" : "message"
    },
    "step_id" : "step_id"
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    description of jobs to signal
        <a href="#v0.0.43_openapi_kill_jobs_resp">v0.0.43_openapi_kill_jobs_resp</a>
    <h4 class="field-label">default</h4>
    description of jobs to signal
        <a href="#v0.0.43_openapi_kill_jobs_resp">v0.0.43_openapi_kill_jobs_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043DeleteNode">
    </a><div class="method-path"><a name="slurmV0043DeleteNode">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.43/node/{node_name}</code></pre></div>
    <div class="method-summary">delete node (<span class="nickname">slurmV0043DeleteNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Node name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node delete request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    node delete request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043DeleteReservation">
    </a><div class="method-path"><a name="slurmV0043DeleteReservation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurm/v0.0.43/reservation/{reservation_name}</code></pre></div>
    <div class="method-summary">delete a reservation (<span class="nickname">slurmV0043DeleteReservation</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">reservation_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Reservation name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation delete request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    reservation delete request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetDiag">
    </a><div class="method-path"><a name="slurmV0043GetDiag">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/diag/</code></pre></div>
    <div class="method-summary">get diagnostics (<span class="nickname">slurmV0043GetDiag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_diag_resp">v0.0.43_openapi_diag_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "statistics" : {
    "bf_cycle_max" : 7,
    "rpcs_by_message_type" : [ {
      "cycle_last" : 0,
      "average_time" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "type_id" : 7,
      "queued" : 0,
      "count" : 9,
      "dropped" : 9,
      "message_type" : "message_type",
      "total_time" : 5,
      "cycle_max" : 7
    }, {
      "cycle_last" : 0,
      "average_time" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "type_id" : 7,
      "queued" : 0,
      "count" : 9,
      "dropped" : 9,
      "message_type" : "message_type",
      "total_time" : 5,
      "cycle_max" : 7
    } ],
    "bf_backfilled_het_jobs" : 6,
    "bf_table_size" : 4,
    "schedule_cycle_depth" : 1,
    "bf_depth_sum" : 5,
    "job_states_ts" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "bf_queue_len" : 4,
    "jobs_started" : 8,
    "schedule_cycle_max" : 9,
    "server_thread_count" : 6,
    "bf_queue_len_sum" : 6,
    "bf_cycle_last" : 0,
    "bf_exit" : {
      "state_changed" : 3,
      "bf_max_time" : 8,
      "bf_max_job_start" : 0,
      "bf_node_space_size" : 7,
      "end_job_queue" : 6,
      "bf_max_job_test" : 4
    },
    "agent_thread_count" : 5,
    "jobs_completed" : 9,
    "bf_depth_mean" : 3,
    "bf_depth_try_sum" : 3,
    "schedule_cycle_mean" : 7,
    "bf_table_size_sum" : 1,
    "agent_queue_size" : 1,
    "jobs_failed" : 3,
    "bf_last_depth_try" : 7,
    "req_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "bf_cycle_counter" : 5,
    "schedule_queue_length" : 9,
    "bf_queue_len_mean" : 0,
    "schedule_exit" : {
      "max_sched_time" : 5,
      "licenses" : 9,
      "default_queue_depth" : 7,
      "max_job_start" : 1,
      "max_rpc_cnt" : 4,
      "end_job_queue" : 6
    },
    "jobs_canceled" : 6,
    "schedule_cycle_sum" : 2,
    "jobs_submitted" : 6,
    "schedule_cycle_mean_depth" : 1,
    "schedule_cycle_per_minute" : 1,
    "req_time_start" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "jobs_running" : 1,
    "bf_last_backfilled_jobs" : 6,
    "bf_last_depth" : 3,
    "bf_backfilled_jobs" : 2,
    "rpcs_by_user" : [ {
      "average_time" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "user_id" : 4,
      "count" : 6,
      "total_time" : 8,
      "user" : "user"
    }, {
      "average_time" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "user_id" : 4,
      "count" : 6,
      "total_time" : 8,
      "user" : "user"
    } ],
    "bf_cycle_mean" : 6,
    "pending_rpcs_by_hostlist" : [ {
      "type_id" : 0,
      "count" : [ "count", "count" ],
      "message_type" : "message_type"
    }, {
      "type_id" : 0,
      "count" : [ "count", "count" ],
      "message_type" : "message_type"
    } ],
    "dbd_agent_queue_size" : 2,
    "bf_table_size_mean" : 4,
    "jobs_pending" : 6,
    "agent_count" : 5,
    "bf_cycle_sum" : 7,
    "parts_packed" : 0,
    "bf_active" : true,
    "bf_depth_mean_try" : 3,
    "gettimeofday_latency" : 7,
    "pending_rpcs" : [ {
      "type_id" : 4,
      "count" : 3,
      "message_type" : "message_type"
    }, {
      "type_id" : 4,
      "count" : 3,
      "message_type" : "message_type"
    } ],
    "schedule_cycle_total" : 4,
    "bf_when_last_cycle" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "schedule_cycle_last" : 3
  }
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    diagnostic results
        <a href="#v0.0.43_openapi_diag_resp">v0.0.43_openapi_diag_resp</a>
    <h4 class="field-label">default</h4>
    diagnostic results
        <a href="#v0.0.43_openapi_diag_resp">v0.0.43_openapi_diag_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetJob">
    </a><div class="method-path"><a name="slurmV0043GetJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/job/{job_id}</code></pre></div>
    <div class="method-summary">get job info (<span class="nickname">slurmV0043GetJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Job ID default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query jobs updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "time_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "qos" : "qos",
    "resize_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "priority_by_partition" : [ {
      "partition" : "partition",
      "priority" : 6
    }, {
      "partition" : "partition",
      "priority" : 6
    } ],
    "maximum_switch_wait_time" : 9,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 9,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "segment_size" : 4,
    "threads_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 5,
    "nice" : 1,
    "last_sched_evaluation" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "array_task_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "licenses_allocated" : "licenses_allocated",
    "minimum_tmp_disk_per_node" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        }, {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        } ],
        "count" : 2,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 1,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "stdout_expanded" : "stdout_expanded",
    "network" : "network",
    "restart_cnt" : 1,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 5,
    "job_id" : 5,
    "comment" : "comment",
    "account" : "account",
    "required_switches" : 7
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "time_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "qos" : "qos",
    "resize_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "priority_by_partition" : [ {
      "partition" : "partition",
      "priority" : 6
    }, {
      "partition" : "partition",
      "priority" : 6
    } ],
    "maximum_switch_wait_time" : 9,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 9,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "segment_size" : 4,
    "threads_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 5,
    "nice" : 1,
    "last_sched_evaluation" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "array_task_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "licenses_allocated" : "licenses_allocated",
    "minimum_tmp_disk_per_node" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        }, {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        } ],
        "count" : 2,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 1,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "stdout_expanded" : "stdout_expanded",
    "network" : "network",
    "restart_cnt" : 1,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 5,
    "job_id" : 5,
    "comment" : "comment",
    "account" : "account",
    "required_switches" : 7
  } ],
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>
    <h4 class="field-label">default</h4>
    job(s) information
        <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetJobs">
    </a><div class="method-path"><a name="slurmV0043GetJobs">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/jobs/</code></pre></div>
    <div class="method-summary">get list of jobs (<span class="nickname">slurmV0043GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query jobs updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "time_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "qos" : "qos",
    "resize_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "priority_by_partition" : [ {
      "partition" : "partition",
      "priority" : 6
    }, {
      "partition" : "partition",
      "priority" : 6
    } ],
    "maximum_switch_wait_time" : 9,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 9,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "segment_size" : 4,
    "threads_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 5,
    "nice" : 1,
    "last_sched_evaluation" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "array_task_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "licenses_allocated" : "licenses_allocated",
    "minimum_tmp_disk_per_node" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        }, {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        } ],
        "count" : 2,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 1,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "stdout_expanded" : "stdout_expanded",
    "network" : "network",
    "restart_cnt" : 1,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 5,
    "job_id" : 5,
    "comment" : "comment",
    "account" : "account",
    "required_switches" : 7
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "time_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "qos" : "qos",
    "resize_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "priority_by_partition" : [ {
      "partition" : "partition",
      "priority" : 6
    }, {
      "partition" : "partition",
      "priority" : 6
    } ],
    "maximum_switch_wait_time" : 9,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 9,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "segment_size" : 4,
    "threads_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 5,
    "nice" : 1,
    "last_sched_evaluation" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "array_task_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "licenses_allocated" : "licenses_allocated",
    "minimum_tmp_disk_per_node" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        }, {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        } ],
        "count" : 2,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 1,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "stdout_expanded" : "stdout_expanded",
    "network" : "network",
    "restart_cnt" : 1,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 5,
    "job_id" : 5,
    "comment" : "comment",
    "account" : "account",
    "required_switches" : 7
  } ],
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) information
        <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>
    <h4 class="field-label">default</h4>
    job(s) information
        <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetJobsState">
    </a><div class="method-path"><a name="slurmV0043GetJobsState">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/jobs/state/</code></pre></div>
    <div class="method-summary">get list of job states (<span class="nickname">slurmV0043GetJobsState</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">job_id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV list of Job IDs to search for default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "last_backfill" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "time_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "qos" : "qos",
    "resize_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "priority_by_partition" : [ {
      "partition" : "partition",
      "priority" : 6
    }, {
      "partition" : "partition",
      "priority" : 6
    } ],
    "maximum_switch_wait_time" : 9,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 9,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "segment_size" : 4,
    "threads_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 5,
    "nice" : 1,
    "last_sched_evaluation" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "array_task_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "licenses_allocated" : "licenses_allocated",
    "minimum_tmp_disk_per_node" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        }, {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        } ],
        "count" : 2,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 1,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "stdout_expanded" : "stdout_expanded",
    "network" : "network",
    "restart_cnt" : 1,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 5,
    "job_id" : 5,
    "comment" : "comment",
    "account" : "account",
    "required_switches" : 7
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "time_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "memory_per_tres" : "memory_per_tres",
    "scheduled_nodes" : "scheduled_nodes",
    "qos" : "qos",
    "resize_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "eligible_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpus_per_tres" : "cpus_per_tres",
    "preemptable_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "system_comment" : "system_comment",
    "federation_siblings_active" : "federation_siblings_active",
    "tasks_per_tres" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "accrue_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "dependency" : "dependency",
    "group_name" : "group_name",
    "profile" : [ "NOT_SET", "NOT_SET" ],
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_per_job" : "tres_per_job",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "priority_by_partition" : [ {
      "partition" : "partition",
      "priority" : 6
    }, {
      "partition" : "partition",
      "priority" : 6
    } ],
    "maximum_switch_wait_time" : 9,
    "core_spec" : 6,
    "mcs_label" : "mcs_label",
    "required_nodes" : "required_nodes",
    "tres_bind" : "tres_bind",
    "user_id" : 9,
    "selinux_context" : "selinux_context",
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "federation_origin" : "federation_origin",
    "container_id" : "container_id",
    "shared" : [ "none", "none" ],
    "tasks_per_board" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "user_name" : "user_name",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "KILL_INVALID_DEPENDENCY", "KILL_INVALID_DEPENDENCY" ],
    "standard_input" : "standard_input",
    "admin_comment" : "admin_comment",
    "cores_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "job_state" : [ "PENDING", "PENDING" ],
    "tasks_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "current_working_directory" : "current_working_directory",
    "standard_error" : "standard_error",
    "array_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "cluster_features" : "cluster_features",
    "partition" : "partition",
    "segment_size" : 4,
    "threads_per_core" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_alloc_str" : "tres_alloc_str",
    "memory_per_cpu" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "cpu_frequency_minimum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "power" : {
      "flags" : [ "", "" ]
    },
    "deadline" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "mail_type" : [ "BEGIN", "BEGIN" ],
    "memory_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "state_reason" : "state_reason",
    "het_job_offset" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_board" : 5,
    "nice" : 1,
    "last_sched_evaluation" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tres_per_node" : "tres_per_node",
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "excluded_nodes" : "excluded_nodes",
    "array_max_tasks" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "het_job_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "sockets_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "prefer" : "prefer",
    "time_limit" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "minimum_cpus_per_node" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "tasks_per_socket" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_host" : "batch_host",
    "max_cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "job_size_str" : [ "job_size_str", "job_size_str" ],
    "hold" : true,
    "cpu_frequency_maximum" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "het_job_id_set" : "het_job_id_set",
    "state_description" : "state_description",
    "array_task_id" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "licenses_allocated" : "licenses_allocated",
    "minimum_tmp_disk_per_node" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "tres_req_str" : "tres_req_str",
    "burst_buffer_state" : "burst_buffer_state",
    "cron" : "cron",
    "allocating_node" : "allocating_node",
    "tres_per_socket" : "tres_per_socket",
    "array_task_string" : "array_task_string",
    "submit_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "wckey" : "wckey",
    "max_nodes" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "batch_flag" : true,
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "name" : "name",
    "preempt_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "contiguous" : true,
    "job_resources" : {
      "nodes" : {
        "allocation" : [ {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        }, {
          "memory" : {
            "used" : 2,
            "allocated" : 4
          },
          "cpus" : {
            "count" : 9,
            "used" : 3
          },
          "name" : "name",
          "index" : 7,
          "sockets" : [ {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          }, {
            "cores" : [ {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            }, {
              "index" : 1,
              "status" : [ "INVALID", "INVALID" ]
            } ],
            "index" : 7
          } ]
        } ],
        "count" : 2,
        "select_type" : [ "AVAILABLE", "AVAILABLE" ],
        "whole" : true,
        "list" : "list"
      },
      "threads_per_core" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus" : 1,
      "select_type" : [ "CPU", "CPU" ]
    },
    "billable_tres" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "federation_siblings_viable" : "federation_siblings_viable",
    "cpus_per_task" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "batch_features" : "batch_features",
    "thread_spec" : 1,
    "cpu_frequency_governor" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "gres_detail" : [ "gres_detail", "gres_detail" ],
    "stdout_expanded" : "stdout_expanded",
    "network" : "network",
    "restart_cnt" : 1,
    "resv_name" : "resv_name",
    "extra" : "extra",
    "delay_boot" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "reboot" : true,
    "cpus" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "standard_output" : "standard_output",
    "pre_sus_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "suspend_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "association_id" : 0,
    "command" : "command",
    "tres_freq" : "tres_freq",
    "requeue" : true,
    "tres_per_task" : "tres_per_task",
    "mail_user" : "mail_user",
    "nodes" : "nodes",
    "group_id" : 5,
    "job_id" : 5,
    "comment" : "comment",
    "account" : "account",
    "required_switches" : 7
  } ],
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job(s) state information
        <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>
    <h4 class="field-label">default</h4>
    job(s) state information
        <a href="#v0.0.43_openapi_job_info_resp">v0.0.43_openapi_job_info_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetLicenses">
    </a><div class="method-path"><a name="slurmV0043GetLicenses">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/licenses/</code></pre></div>
    <div class="method-summary">get all Slurm tracked license info (<span class="nickname">slurmV0043GetLicenses</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_licenses_resp">v0.0.43_openapi_licenses_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "licenses" : [ {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  }, {
    "Used" : 6,
    "LastUpdate" : 7,
    "Total" : 0,
    "Remote" : true,
    "LastConsumed" : 5,
    "LastDeficit" : 2,
    "LicenseName" : "LicenseName",
    "Free" : 1,
    "Reserved" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of get all licenses
        <a href="#v0.0.43_openapi_licenses_resp">v0.0.43_openapi_licenses_resp</a>
    <h4 class="field-label">default</h4>
    results of get all licenses
        <a href="#v0.0.43_openapi_licenses_resp">v0.0.43_openapi_licenses_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetNode">
    </a><div class="method-path"><a name="slurmV0043GetNode">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/node/{node_name}</code></pre></div>
    <div class="method-summary">get node info (<span class="nickname">slurmV0043GetNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Node name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query jobs updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_nodes_resp">v0.0.43_openapi_nodes_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "topology" : "topology",
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "cert_flags" : [ "TOKEN_SET", "TOKEN_SET" ],
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "tls_cert_last_renewal" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "topology" : "topology",
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "cert_flags" : [ "TOKEN_SET", "TOKEN_SET" ],
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "tls_cert_last_renewal" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node information
        <a href="#v0.0.43_openapi_nodes_resp">v0.0.43_openapi_nodes_resp</a>
    <h4 class="field-label">default</h4>
    node information
        <a href="#v0.0.43_openapi_nodes_resp">v0.0.43_openapi_nodes_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetNodes">
    </a><div class="method-path"><a name="slurmV0043GetNodes">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/nodes/</code></pre></div>
    <div class="method-summary">get node(s) info (<span class="nickname">slurmV0043GetNodes</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query jobs updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_nodes_resp">v0.0.43_openapi_nodes_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "nodes" : [ {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "topology" : "topology",
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "cert_flags" : [ "TOKEN_SET", "TOKEN_SET" ],
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "tls_cert_last_renewal" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  }, {
    "reason" : "reason",
    "gpu_spec" : "gpu_spec",
    "slurmd_start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "features" : [ "features", "features" ],
    "hostname" : "hostname",
    "cores" : 6,
    "reason_changed_at" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "reservation" : "reservation",
    "tres" : "tres",
    "cpu_binding" : 5,
    "state" : [ "INVALID", "INVALID" ],
    "sockets" : 9,
    "energy" : {
      "current_watts" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "base_consumed_energy" : 3,
      "last_collected" : 7,
      "consumed_energy" : 2,
      "previous_consumed_energy" : 4,
      "average_watts" : 9
    },
    "partitions" : [ "partitions", "partitions" ],
    "topology" : "topology",
    "gres_drained" : "gres_drained",
    "weight" : 8,
    "version" : "version",
    "gres_used" : "gres_used",
    "mcs_label" : "mcs_label",
    "real_memory" : 1,
    "instance_id" : "instance_id",
    "burstbuffer_network_address" : "burstbuffer_network_address",
    "port" : 1,
    "name" : "name",
    "resume_after" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "temporary_disk" : 6,
    "tres_used" : "tres_used",
    "effective_cpus" : 7,
    "instance_type" : "instance_type",
    "external_sensors" : "{}",
    "cert_flags" : [ "TOKEN_SET", "TOKEN_SET" ],
    "res_cores_per_gpu" : 6,
    "boards" : 0,
    "alloc_cpus" : 1,
    "active_features" : [ "active_features", "active_features" ],
    "reason_set_by_user" : "reason_set_by_user",
    "free_mem" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_idle_cpus" : 4,
    "extra" : "extra",
    "operating_system" : "operating_system",
    "power" : "{}",
    "tls_cert_last_renewal" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "architecture" : "architecture",
    "owner" : "owner",
    "cluster_name" : "cluster_name",
    "address" : "address",
    "cpus" : 2,
    "tres_weighted" : 5.025004791520295,
    "gres" : "gres",
    "threads" : 9,
    "boot_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "alloc_memory" : 7,
    "specialized_memory" : 1,
    "specialized_cpus" : "specialized_cpus",
    "specialized_cores" : 1,
    "last_busy" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "comment" : "comment",
    "next_state_after_reboot" : [ "INVALID", "INVALID" ],
    "cpu_load" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node(s) information
        <a href="#v0.0.43_openapi_nodes_resp">v0.0.43_openapi_nodes_resp</a>
    <h4 class="field-label">default</h4>
    node(s) information
        <a href="#v0.0.43_openapi_nodes_resp">v0.0.43_openapi_nodes_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetPartition">
    </a><div class="method-path"><a name="slurmV0043GetPartition">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/partition/{partition_name}</code></pre></div>
    <div class="method-summary">get partition info (<span class="nickname">slurmV0043GetPartition</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">partition_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Partition name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query partitions updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_partition_resp">v0.0.43_openapi_partition_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "topology" : "topology",
    "timeouts" : {
      "resume" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "topology" : "topology",
    "timeouts" : {
      "resume" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.43_openapi_partition_resp">v0.0.43_openapi_partition_resp</a>
    <h4 class="field-label">default</h4>
    partition information
        <a href="#v0.0.43_openapi_partition_resp">v0.0.43_openapi_partition_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetPartitions">
    </a><div class="method-path"><a name="slurmV0043GetPartitions">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/partitions/</code></pre></div>
    <div class="method-summary">get all partition info (<span class="nickname">slurmV0043GetPartitions</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query partitions updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_partition_resp">v0.0.43_openapi_partition_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "partitions" : [ {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "topology" : "topology",
    "timeouts" : {
      "resume" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  }, {
    "cluster" : "cluster",
    "cpus" : {
      "task_binding" : 6,
      "total" : 1
    },
    "topology" : "topology",
    "timeouts" : {
      "resume" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "suspend" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "groups" : {
      "allowed" : "allowed"
    },
    "alternate" : "alternate",
    "select_type" : [ "CPU", "CPU" ],
    "suspend_time" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "priority" : {
      "tier" : 4,
      "job_factor" : 2
    },
    "node_sets" : "node_sets",
    "maximums" : {
      "shares" : 7,
      "nodes" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "over_time_limit" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_node" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "cpus_per_socket" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "oversubscribe" : {
        "jobs" : 9,
        "flags" : [ "force", "force" ]
      },
      "memory_per_cpu" : 2,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "nodes" : {
      "configured" : "configured",
      "total" : 0,
      "allowed_allocation" : "allowed_allocation"
    },
    "partition" : {
      "state" : [ "INACTIVE", "INACTIVE" ]
    },
    "qos" : {
      "deny" : "deny",
      "allowed" : "allowed",
      "assigned" : "assigned"
    },
    "defaults" : {
      "partition_memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "memory_per_cpu" : 5,
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "job" : "job",
      "partition_memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "name" : "name",
    "tres" : {
      "configured" : "configured",
      "billing_weights" : "billing_weights"
    },
    "accounts" : {
      "deny" : "deny",
      "allowed" : "allowed"
    },
    "minimums" : {
      "nodes" : 3
    },
    "grace_time" : 5
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    partition information
        <a href="#v0.0.43_openapi_partition_resp">v0.0.43_openapi_partition_resp</a>
    <h4 class="field-label">default</h4>
    partition information
        <a href="#v0.0.43_openapi_partition_resp">v0.0.43_openapi_partition_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetPing">
    </a><div class="method-path"><a name="slurmV0043GetPing">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/ping/</code></pre></div>
    <div class="method-summary">ping test (<span class="nickname">slurmV0043GetPing</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_ping_array_resp">v0.0.43_openapi_ping_array_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "pings" : [ {
    "mode" : "mode",
    "responding" : true,
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged",
    "primary" : true
  }, {
    "mode" : "mode",
    "responding" : true,
    "hostname" : "hostname",
    "latency" : 0,
    "pinged" : "pinged",
    "primary" : true
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.43_openapi_ping_array_resp">v0.0.43_openapi_ping_array_resp</a>
    <h4 class="field-label">default</h4>
    results of ping test
        <a href="#v0.0.43_openapi_ping_array_resp">v0.0.43_openapi_ping_array_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetReconfigure">
    </a><div class="method-path"><a name="slurmV0043GetReconfigure">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/reconfigure/</code></pre></div>
    <div class="method-summary">request slurmctld reconfigure (<span class="nickname">slurmV0043GetReconfigure</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reconfigure request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    reconfigure request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetReservation">
    </a><div class="method-path"><a name="slurmV0043GetReservation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/reservation/{reservation_name}</code></pre></div>
    <div class="method-summary">get reservation info (<span class="nickname">slurmV0043GetReservation</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">reservation_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Reservation name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query reservations updated more recently than this time (UNIX timestamp) default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_reservation_resp">v0.0.43_openapi_reservation_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.43_openapi_reservation_resp">v0.0.43_openapi_reservation_resp</a>
    <h4 class="field-label">default</h4>
    reservation information
        <a href="#v0.0.43_openapi_reservation_resp">v0.0.43_openapi_reservation_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetReservations">
    </a><div class="method-path"><a name="slurmV0043GetReservations">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/reservations/</code></pre></div>
    <div class="method-summary">get all reservation info (<span class="nickname">slurmV0043GetReservations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query reservations updated more recently than this time (UNIX timestamp) default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_reservation_resp">v0.0.43_openapi_reservation_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  }, {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : "groups",
    "users" : "users",
    "max_start_delay" : 6,
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : "licenses",
    "partition" : "partition",
    "watts" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "core_specializations" : [ {
      "node" : "node",
      "core" : "core"
    }, {
      "node" : "node",
      "core" : "core"
    } ],
    "name" : "name",
    "tres" : "tres",
    "accounts" : "accounts",
    "node_count" : 1,
    "node_list" : "node_list",
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : 0
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "last_update" : {
    "number" : 2,
    "set" : true,
    "infinite" : true
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation information
        <a href="#v0.0.43_openapi_reservation_resp">v0.0.43_openapi_reservation_resp</a>
    <h4 class="field-label">default</h4>
    reservation information
        <a href="#v0.0.43_openapi_reservation_resp">v0.0.43_openapi_reservation_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043GetShares">
    </a><div class="method-path"><a name="slurmV0043GetShares">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurm/v0.0.43/shares</code></pre></div>
    <div class="method-summary">get fairshare info (<span class="nickname">slurmV0043GetShares</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">accounts (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Accounts to query default: null </div><div class="param">users (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Users to query default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_shares_resp">v0.0.43_openapi_shares_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "shares" : {
    "shares" : [ {
      "cluster" : "cluster",
      "parent" : "parent",
      "shares_normalized" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "usage" : 1,
      "fairshare" : {
        "level" : {
          "number" : 2.027123023002322,
          "set" : true,
          "infinite" : true
        },
        "factor" : {
          "number" : 2.027123023002322,
          "set" : true,
          "infinite" : true
        }
      },
      "type" : [ "USER", "USER" ],
      "effective_usage" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "shares" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition" : "partition",
      "usage_normalized" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "name" : "name",
      "tres" : {
        "run_seconds" : [ {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        } ],
        "usage" : [ {
          "name" : "name",
          "value" : 6.027456183070403
        }, {
          "name" : "name",
          "value" : 6.027456183070403
        } ],
        "group_minutes" : [ {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        } ]
      },
      "id" : 0
    }, {
      "cluster" : "cluster",
      "parent" : "parent",
      "shares_normalized" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "usage" : 1,
      "fairshare" : {
        "level" : {
          "number" : 2.027123023002322,
          "set" : true,
          "infinite" : true
        },
        "factor" : {
          "number" : 2.027123023002322,
          "set" : true,
          "infinite" : true
        }
      },
      "type" : [ "USER", "USER" ],
      "effective_usage" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "shares" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "partition" : "partition",
      "usage_normalized" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "name" : "name",
      "tres" : {
        "run_seconds" : [ {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        } ],
        "usage" : [ {
          "name" : "name",
          "value" : 6.027456183070403
        }, {
          "name" : "name",
          "value" : 6.027456183070403
        } ],
        "group_minutes" : [ {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }, {
          "name" : "name",
          "value" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        } ]
      },
      "id" : 0
    } ],
    "total_shares" : 5
  },
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    shares information
        <a href="#v0.0.43_openapi_shares_resp">v0.0.43_openapi_shares_resp</a>
    <h4 class="field-label">default</h4>
    shares information
        <a href="#v0.0.43_openapi_shares_resp">v0.0.43_openapi_shares_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostJob">
    </a><div class="method-path"><a name="slurmV0043PostJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/job/{job_id}</code></pre></div>
    <div class="method-summary">update job (<span class="nickname">slurmV0043PostJob</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Job ID default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_job_desc_msg <a href="#v0.0.43_job_desc_msg">v0.0.43_job_desc_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_job_post_response">v0.0.43_openapi_job_post_response</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "results" : [ {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error"
  }, {
    "job_id" : 0,
    "why" : "why",
    "error_code" : 6,
    "step_id" : "step_id",
    "error" : "error"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job update result
        <a href="#v0.0.43_openapi_job_post_response">v0.0.43_openapi_job_post_response</a>
    <h4 class="field-label">default</h4>
    job update result
        <a href="#v0.0.43_openapi_job_post_response">v0.0.43_openapi_job_post_response</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostJobAllocate">
    </a><div class="method-path"><a name="slurmV0043PostJobAllocate">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/job/allocate</code></pre></div>
    <div class="method-summary">submit new job allocation without any steps that must be signaled to stop (<span class="nickname">slurmV0043PostJobAllocate</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_job_alloc_req <a href="#v0.0.43_job_alloc_req">v0.0.43_job_alloc_req</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_job_alloc_resp">v0.0.43_openapi_job_alloc_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "job_id" : 0,
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job allocation response
        <a href="#v0.0.43_openapi_job_alloc_resp">v0.0.43_openapi_job_alloc_resp</a>
    <h4 class="field-label">default</h4>
    job allocation response
        <a href="#v0.0.43_openapi_job_alloc_resp">v0.0.43_openapi_job_alloc_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostJobSubmit">
    </a><div class="method-path"><a name="slurmV0043PostJobSubmit">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/job/submit</code></pre></div>
    <div class="method-summary">submit new job (<span class="nickname">slurmV0043PostJobSubmit</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_job_submit_req <a href="#v0.0.43_job_submit_req">v0.0.43_job_submit_req</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_job_submit_response">v0.0.43_openapi_job_submit_response</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "job_id" : 0,
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "step_id" : "step_id",
  "job_submit_user_msg" : "job_submit_user_msg",
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    job submission response
        <a href="#v0.0.43_openapi_job_submit_response">v0.0.43_openapi_job_submit_response</a>
    <h4 class="field-label">default</h4>
    job submission response
        <a href="#v0.0.43_openapi_job_submit_response">v0.0.43_openapi_job_submit_response</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostNode">
    </a><div class="method-path"><a name="slurmV0043PostNode">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/node/{node_name}</code></pre></div>
    <div class="method-summary">update node properties (<span class="nickname">slurmV0043PostNode</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">node_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Node name default: null </div>
    </div>  <!-- field-items -->

    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_update_node_msg <a href="#v0.0.43_update_node_msg">v0.0.43_update_node_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    node update request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    node update request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostNodes">
    </a><div class="method-path"><a name="slurmV0043PostNodes">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/nodes/</code></pre></div>
    <div class="method-summary">batch update node(s) (<span class="nickname">slurmV0043PostNodes</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_update_node_msg <a href="#v0.0.43_update_node_msg">v0.0.43_update_node_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    batch node update request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    batch node update request result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostReservation">
    </a><div class="method-path"><a name="slurmV0043PostReservation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/reservation</code></pre></div>
    <div class="method-summary">create or update a reservation (<span class="nickname">slurmV0043PostReservation</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_reservation_desc_msg <a href="#v0.0.43_reservation_desc_msg">v0.0.43_reservation_desc_msg</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_reservation_mod_resp">v0.0.43_openapi_reservation_mod_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : [ "groups", "groups" ],
    "users" : [ "users", "users" ],
    "max_start_delay" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "duration" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : [ "licenses", "licenses" ],
    "partition" : "partition",
    "name" : "name",
    "comment" : "comment",
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "accounts" : [ "accounts", "accounts" ],
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_list" : [ "node_list", "node_list" ],
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    }
  }, {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : [ "groups", "groups" ],
    "users" : [ "users", "users" ],
    "max_start_delay" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "duration" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : [ "licenses", "licenses" ],
    "partition" : "partition",
    "name" : "name",
    "comment" : "comment",
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "accounts" : [ "accounts", "accounts" ],
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_list" : [ "node_list", "node_list" ],
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    }
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation description
        <a href="#v0.0.43_openapi_reservation_mod_resp">v0.0.43_openapi_reservation_mod_resp</a>
    <h4 class="field-label">default</h4>
    reservation description
        <a href="#v0.0.43_openapi_reservation_mod_resp">v0.0.43_openapi_reservation_mod_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmV0043PostReservations">
    </a><div class="method-path"><a name="slurmV0043PostReservations">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurm/v0.0.43/reservations/</code></pre></div>
    <div class="method-summary">create or update reservations (<span class="nickname">slurmV0043PostReservations</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_reservation_mod_req <a href="#v0.0.43_reservation_mod_req">v0.0.43_reservation_mod_req</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_reservation_mod_resp">v0.0.43_openapi_reservation_mod_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "reservations" : [ {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : [ "groups", "groups" ],
    "users" : [ "users", "users" ],
    "max_start_delay" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "duration" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : [ "licenses", "licenses" ],
    "partition" : "partition",
    "name" : "name",
    "comment" : "comment",
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "accounts" : [ "accounts", "accounts" ],
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_list" : [ "node_list", "node_list" ],
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    }
  }, {
    "end_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "flags" : [ "MAINT", "MAINT" ],
    "groups" : [ "groups", "groups" ],
    "users" : [ "users", "users" ],
    "max_start_delay" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "duration" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "features" : "features",
    "start_time" : {
      "number" : 2,
      "set" : true,
      "infinite" : true
    },
    "burst_buffer" : "burst_buffer",
    "licenses" : [ "licenses", "licenses" ],
    "partition" : "partition",
    "name" : "name",
    "comment" : "comment",
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "accounts" : [ "accounts", "accounts" ],
    "node_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "node_list" : [ "node_list", "node_list" ],
    "purge_completed" : {
      "time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "core_count" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    }
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    reservation descriptions
        <a href="#v0.0.43_openapi_reservation_mod_resp">v0.0.43_openapi_reservation_mod_resp</a>
    <h4 class="field-label">default</h4>
    reservation descriptions
        <a href="#v0.0.43_openapi_reservation_mod_resp">v0.0.43_openapi_reservation_mod_resp</a>
  </div> <!-- method -->
  <hr>
  <h1><a name="Slurmdb">Slurmdb</a></h1>
  <div class="method"><a name="slurmdbV0043DeleteAccount">
    </a><div class="method-path"><a name="slurmdbV0043DeleteAccount">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/account/{account_name}</code></pre></div>
    <div class="method-summary">Delete account (<span class="nickname">slurmdbV0043DeleteAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Account name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_accounts_removed_resp">v0.0.43_openapi_accounts_removed_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_accounts" : [ "removed_accounts", "removed_accounts" ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Status of account deletion request
        <a href="#v0.0.43_openapi_accounts_removed_resp">v0.0.43_openapi_accounts_removed_resp</a>
    <h4 class="field-label">default</h4>
    Status of account deletion request
        <a href="#v0.0.43_openapi_accounts_removed_resp">v0.0.43_openapi_accounts_removed_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043DeleteAssociation">
    </a><div class="method-path"><a name="slurmdbV0043DeleteAssociation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/association/</code></pre></div>
    <div class="method-summary">Delete association (<span class="nickname">slurmdbV0043DeleteAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV accounts list default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV clusters list default: null </div><div class="param">default_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">Include deleted associations (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Filter to only defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include the raw QOS or delta_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include sub acct information (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude parent id/name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude limits from parents (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV ID list default: null </div><div class="param">parent_account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV names of parent account default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV partition name list default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user list default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_assocs_removed_resp">v0.0.43_openapi_assocs_removed_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_associations" : [ "removed_associations", "removed_associations" ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Status of associations delete request
        <a href="#v0.0.43_openapi_assocs_removed_resp">v0.0.43_openapi_assocs_removed_resp</a>
    <h4 class="field-label">default</h4>
    Status of associations delete request
        <a href="#v0.0.43_openapi_assocs_removed_resp">v0.0.43_openapi_assocs_removed_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043DeleteAssociations">
    </a><div class="method-path"><a name="slurmdbV0043DeleteAssociations">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/associations/</code></pre></div>
    <div class="method-summary">Delete associations (<span class="nickname">slurmdbV0043DeleteAssociations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV accounts list default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV clusters list default: null </div><div class="param">default_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">Include deleted associations (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Filter to only defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include the raw QOS or delta_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include sub acct information (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude parent id/name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude limits from parents (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV ID list default: null </div><div class="param">parent_account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV names of parent account default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV partition name list default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user list default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_assocs_removed_resp">v0.0.43_openapi_assocs_removed_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "removed_associations" : [ "removed_associations", "removed_associations" ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations deleted
        <a href="#v0.0.43_openapi_assocs_removed_resp">v0.0.43_openapi_assocs_removed_resp</a>
    <h4 class="field-label">default</h4>
    List of associations deleted
        <a href="#v0.0.43_openapi_assocs_removed_resp">v0.0.43_openapi_assocs_removed_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043DeleteCluster">
    </a><div class="method-path"><a name="slurmdbV0043DeleteCluster">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Delete cluster (<span class="nickname">slurmdbV0043DeleteCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Cluster name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">classification (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Type of machine default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV cluster list default: null </div><div class="param">federation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV federation list default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">rpc_version (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV RPC version list default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include deleted clusters default: null </div><div class="param">with_usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include usage default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_clusters_removed_resp">v0.0.43_openapi_clusters_removed_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "deleted_clusters" : [ "deleted_clusters", "deleted_clusters" ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Result of delete cluster request
        <a href="#v0.0.43_openapi_clusters_removed_resp">v0.0.43_openapi_clusters_removed_resp</a>
    <h4 class="field-label">default</h4>
    Result of delete cluster request
        <a href="#v0.0.43_openapi_clusters_removed_resp">v0.0.43_openapi_clusters_removed_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043DeleteSingleQos">
    </a><div class="method-path"><a name="slurmdbV0043DeleteSingleQos">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/qos/{qos}</code></pre></div>
    <div class="method-summary">Delete QOS (<span class="nickname">slurmdbV0043DeleteSingleQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” QOS name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_qos_removed_resp">v0.0.43_openapi_slurmdbd_qos_removed_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "removed_qos" : [ "removed_qos", "removed_qos" ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.43_openapi_slurmdbd_qos_removed_resp">v0.0.43_openapi_slurmdbd_qos_removed_resp</a>
    <h4 class="field-label">default</h4>
    results of ping test
        <a href="#v0.0.43_openapi_slurmdbd_qos_removed_resp">v0.0.43_openapi_slurmdbd_qos_removed_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043DeleteUser">
    </a><div class="method-path"><a name="slurmdbV0043DeleteUser">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/user/{name}</code></pre></div>
    <div class="method-summary">Delete user (<span class="nickname">slurmdbV0043DeleteUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” User name default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Result of user delete request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    Result of user delete request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043DeleteWckey">
    </a><div class="method-path"><a name="slurmdbV0043DeleteWckey">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="delete"><code class="huge"><span class="http-method">delete</span> /slurmdb/v0.0.43/wckey/{id}</code></pre></div>
    <div class="method-summary">Delete wckey (<span class="nickname">slurmdbV0043DeleteWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” WCKey ID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_wckey_removed_resp">v0.0.43_openapi_wckey_removed_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "deleted_wckeys" : [ "deleted_wckeys", "deleted_wckeys" ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Result of wckey deletion request
        <a href="#v0.0.43_openapi_wckey_removed_resp">v0.0.43_openapi_wckey_removed_resp</a>
    <h4 class="field-label">default</h4>
    Result of wckey deletion request
        <a href="#v0.0.43_openapi_wckey_removed_resp">v0.0.43_openapi_wckey_removed_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetAccount">
    </a><div class="method-path"><a name="slurmdbV0043GetAccount">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/account/{account_name}</code></pre></div>
    <div class="method-summary">Get account info (<span class="nickname">slurmdbV0043GetAccount</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">account_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Account name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_assocs (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include associations default: null </div><div class="param">with_coords (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include coordinators default: null </div><div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include deleted default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a>
    <h4 class="field-label">default</h4>
    List of accounts
        <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetAccounts">
    </a><div class="method-path"><a name="slurmdbV0043GetAccounts">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/accounts/</code></pre></div>
    <div class="method-summary">Get account list (<span class="nickname">slurmdbV0043GetAccounts</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">description (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV description list default: null </div><div class="param">DELETED (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” include deleted associations default: null </div><div class="param">WithAssociations (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” query includes associations default: null </div><div class="param">WithCoordinators (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” query includes coordinators default: null </div><div class="param">NoUsersAreCoords (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” remove users as coordinators default: null </div><div class="param">UsersAreCoords (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” users are coordinators default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of accounts
        <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a>
    <h4 class="field-label">default</h4>
    List of accounts
        <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetAssociation">
    </a><div class="method-path"><a name="slurmdbV0043GetAssociation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/association/</code></pre></div>
    <div class="method-summary">Get association info (<span class="nickname">slurmdbV0043GetAssociation</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV accounts list default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV clusters list default: null </div><div class="param">default_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">Include deleted associations (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Filter to only defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include the raw QOS or delta_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include sub acct information (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude parent id/name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude limits from parents (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV ID list default: null </div><div class="param">parent_account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV names of parent account default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV partition name list default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user list default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "lineage" : "lineage",
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "active" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "accruing" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "per" : {
          "submitted" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      }
    },
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "is_default" : true,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "comment" : "comment",
    "id" : 4,
    "user" : "user",
    "account" : "account"
  }, {
    "lineage" : "lineage",
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "active" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "accruing" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "per" : {
          "submitted" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      }
    },
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "is_default" : true,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "comment" : "comment",
    "id" : 4,
    "user" : "user",
    "account" : "account"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a>
    <h4 class="field-label">default</h4>
    List of associations
        <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetAssociations">
    </a><div class="method-path"><a name="slurmdbV0043GetAssociations">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/associations/</code></pre></div>
    <div class="method-summary">Get association list (<span class="nickname">slurmdbV0043GetAssociations</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV accounts list default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV clusters list default: null </div><div class="param">default_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">Include deleted associations (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Filter to only defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include the raw QOS or delta_qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Include sub acct information (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude parent id/name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">Exclude limits from parents (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV ID list default: null </div><div class="param">parent_account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV names of parent account default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV partition name list default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS list default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user list default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "lineage" : "lineage",
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "active" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "accruing" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "per" : {
          "submitted" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      }
    },
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "is_default" : true,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "comment" : "comment",
    "id" : 4,
    "user" : "user",
    "account" : "account"
  }, {
    "lineage" : "lineage",
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "active" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "accruing" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "per" : {
          "submitted" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      }
    },
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "is_default" : true,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "comment" : "comment",
    "id" : 4,
    "user" : "user",
    "account" : "account"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of associations
        <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a>
    <h4 class="field-label">default</h4>
    List of associations
        <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetCluster">
    </a><div class="method-path"><a name="slurmdbV0043GetCluster">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/cluster/{cluster_name}</code></pre></div>
    <div class="method-summary">Get cluster info (<span class="nickname">slurmdbV0043GetCluster</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">cluster_name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Cluster name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">classification (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Type of machine default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV cluster list default: null </div><div class="param">federation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV federation list default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">rpc_version (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV RPC version list default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include deleted clusters default: null </div><div class="param">with_usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include usage default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "clusters" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "id" : 5,
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 0,
      "host" : "host"
    },
    "nodes" : "nodes",
    "flags" : [ "DELETED", "DELETED" ],
    "name" : "name",
    "rpc_version" : 6,
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "id" : 5,
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 0,
      "host" : "host"
    },
    "nodes" : "nodes",
    "flags" : [ "DELETED", "DELETED" ],
    "name" : "name",
    "rpc_version" : 6,
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Cluster information
        <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a>
    <h4 class="field-label">default</h4>
    Cluster information
        <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetClusters">
    </a><div class="method-path"><a name="slurmdbV0043GetClusters">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/clusters/</code></pre></div>
    <div class="method-summary">Get cluster list (<span class="nickname">slurmdbV0043GetClusters</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query reservations updated more recently than this time (UNIX timestamp) default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "clusters" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "id" : 5,
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 0,
      "host" : "host"
    },
    "nodes" : "nodes",
    "flags" : [ "DELETED", "DELETED" ],
    "name" : "name",
    "rpc_version" : 6,
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "id" : 5,
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 0,
      "host" : "host"
    },
    "nodes" : "nodes",
    "flags" : [ "DELETED", "DELETED" ],
    "name" : "name",
    "rpc_version" : 6,
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of clusters
        <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a>
    <h4 class="field-label">default</h4>
    List of clusters
        <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetConfig">
    </a><div class="method-path"><a name="slurmdbV0043GetConfig">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/config</code></pre></div>
    <div class="method-summary">Dump all configuration information (<span class="nickname">slurmdbV0043GetConfig</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_config_resp">v0.0.43_openapi_slurmdbd_config_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "associations" : [ {
    "lineage" : "lineage",
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "active" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "accruing" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "per" : {
          "submitted" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      }
    },
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "is_default" : true,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "comment" : "comment",
    "id" : 4,
    "user" : "user",
    "account" : "account"
  }, {
    "lineage" : "lineage",
    "cluster" : "cluster",
    "shares_raw" : 7,
    "max" : {
      "jobs" : {
        "total" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "active" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "accruing" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "per" : {
          "submitted" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "tres" : {
        "total" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ],
        "minutes" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "per" : {
          "node" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "job" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "group" : {
          "minutes" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "active" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        }
      },
      "per" : {
        "account" : {
          "wall_clock" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      }
    },
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "is_default" : true,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "parent_account" : "parent_account",
    "default" : {
      "qos" : "qos"
    },
    "min" : {
      "priority_threshold" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "partition" : "partition",
    "qos" : [ "qos", "qos" ],
    "comment" : "comment",
    "id" : 4,
    "user" : "user",
    "account" : "account"
  } ],
  "qos" : [ {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "id" : 9,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "limits" : {
      "min" : {
        "priority_threshold" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          },
          "active_jobs" : {
            "per" : {
              "user" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              },
              "account" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              }
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "tres" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "minutes" : {
            "total" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "job" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "active_jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "factor" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "grace_time" : 3
    },
    "preempt" : {
      "mode" : [ "DISABLED", "DISABLED" ],
      "exempt_time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "id" : 9,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "limits" : {
      "min" : {
        "priority_threshold" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          },
          "active_jobs" : {
            "per" : {
              "user" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              },
              "account" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              }
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "tres" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "minutes" : {
            "total" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "job" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "active_jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "factor" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "grace_time" : 3
    },
    "preempt" : {
      "mode" : [ "DISABLED", "DISABLED" ],
      "exempt_time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "list" : [ "list", "list" ]
    }
  } ],
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "id" : 7,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "id" : 7,
    "user" : "user"
  } ],
  "instances" : [ {
    "cluster" : "cluster",
    "instance_id" : "instance_id",
    "extra" : "extra",
    "node_name" : "node_name",
    "time" : {
      "time_start" : 1,
      "time_end" : 1
    },
    "instance_type" : "instance_type"
  }, {
    "cluster" : "cluster",
    "instance_id" : "instance_id",
    "extra" : "extra",
    "node_name" : "node_name",
    "time" : {
      "time_start" : 1,
      "time_end" : 1
    },
    "instance_type" : "instance_type"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "tres" : [ {
    "name" : "name",
    "count" : 0,
    "id" : 7,
    "type" : "type"
  }, {
    "name" : "name",
    "count" : 0,
    "id" : 7,
    "type" : "type"
  } ],
  "accounts" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "organization" : "organization",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "description" : "description"
  } ],
  "clusters" : [ {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "id" : 5,
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 0,
      "host" : "host"
    },
    "nodes" : "nodes",
    "flags" : [ "DELETED", "DELETED" ],
    "name" : "name",
    "rpc_version" : 6,
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  }, {
    "associations" : {
      "root" : {
        "cluster" : "cluster",
        "partition" : "partition",
        "id" : 5,
        "user" : "user",
        "account" : "account"
      }
    },
    "controller" : {
      "port" : 0,
      "host" : "host"
    },
    "nodes" : "nodes",
    "flags" : [ "DELETED", "DELETED" ],
    "name" : "name",
    "rpc_version" : 6,
    "tres" : [ {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    }, {
      "name" : "name",
      "count" : 0,
      "id" : 7,
      "type" : "type"
    } ],
    "select_plugin" : "select_plugin"
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    slurmdbd configuration
        <a href="#v0.0.43_openapi_slurmdbd_config_resp">v0.0.43_openapi_slurmdbd_config_resp</a>
    <h4 class="field-label">default</h4>
    slurmdbd configuration
        <a href="#v0.0.43_openapi_slurmdbd_config_resp">v0.0.43_openapi_slurmdbd_config_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetDiag">
    </a><div class="method-path"><a name="slurmdbV0043GetDiag">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/diag/</code></pre></div>
    <div class="method-summary">Get slurmdb diagnostics (<span class="nickname">slurmdbV0043GetDiag</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_stats_resp">v0.0.43_openapi_slurmdbd_stats_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "statistics" : {
    "time_start" : 0,
    "RPCs" : [ {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "average" : 1,
        "total" : 4
      }
    }, {
      "rpc" : "rpc",
      "count" : 7,
      "time" : {
        "average" : 1,
        "total" : 4
      }
    } ],
    "rollups" : {
      "daily" : {
        "duration" : {
          "last" : 3,
          "max" : 2,
          "time" : 4
        },
        "count" : 7,
        "last_run" : 9
      },
      "monthly" : {
        "duration" : {
          "last" : 1,
          "max" : 1,
          "time" : 6
        },
        "count" : 7,
        "last_run" : 1
      },
      "hourly" : {
        "duration" : {
          "last" : 5,
          "max" : 5,
          "time" : 2
        },
        "count" : 6,
        "last_run" : 1
      }
    },
    "users" : [ {
      "count" : 5,
      "time" : {
        "average" : 1,
        "total" : 4
      },
      "user" : "user"
    }, {
      "count" : 5,
      "time" : {
        "average" : 1,
        "total" : 4
      },
      "user" : "user"
    } ]
  }
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Dictionary of statistics
        <a href="#v0.0.43_openapi_slurmdbd_stats_resp">v0.0.43_openapi_slurmdbd_stats_resp</a>
    <h4 class="field-label">default</h4>
    Dictionary of statistics
        <a href="#v0.0.43_openapi_slurmdbd_stats_resp">v0.0.43_openapi_slurmdbd_stats_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetInstance">
    </a><div class="method-path"><a name="slurmdbV0043GetInstance">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/instance/</code></pre></div>
    <div class="method-summary">Get instance info (<span class="nickname">slurmdbV0043GetInstance</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV clusters list default: null </div><div class="param">extra (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV extra list default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">instance_id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV instance_id list default: null </div><div class="param">instance_type (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV instance_type list default: null </div><div class="param">node_list (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ranged node string default: null </div><div class="param">time_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Time end (UNIX timestamp) default: null </div><div class="param">time_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Time start (UNIX timestamp) default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_instances_resp">v0.0.43_openapi_instances_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "instances" : [ {
    "cluster" : "cluster",
    "instance_id" : "instance_id",
    "extra" : "extra",
    "node_name" : "node_name",
    "time" : {
      "time_start" : 1,
      "time_end" : 1
    },
    "instance_type" : "instance_type"
  }, {
    "cluster" : "cluster",
    "instance_id" : "instance_id",
    "extra" : "extra",
    "node_name" : "node_name",
    "time" : {
      "time_start" : 1,
      "time_end" : 1
    },
    "instance_type" : "instance_type"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of instances
        <a href="#v0.0.43_openapi_instances_resp">v0.0.43_openapi_instances_resp</a>
    <h4 class="field-label">default</h4>
    List of instances
        <a href="#v0.0.43_openapi_instances_resp">v0.0.43_openapi_instances_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetInstances">
    </a><div class="method-path"><a name="slurmdbV0043GetInstances">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/instances/</code></pre></div>
    <div class="method-summary">Get instance list (<span class="nickname">slurmdbV0043GetInstances</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV clusters list default: null </div><div class="param">extra (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV extra list default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">instance_id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV instance_id list default: null </div><div class="param">instance_type (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV instance_type list default: null </div><div class="param">node_list (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ranged node string default: null </div><div class="param">time_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Time end (UNIX timestamp) default: null </div><div class="param">time_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Time start (UNIX timestamp) default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_instances_resp">v0.0.43_openapi_instances_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "instances" : [ {
    "cluster" : "cluster",
    "instance_id" : "instance_id",
    "extra" : "extra",
    "node_name" : "node_name",
    "time" : {
      "time_start" : 1,
      "time_end" : 1
    },
    "instance_type" : "instance_type"
  }, {
    "cluster" : "cluster",
    "instance_id" : "instance_id",
    "extra" : "extra",
    "node_name" : "node_name",
    "time" : {
      "time_start" : 1,
      "time_end" : 1
    },
    "instance_type" : "instance_type"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of instances
        <a href="#v0.0.43_openapi_instances_resp">v0.0.43_openapi_instances_resp</a>
    <h4 class="field-label">default</h4>
    List of instances
        <a href="#v0.0.43_openapi_instances_resp">v0.0.43_openapi_instances_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetJob">
    </a><div class="method-path"><a name="slurmdbV0043GetJob">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/job/{job_id}</code></pre></div>
    <div class="method-summary">Get job info (<span class="nickname">slurmdbV0043GetJob</span>)</div>
    <div class="method-notes">This endpoint may return multiple job entries since job_id is not a unique key - only the tuple (cluster, job_id, start_time) is unique. If the requested job_id is a component of a heterogeneous job all components are returned.</div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">job_id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” Job ID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_jobs_resp">v0.0.43_openapi_slurmdbd_jobs_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "stdin" : "stdin",
    "stdout" : "stdout",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 0,
    "working_directory" : "working_directory",
    "qosreq" : "qosreq",
    "constraints" : "constraints",
    "required" : {
      "memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "CPUs" : 9,
      "memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "stdout_expanded" : "stdout_expanded",
    "hold" : true,
    "restart_cnt" : 6,
    "partition" : "partition",
    "segment_size" : 9,
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "requested" : "requested",
      "name" : "name",
      "id" : 8
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : [ "PENDING", "PENDING" ]
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "stderr" : "stderr",
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 7,
      "total" : {
        "seconds" : 6,
        "microseconds" : 7
      },
      "system" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "eligible" : 9,
      "start" : 4,
      "limit" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "end" : 3,
      "submission" : 7,
      "planned" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "user" : {
        "seconds" : 1,
        "microseconds" : 4
      },
      "suspended" : 1
    },
    "user" : "user",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "stdin" : "stdin",
    "stdout" : "stdout",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 0,
    "working_directory" : "working_directory",
    "qosreq" : "qosreq",
    "constraints" : "constraints",
    "required" : {
      "memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "CPUs" : 9,
      "memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "stdout_expanded" : "stdout_expanded",
    "hold" : true,
    "restart_cnt" : 6,
    "partition" : "partition",
    "segment_size" : 9,
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "requested" : "requested",
      "name" : "name",
      "id" : 8
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : [ "PENDING", "PENDING" ]
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "stderr" : "stderr",
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 7,
      "total" : {
        "seconds" : 6,
        "microseconds" : 7
      },
      "system" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "eligible" : 9,
      "start" : 4,
      "limit" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "end" : 3,
      "submission" : 7,
      "planned" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "user" : {
        "seconds" : 1,
        "microseconds" : 4
      },
      "suspended" : 1
    },
    "user" : "user",
    "account" : "account"
  } ],
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Job description
        <a href="#v0.0.43_openapi_slurmdbd_jobs_resp">v0.0.43_openapi_slurmdbd_jobs_resp</a>
    <h4 class="field-label">default</h4>
    Job description
        <a href="#v0.0.43_openapi_slurmdbd_jobs_resp">v0.0.43_openapi_slurmdbd_jobs_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetJobs">
    </a><div class="method-path"><a name="slurmdbV0043GetJobs">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/jobs/</code></pre></div>
    <div class="method-summary">Get job list (<span class="nickname">slurmdbV0043GetJobs</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV account list default: null </div><div class="param">association (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV association list default: null </div><div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV cluster list default: null </div><div class="param">constraints (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV constraint list default: null </div><div class="param">scheduler_unset (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Schedule bits not set default: null </div><div class="param">scheduled_on_submit (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Job was started on submit default: null </div><div class="param">scheduled_by_main (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Job was started from main scheduler default: null </div><div class="param">scheduled_by_backfill (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Job was started from backfill default: null </div><div class="param">job_started (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Job start RPC was received default: null </div><div class="param">exit_code (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Job exit code (numeric) default: null </div><div class="param">show_duplicates (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include duplicate job entries default: null </div><div class="param">skip_steps (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Exclude job step details default: null </div><div class="param">disable_truncate_usage_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Do not truncate the time to usage_start and usage_end default: null </div><div class="param">whole_hetjob (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include details on all hetjob components default: null </div><div class="param">disable_whole_hetjob (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Only show details on specified hetjob components default: null </div><div class="param">disable_wait_for_result (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Tell dbd not to wait for the result default: null </div><div class="param">usage_time_as_submit_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Use usage_time as the submit_time of the job default: null </div><div class="param">show_batch_script (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include job script default: null </div><div class="param">show_job_environment (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include job environment default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">groups (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV group list default: null </div><div class="param">job_name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV job name list default: null </div><div class="param">partition (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV partition name list default: null </div><div class="param">qos (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS name list default: null </div><div class="param">reason (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV reason list default: null </div><div class="param">reservation (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV reservation name list default: null </div><div class="param">reservation_id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV reservation ID list default: null </div><div class="param">state (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV state list default: null </div><div class="param">step (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV step id list default: null </div><div class="param">end_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">start_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">node (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ranged node string where jobs ran default: null </div><div class="param">users (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user name list default: null </div><div class="param">wckey (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV WCKey list default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_jobs_resp">v0.0.43_openapi_slurmdbd_jobs_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "jobs" : [ {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "stdin" : "stdin",
    "stdout" : "stdout",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 0,
    "working_directory" : "working_directory",
    "qosreq" : "qosreq",
    "constraints" : "constraints",
    "required" : {
      "memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "CPUs" : 9,
      "memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "stdout_expanded" : "stdout_expanded",
    "hold" : true,
    "restart_cnt" : 6,
    "partition" : "partition",
    "segment_size" : 9,
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "requested" : "requested",
      "name" : "name",
      "id" : 8
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : [ "PENDING", "PENDING" ]
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "stderr" : "stderr",
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 7,
      "total" : {
        "seconds" : 6,
        "microseconds" : 7
      },
      "system" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "eligible" : 9,
      "start" : 4,
      "limit" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "end" : 3,
      "submission" : 7,
      "planned" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "user" : {
        "seconds" : 1,
        "microseconds" : 4
      },
      "suspended" : 1
    },
    "user" : "user",
    "account" : "account"
  }, {
    "container" : "container",
    "cluster" : "cluster",
    "stdin_expanded" : "stdin_expanded",
    "stdin" : "stdin",
    "stdout" : "stdout",
    "stderr_expanded" : "stderr_expanded",
    "flags" : [ "NONE", "NONE" ],
    "used_gres" : "used_gres",
    "association" : {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    },
    "allocation_nodes" : 0,
    "working_directory" : "working_directory",
    "qosreq" : "qosreq",
    "constraints" : "constraints",
    "required" : {
      "memory_per_node" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "CPUs" : 9,
      "memory_per_cpu" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      }
    },
    "stdout_expanded" : "stdout_expanded",
    "hold" : true,
    "restart_cnt" : 6,
    "partition" : "partition",
    "segment_size" : 9,
    "qos" : "qos",
    "array" : {
      "task" : "task",
      "job_id" : 6,
      "task_id" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "limits" : {
        "max" : {
          "running" : {
            "tasks" : 1
          }
        }
      }
    },
    "het" : {
      "job_id" : 5,
      "job_offset" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      }
    },
    "submit_line" : "submit_line",
    "extra" : "extra",
    "reservation" : {
      "requested" : "requested",
      "name" : "name",
      "id" : 8
    },
    "block" : "block",
    "tres" : {
      "requested" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ],
      "allocated" : [ {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      }, {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      } ]
    },
    "state" : {
      "reason" : "reason",
      "current" : [ "PENDING", "PENDING" ]
    },
    "mcs" : {
      "label" : "label"
    },
    "group" : "group",
    "wckey" : {
      "wckey" : "wckey",
      "flags" : [ "ASSIGNED_DEFAULT", "ASSIGNED_DEFAULT" ]
    },
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "stderr" : "stderr",
    "steps" : [ {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    }, {
      "nodes" : {
        "count" : 6,
        "range" : "range",
        "list" : [ "list", "list" ]
      },
      "task" : {
        "distribution" : "distribution"
      },
      "exit_code" : {
        "return_code" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "signal" : {
          "name" : "name",
          "id" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        },
        "status" : [ "INVALID", "INVALID" ]
      },
      "kill_request_user" : "kill_request_user",
      "CPU" : {
        "governor" : "governor",
        "requested_frequency" : {
          "min" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "max" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "pid" : "pid",
      "step" : {
        "stdin_expanded" : "stdin_expanded",
        "stdin" : "stdin",
        "stdout" : "stdout",
        "stderr_expanded" : "stderr_expanded",
        "name" : "name",
        "id" : "id",
        "stderr" : "stderr",
        "stdout_expanded" : "stdout_expanded"
      },
      "tres" : {
        "consumed" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "requested" : {
          "average" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "min" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "max" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ]
        },
        "allocated" : [ {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        }, {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        } ]
      },
      "time" : {
        "elapsed" : 6,
        "total" : {
          "seconds" : 2,
          "microseconds" : 6
        },
        "system" : {
          "seconds" : 6,
          "microseconds" : 1
        },
        "start" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "limit" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "end" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        },
        "user" : {
          "seconds" : 6,
          "microseconds" : 5
        },
        "suspended" : 3
      },
      "state" : [ "PENDING", "PENDING" ],
      "tasks" : {
        "count" : 3
      },
      "statistics" : {
        "CPU" : {
          "actual_frequency" : 3
        },
        "energy" : {
          "consumed" : {
            "number" : 2,
            "set" : true,
            "infinite" : true
          }
        }
      }
    } ],
    "script" : "script",
    "failed_node" : "failed_node",
    "derived_exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "licenses" : "licenses",
    "nodes" : "nodes",
    "job_id" : 9,
    "exit_code" : {
      "return_code" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "signal" : {
        "name" : "name",
        "id" : {
          "number" : 2,
          "set" : true,
          "infinite" : true
        }
      },
      "status" : [ "INVALID", "INVALID" ]
    },
    "name" : "name",
    "kill_request_user" : "kill_request_user",
    "comment" : {
      "administrator" : "administrator",
      "system" : "system",
      "job" : "job"
    },
    "time" : {
      "elapsed" : 7,
      "total" : {
        "seconds" : 6,
        "microseconds" : 7
      },
      "system" : {
        "seconds" : 1,
        "microseconds" : 1
      },
      "eligible" : 9,
      "start" : 4,
      "limit" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "end" : 3,
      "submission" : 7,
      "planned" : {
        "number" : 2,
        "set" : true,
        "infinite" : true
      },
      "user" : {
        "seconds" : 1,
        "microseconds" : 4
      },
      "suspended" : 1
    },
    "user" : "user",
    "account" : "account"
  } ],
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of jobs
        <a href="#v0.0.43_openapi_slurmdbd_jobs_resp">v0.0.43_openapi_slurmdbd_jobs_resp</a>
    <h4 class="field-label">default</h4>
    List of jobs
        <a href="#v0.0.43_openapi_slurmdbd_jobs_resp">v0.0.43_openapi_slurmdbd_jobs_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetPing">
    </a><div class="method-path"><a name="slurmdbV0043GetPing">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/ping/</code></pre></div>
    <div class="method-summary">ping test (<span class="nickname">slurmdbV0043GetPing</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_ping_resp">v0.0.43_openapi_slurmdbd_ping_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "pings" : [ {
    "responding" : true,
    "hostname" : "hostname",
    "latency" : 0,
    "primary" : true
  }, {
    "responding" : true,
    "hostname" : "hostname",
    "latency" : 0,
    "primary" : true
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    results of ping test
        <a href="#v0.0.43_openapi_slurmdbd_ping_resp">v0.0.43_openapi_slurmdbd_ping_resp</a>
    <h4 class="field-label">default</h4>
    results of ping test
        <a href="#v0.0.43_openapi_slurmdbd_ping_resp">v0.0.43_openapi_slurmdbd_ping_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetQos">
    </a><div class="method-path"><a name="slurmdbV0043GetQos">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/qos/</code></pre></div>
    <div class="method-summary">Get QOS list (<span class="nickname">slurmdbV0043GetQos</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">description (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV description list default: null </div><div class="param">Include deleted QOS (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS id list default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS name list default: null </div><div class="param">preempt_mode (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” PreemptMode used when jobs in this QOS are preempted default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "id" : 9,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "limits" : {
      "min" : {
        "priority_threshold" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          },
          "active_jobs" : {
            "per" : {
              "user" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              },
              "account" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              }
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "tres" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "minutes" : {
            "total" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "job" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "active_jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "factor" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "grace_time" : 3
    },
    "preempt" : {
      "mode" : [ "DISABLED", "DISABLED" ],
      "exempt_time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "id" : 9,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "limits" : {
      "min" : {
        "priority_threshold" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          },
          "active_jobs" : {
            "per" : {
              "user" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              },
              "account" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              }
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "tres" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "minutes" : {
            "total" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "job" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "active_jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "factor" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "grace_time" : 3
    },
    "preempt" : {
      "mode" : [ "DISABLED", "DISABLED" ],
      "exempt_time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "list" : [ "list", "list" ]
    }
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of QOS
        <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a>
    <h4 class="field-label">default</h4>
    List of QOS
        <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetSingleQos">
    </a><div class="method-path"><a name="slurmdbV0043GetSingleQos">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/qos/{qos}</code></pre></div>
    <div class="method-summary">Get QOS info (<span class="nickname">slurmdbV0043GetSingleQos</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">qos (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” QOS name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query includes deleted QOS default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "qos" : [ {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "id" : 9,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "limits" : {
      "min" : {
        "priority_threshold" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          },
          "active_jobs" : {
            "per" : {
              "user" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              },
              "account" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              }
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "tres" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "minutes" : {
            "total" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "job" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "active_jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "factor" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "grace_time" : 3
    },
    "preempt" : {
      "mode" : [ "DISABLED", "DISABLED" ],
      "exempt_time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "list" : [ "list", "list" ]
    }
  }, {
    "flags" : [ "NOT_SET", "NOT_SET" ],
    "name" : "name",
    "usage_threshold" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "description" : "description",
    "usage_factor" : {
      "number" : 2.027123023002322,
      "set" : true,
      "infinite" : true
    },
    "id" : 9,
    "priority" : {
      "number" : 5,
      "set" : true,
      "infinite" : true
    },
    "limits" : {
      "min" : {
        "priority_threshold" : {
          "number" : 5,
          "set" : true,
          "infinite" : true
        },
        "tres" : {
          "per" : {
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        }
      },
      "max" : {
        "jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          },
          "active_jobs" : {
            "per" : {
              "user" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              },
              "account" : {
                "number" : 5,
                "set" : true,
                "infinite" : true
              }
            }
          }
        },
        "accruing" : {
          "per" : {
            "user" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "account" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "tres" : {
          "total" : [ {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          }, {
            "name" : "name",
            "count" : 0,
            "id" : 7,
            "type" : "type"
          } ],
          "minutes" : {
            "total" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "per" : {
              "qos" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "job" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "user" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ],
              "account" : [ {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              }, {
                "name" : "name",
                "count" : 0,
                "id" : 7,
                "type" : "type"
              } ]
            }
          },
          "per" : {
            "node" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "job" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "user" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ],
            "account" : [ {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            }, {
              "name" : "name",
              "count" : 0,
              "id" : 7,
              "type" : "type"
            } ]
          }
        },
        "wall_clock" : {
          "per" : {
            "qos" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            },
            "job" : {
              "number" : 5,
              "set" : true,
              "infinite" : true
            }
          }
        },
        "active_jobs" : {
          "count" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          },
          "accruing" : {
            "number" : 5,
            "set" : true,
            "infinite" : true
          }
        }
      },
      "factor" : {
        "number" : 2.027123023002322,
        "set" : true,
        "infinite" : true
      },
      "grace_time" : 3
    },
    "preempt" : {
      "mode" : [ "DISABLED", "DISABLED" ],
      "exempt_time" : {
        "number" : 5,
        "set" : true,
        "infinite" : true
      },
      "list" : [ "list", "list" ]
    }
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS information
        <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a>
    <h4 class="field-label">default</h4>
    QOS information
        <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetTres">
    </a><div class="method-path"><a name="slurmdbV0043GetTres">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/tres/</code></pre></div>
    <div class="method-summary">Get TRES info (<span class="nickname">slurmdbV0043GetTres</span>)</div>
    <div class="method-notes"></div>







    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_tres_resp">v0.0.43_openapi_tres_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "TRES" : [ {
    "name" : "name",
    "count" : 0,
    "id" : 7,
    "type" : "type"
  }, {
    "name" : "name",
    "count" : 0,
    "id" : 7,
    "type" : "type"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of TRES
        <a href="#v0.0.43_openapi_tres_resp">v0.0.43_openapi_tres_resp</a>
    <h4 class="field-label">default</h4>
    List of TRES
        <a href="#v0.0.43_openapi_tres_resp">v0.0.43_openapi_tres_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetUser">
    </a><div class="method-path"><a name="slurmdbV0043GetUser">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/user/{name}</code></pre></div>
    <div class="method-summary">Get user info (<span class="nickname">slurmdbV0043GetUser</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">name (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” User name default: null </div>
    </div>  <!-- field-items -->




    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include deleted users default: null </div><div class="param">with_assocs (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include associations default: null </div><div class="param">with_coords (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include coordinators default: null </div><div class="param">with_wckeys (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include WCKeys default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a>
    <h4 class="field-label">default</h4>
    List of users
        <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetUsers">
    </a><div class="method-path"><a name="slurmdbV0043GetUsers">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/users/</code></pre></div>
    <div class="method-summary">Get user list (<span class="nickname">slurmdbV0043GetUsers</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">admin_level (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Administrator level default: null </div><div class="param">default_account (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV default account list default: null </div><div class="param">default_wckey (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV default WCKey list default: null </div><div class="param">with_assocs (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” With associations default: null </div><div class="param">with_coords (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” With coordinators default: null </div><div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” With deleted default: null </div><div class="param">with_wckeys (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” With WCKeys default: null </div><div class="param">without_defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Exclude defaults default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "users" : [ {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  }, {
    "associations" : [ {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    }, {
      "cluster" : "cluster",
      "partition" : "partition",
      "id" : 5,
      "user" : "user",
      "account" : "account"
    } ],
    "default" : {
      "wckey" : "wckey",
      "account" : "account"
    },
    "administrator_level" : [ "Not Set", "Not Set" ],
    "old_name" : "old_name",
    "wckeys" : [ {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    }, {
      "cluster" : "cluster",
      "name" : "name",
      "flags" : [ "DELETED", "DELETED" ],
      "accounting" : [ {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      }, {
        "start" : 2,
        "id" : 5,
        "TRES" : {
          "name" : "name",
          "count" : 0,
          "id" : 7,
          "type" : "type"
        },
        "allocated" : {
          "seconds" : 1
        },
        "id_alt" : 5
      } ],
      "id" : 7,
      "user" : "user"
    } ],
    "coordinators" : [ {
      "name" : "name",
      "direct" : true
    }, {
      "name" : "name",
      "direct" : true
    } ],
    "flags" : [ "NONE", "NONE" ],
    "name" : "name"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of users
        <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a>
    <h4 class="field-label">default</h4>
    List of users
        <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetWckey">
    </a><div class="method-path"><a name="slurmdbV0043GetWckey">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/wckey/{id}</code></pre></div>
    <div class="method-summary">Get wckey info (<span class="nickname">slurmdbV0043GetWckey</span>)</div>
    <div class="method-notes"></div>

    <h3 class="field-label">Path parameters</h3>
    <div class="field-items">
      <div class="param">id (required)</div>

      <div class="param-desc"><span class="param-type">Path Parameter</span> â€” WCKey ID default: null </div>
    </div>  <!-- field-items -->






    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "id" : 7,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "id" : 7,
    "user" : "user"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Description of wckey
        <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a>
    <h4 class="field-label">default</h4>
    Description of wckey
        <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043GetWckeys">
    </a><div class="method-path"><a name="slurmdbV0043GetWckeys">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="get"><code class="huge"><span class="http-method">get</span> /slurmdb/v0.0.43/wckeys/</code></pre></div>
    <div class="method-summary">Get wckey list (<span class="nickname">slurmdbV0043GetWckeys</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV cluster name list default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV ID list default: null </div><div class="param">name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV name list default: null </div><div class="param">only_defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Only query defaults default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user list default: null </div><div class="param">with_usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include usage default: null </div><div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include deleted WCKeys default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "wckeys" : [ {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "id" : 7,
    "user" : "user"
  }, {
    "cluster" : "cluster",
    "name" : "name",
    "flags" : [ "DELETED", "DELETED" ],
    "accounting" : [ {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    }, {
      "start" : 2,
      "id" : 5,
      "TRES" : {
        "name" : "name",
        "count" : 0,
        "id" : 7,
        "type" : "type"
      },
      "allocated" : {
        "seconds" : 1
      },
      "id_alt" : 5
    } ],
    "id" : 7,
    "user" : "user"
  } ],
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    List of wckeys
        <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a>
    <h4 class="field-label">default</h4>
    List of wckeys
        <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostAccounts">
    </a><div class="method-path"><a name="slurmdbV0043PostAccounts">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/accounts/</code></pre></div>
    <div class="method-summary">Add/update list of accounts (<span class="nickname">slurmdbV0043PostAccounts</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_accounts_resp <a href="#v0.0.43_openapi_accounts_resp">v0.0.43_openapi_accounts_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Status of account update request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    Status of account update request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostAccountsAssociation">
    </a><div class="method-path"><a name="slurmdbV0043PostAccountsAssociation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/accounts_association/</code></pre></div>
    <div class="method-summary">Add accounts with conditional association (<span class="nickname">slurmdbV0043PostAccountsAssociation</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_accounts_add_cond_resp <a href="#v0.0.43_openapi_accounts_add_cond_resp">v0.0.43_openapi_accounts_add_cond_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_accounts_add_cond_resp_str">v0.0.43_openapi_accounts_add_cond_resp_str</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ],
  "added_accounts" : "added_accounts"
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Status of account addition request
        <a href="#v0.0.43_openapi_accounts_add_cond_resp_str">v0.0.43_openapi_accounts_add_cond_resp_str</a>
    <h4 class="field-label">default</h4>
    Status of account addition request
        <a href="#v0.0.43_openapi_accounts_add_cond_resp_str">v0.0.43_openapi_accounts_add_cond_resp_str</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostAssociations">
    </a><div class="method-path"><a name="slurmdbV0043PostAssociations">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/associations/</code></pre></div>
    <div class="method-summary">Set associations info (<span class="nickname">slurmdbV0043PostAssociations</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_assocs_resp <a href="#v0.0.43_openapi_assocs_resp">v0.0.43_openapi_assocs_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    status of associations update
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    status of associations update
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostClusters">
    </a><div class="method-path"><a name="slurmdbV0043PostClusters">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/clusters/</code></pre></div>
    <div class="method-summary">Get cluster list (<span class="nickname">slurmdbV0043PostClusters</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_clusters_resp <a href="#v0.0.43_openapi_clusters_resp">v0.0.43_openapi_clusters_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->


    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query reservations updated more recently than this time (UNIX timestamp) default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Result of modify clusters request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    Result of modify clusters request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostConfig">
    </a><div class="method-path"><a name="slurmdbV0043PostConfig">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/config</code></pre></div>
    <div class="method-summary">Load all configuration information (<span class="nickname">slurmdbV0043PostConfig</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_slurmdbd_config_resp <a href="#v0.0.43_openapi_slurmdbd_config_resp">v0.0.43_openapi_slurmdbd_config_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    slurmdbd configuration
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    slurmdbd configuration
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostQos">
    </a><div class="method-path"><a name="slurmdbV0043PostQos">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/qos/</code></pre></div>
    <div class="method-summary">Add or update QOSs (<span class="nickname">slurmdbV0043PostQos</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_slurmdbd_qos_resp <a href="#v0.0.43_openapi_slurmdbd_qos_resp">v0.0.43_openapi_slurmdbd_qos_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->


    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">description (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV description list default: null </div><div class="param">Include deleted QOS (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€”  default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS id list default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV QOS name list default: null </div><div class="param">preempt_mode (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” PreemptMode used when jobs in this QOS are preempted default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    QOS update response
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    QOS update response
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostTres">
    </a><div class="method-path"><a name="slurmdbV0043PostTres">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/tres/</code></pre></div>
    <div class="method-summary">Add TRES (<span class="nickname">slurmdbV0043PostTres</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_tres_resp <a href="#v0.0.43_openapi_tres_resp">v0.0.43_openapi_tres_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    TRES update result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    TRES update result
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostUsers">
    </a><div class="method-path"><a name="slurmdbV0043PostUsers">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/users/</code></pre></div>
    <div class="method-summary">Update users (<span class="nickname">slurmdbV0043PostUsers</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_users_resp <a href="#v0.0.43_openapi_users_resp">v0.0.43_openapi_users_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->




    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Status of user update request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    Status of user update request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostUsersAssociation">
    </a><div class="method-path"><a name="slurmdbV0043PostUsersAssociation">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/users_association/</code></pre></div>
    <div class="method-summary">Add users with conditional association (<span class="nickname">slurmdbV0043PostUsersAssociation</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_users_add_cond_resp <a href="#v0.0.43_openapi_users_add_cond_resp">v0.0.43_openapi_users_add_cond_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->


    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">update_time (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query partitions updated more recently than this time (UNIX timestamp) default: null </div><div class="param">flags (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Query flags default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_users_add_cond_resp_str">v0.0.43_openapi_users_add_cond_resp_str</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "added_users" : "added_users",
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Add list of users with conditional association
        <a href="#v0.0.43_openapi_users_add_cond_resp_str">v0.0.43_openapi_users_add_cond_resp_str</a>
    <h4 class="field-label">default</h4>
    Add list of users with conditional association
        <a href="#v0.0.43_openapi_users_add_cond_resp_str">v0.0.43_openapi_users_add_cond_resp_str</a>
  </div> <!-- method -->
  <hr>
  <div class="method"><a name="slurmdbV0043PostWckeys">
    </a><div class="method-path"><a name="slurmdbV0043PostWckeys">
    </a><a class="up" href="#__Methods">Up</a>
    <pre class="post"><code class="huge"><span class="http-method">post</span> /slurmdb/v0.0.43/wckeys/</code></pre></div>
    <div class="method-summary">Add or update wckeys (<span class="nickname">slurmdbV0043PostWckeys</span>)</div>
    <div class="method-notes"></div>


    <h3 class="field-label">Consumes</h3>
    This API call consumes the following media types via the <span class="header">Content-Type</span> request header:
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Request body</h3>
    <div class="field-items">
      <div class="param">v0.0.43_openapi_wckey_resp <a href="#v0.0.43_openapi_wckey_resp">v0.0.43_openapi_wckey_resp</a> (optional)</div>

      <div class="param-desc"><span class="param-type">Body Parameter</span> â€”  </div>

    </div>  <!-- field-items -->


    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
      <div class="param">cluster (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV cluster name list default: null </div><div class="param">format (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Ignored; process JSON manually to control output format default: null </div><div class="param">id (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV ID list default: null </div><div class="param">name (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV name list default: null </div><div class="param">only_defaults (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Only query defaults default: null </div><div class="param">usage_end (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage end (UNIX timestamp) default: null </div><div class="param">usage_start (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Usage start (UNIX timestamp) default: null </div><div class="param">user (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” CSV user list default: null </div><div class="param">with_usage (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include usage default: null </div><div class="param">with_deleted (optional)</div>

      <div class="param-desc"><span class="param-type">Query Parameter</span> â€” Include deleted WCKeys default: null </div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
      <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{
  "meta" : {
    "slurm" : {
      "cluster" : "cluster",
      "release" : "release",
      "version" : {
        "major" : "major",
        "minor" : "minor",
        "micro" : "micro"
      }
    },
    "plugin" : {
      "accounting_storage" : "accounting_storage",
      "name" : "name",
      "type" : "type",
      "data_parser" : "data_parser"
    },
    "client" : {
      "source" : "source",
      "user" : "user",
      "group" : "group"
    },
    "command" : [ "command", "command" ]
  },
  "warnings" : [ {
    "description" : "description",
    "source" : "source"
  }, {
    "description" : "description",
    "source" : "source"
  } ],
  "errors" : [ {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  }, {
    "description" : "description",
    "source" : "source",
    "error" : "error",
    "error_number" : 7
  } ]
}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
      <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Result of wckey addition or update request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
    <h4 class="field-label">default</h4>
    Result of wckey addition or update request
        <a href="#v0.0.43_openapi_resp">v0.0.43_openapi_resp</a>
  </div> <!-- method -->
  <hr>

  <h2><a name="__Models">Models</a></h2>
  [ Jump to <a href="#__Methods">Methods</a> ]

  <h3>Table of Contents</h3>
  <ol>
    <li><a href="#v0.0.43_account"><code>v0.0.43_account</code> - </a></li>
    <li><a href="#v0.0.43_account_short"><code>v0.0.43_account_short</code> - </a></li>
    <li><a href="#v0.0.43_accounting"><code>v0.0.43_accounting</code> - </a></li>
    <li><a href="#v0.0.43_accounts_add_cond"><code>v0.0.43_accounts_add_cond</code> - </a></li>
    <li><a href="#v0.0.43_acct_gather_energy"><code>v0.0.43_acct_gather_energy</code> - </a></li>
    <li><a href="#v0.0.43_assoc"><code>v0.0.43_assoc</code> - </a></li>
    <li><a href="#v0.0.43_assoc_rec_set"><code>v0.0.43_assoc_rec_set</code> - </a></li>
    <li><a href="#v0.0.43_assoc_shares_obj_wrap"><code>v0.0.43_assoc_shares_obj_wrap</code> - </a></li>
    <li><a href="#v0.0.43_assoc_short"><code>v0.0.43_assoc_short</code> - </a></li>
    <li><a href="#v0.0.43_bf_exit_fields"><code>v0.0.43_bf_exit_fields</code> - </a></li>
    <li><a href="#v0.0.43_cluster_rec"><code>v0.0.43_cluster_rec</code> - </a></li>
    <li><a href="#v0.0.43_controller_ping"><code>v0.0.43_controller_ping</code> - </a></li>
    <li><a href="#v0.0.43_coord"><code>v0.0.43_coord</code> - </a></li>
    <li><a href="#v0.0.43_cron_entry"><code>v0.0.43_cron_entry</code> - </a></li>
    <li><a href="#v0.0.43_float64_no_val_struct"><code>v0.0.43_float64_no_val_struct</code> - </a></li>
    <li><a href="#v0.0.43_instance"><code>v0.0.43_instance</code> - </a></li>
    <li><a href="#v0.0.43_job"><code>v0.0.43_job</code> - </a></li>
    <li><a href="#v0.0.43_job_alloc_req"><code>v0.0.43_job_alloc_req</code> - </a></li>
    <li><a href="#v0.0.43_job_array_response_msg_entry"><code>v0.0.43_job_array_response_msg_entry</code> - </a></li>
    <li><a href="#v0.0.43_job_desc_msg"><code>v0.0.43_job_desc_msg</code> - </a></li>
    <li><a href="#v0.0.43_job_info"><code>v0.0.43_job_info</code> - </a></li>
    <li><a href="#v0.0.43_job_res"><code>v0.0.43_job_res</code> - </a></li>
    <li><a href="#v0.0.43_job_res_core"><code>v0.0.43_job_res_core</code> - </a></li>
    <li><a href="#v0.0.43_job_res_node"><code>v0.0.43_job_res_node</code> - </a></li>
    <li><a href="#v0.0.43_job_res_socket"><code>v0.0.43_job_res_socket</code> - </a></li>
    <li><a href="#v0.0.43_job_submit_req"><code>v0.0.43_job_submit_req</code> - </a></li>
    <li><a href="#v0.0.43_kill_jobs_msg"><code>v0.0.43_kill_jobs_msg</code> - </a></li>
    <li><a href="#v0.0.43_kill_jobs_resp_job"><code>v0.0.43_kill_jobs_resp_job</code> - </a></li>
    <li><a href="#v0.0.43_license"><code>v0.0.43_license</code> - </a></li>
    <li><a href="#v0.0.43_node"><code>v0.0.43_node</code> - </a></li>
    <li><a href="#v0.0.43_openapi_accounts_add_cond_resp"><code>v0.0.43_openapi_accounts_add_cond_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_accounts_add_cond_resp_str"><code>v0.0.43_openapi_accounts_add_cond_resp_str</code> - </a></li>
    <li><a href="#v0.0.43_openapi_accounts_removed_resp"><code>v0.0.43_openapi_accounts_removed_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_accounts_resp"><code>v0.0.43_openapi_accounts_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_assocs_removed_resp"><code>v0.0.43_openapi_assocs_removed_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_assocs_resp"><code>v0.0.43_openapi_assocs_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_clusters_removed_resp"><code>v0.0.43_openapi_clusters_removed_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_clusters_resp"><code>v0.0.43_openapi_clusters_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_diag_resp"><code>v0.0.43_openapi_diag_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_error"><code>v0.0.43_openapi_error</code> - </a></li>
    <li><a href="#v0.0.43_openapi_instances_resp"><code>v0.0.43_openapi_instances_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_job_alloc_resp"><code>v0.0.43_openapi_job_alloc_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_job_info_resp"><code>v0.0.43_openapi_job_info_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_job_post_response"><code>v0.0.43_openapi_job_post_response</code> - </a></li>
    <li><a href="#v0.0.43_openapi_job_submit_response"><code>v0.0.43_openapi_job_submit_response</code> - </a></li>
    <li><a href="#v0.0.43_openapi_kill_job_resp"><code>v0.0.43_openapi_kill_job_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_kill_jobs_resp"><code>v0.0.43_openapi_kill_jobs_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_licenses_resp"><code>v0.0.43_openapi_licenses_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_meta"><code>v0.0.43_openapi_meta</code> - </a></li>
    <li><a href="#v0.0.43_openapi_nodes_resp"><code>v0.0.43_openapi_nodes_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_partition_resp"><code>v0.0.43_openapi_partition_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_ping_array_resp"><code>v0.0.43_openapi_ping_array_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_reservation_mod_resp"><code>v0.0.43_openapi_reservation_mod_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_reservation_resp"><code>v0.0.43_openapi_reservation_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_resp"><code>v0.0.43_openapi_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_shares_resp"><code>v0.0.43_openapi_shares_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_slurmdbd_config_resp"><code>v0.0.43_openapi_slurmdbd_config_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_slurmdbd_jobs_resp"><code>v0.0.43_openapi_slurmdbd_jobs_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_slurmdbd_ping_resp"><code>v0.0.43_openapi_slurmdbd_ping_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_slurmdbd_qos_removed_resp"><code>v0.0.43_openapi_slurmdbd_qos_removed_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_slurmdbd_qos_resp"><code>v0.0.43_openapi_slurmdbd_qos_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_slurmdbd_stats_resp"><code>v0.0.43_openapi_slurmdbd_stats_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_tres_resp"><code>v0.0.43_openapi_tres_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_users_add_cond_resp"><code>v0.0.43_openapi_users_add_cond_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_users_add_cond_resp_str"><code>v0.0.43_openapi_users_add_cond_resp_str</code> - </a></li>
    <li><a href="#v0.0.43_openapi_users_resp"><code>v0.0.43_openapi_users_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_warning"><code>v0.0.43_openapi_warning</code> - </a></li>
    <li><a href="#v0.0.43_openapi_wckey_removed_resp"><code>v0.0.43_openapi_wckey_removed_resp</code> - </a></li>
    <li><a href="#v0.0.43_openapi_wckey_resp"><code>v0.0.43_openapi_wckey_resp</code> - </a></li>
    <li><a href="#v0.0.43_part_prio"><code>v0.0.43_part_prio</code> - </a></li>
    <li><a href="#v0.0.43_partition_info"><code>v0.0.43_partition_info</code> - </a></li>
    <li><a href="#v0.0.43_process_exit_code_verbose"><code>v0.0.43_process_exit_code_verbose</code> - </a></li>
    <li><a href="#v0.0.43_qos"><code>v0.0.43_qos</code> - </a></li>
    <li><a href="#v0.0.43_reservation_core_spec"><code>v0.0.43_reservation_core_spec</code> - </a></li>
    <li><a href="#v0.0.43_reservation_desc_msg"><code>v0.0.43_reservation_desc_msg</code> - </a></li>
    <li><a href="#v0.0.43_reservation_info"><code>v0.0.43_reservation_info</code> - </a></li>
    <li><a href="#v0.0.43_reservation_mod_req"><code>v0.0.43_reservation_mod_req</code> - </a></li>
    <li><a href="#v0.0.43_rollup_stats"><code>v0.0.43_rollup_stats</code> - </a></li>
    <li><a href="#v0.0.43_schedule_exit_fields"><code>v0.0.43_schedule_exit_fields</code> - </a></li>
    <li><a href="#v0.0.43_shares_float128_tres"><code>v0.0.43_shares_float128_tres</code> - </a></li>
    <li><a href="#v0.0.43_shares_resp_msg"><code>v0.0.43_shares_resp_msg</code> - </a></li>
    <li><a href="#v0.0.43_shares_uint64_tres"><code>v0.0.43_shares_uint64_tres</code> - </a></li>
    <li><a href="#v0.0.43_slurmdbd_ping"><code>v0.0.43_slurmdbd_ping</code> - </a></li>
    <li><a href="#v0.0.43_stats_msg"><code>v0.0.43_stats_msg</code> - </a></li>
    <li><a href="#v0.0.43_stats_msg_rpc_dump"><code>v0.0.43_stats_msg_rpc_dump</code> - </a></li>
    <li><a href="#v0.0.43_stats_msg_rpc_queue"><code>v0.0.43_stats_msg_rpc_queue</code> - </a></li>
    <li><a href="#v0.0.43_stats_msg_rpc_type"><code>v0.0.43_stats_msg_rpc_type</code> - </a></li>
    <li><a href="#v0.0.43_stats_msg_rpc_user"><code>v0.0.43_stats_msg_rpc_user</code> - </a></li>
    <li><a href="#v0.0.43_stats_rec"><code>v0.0.43_stats_rec</code> - </a></li>
    <li><a href="#v0.0.43_stats_rpc"><code>v0.0.43_stats_rpc</code> - </a></li>
    <li><a href="#v0.0.43_stats_user"><code>v0.0.43_stats_user</code> - </a></li>
    <li><a href="#v0.0.43_step"><code>v0.0.43_step</code> - </a></li>
    <li><a href="#v0.0.43_tres"><code>v0.0.43_tres</code> - </a></li>
    <li><a href="#v0.0.43_uint16_no_val_struct"><code>v0.0.43_uint16_no_val_struct</code> - </a></li>
    <li><a href="#v0.0.43_uint32_no_val_struct"><code>v0.0.43_uint32_no_val_struct</code> - </a></li>
    <li><a href="#v0.0.43_uint64_no_val_struct"><code>v0.0.43_uint64_no_val_struct</code> - </a></li>
    <li><a href="#v0.0.43_update_node_msg"><code>v0.0.43_update_node_msg</code> - </a></li>
    <li><a href="#v0.0.43_user"><code>v0.0.43_user</code> - </a></li>
    <li><a href="#v0.0.43_user_short"><code>v0.0.43_user_short</code> - </a></li>
    <li><a href="#v0.0.43_users_add_cond"><code>v0.0.43_users_add_cond</code> - </a></li>
    <li><a href="#v0.0.43_wckey"><code>v0.0.43_wckey</code> - </a></li>
    <li><a href="#v0.0.43_wckey_tag_struct"><code>v0.0.43_wckey_tag_struct</code> - </a></li>
    <li><a href="#v0_0_43_accounting_allocated"><code>v0_0_43_accounting_allocated</code> - </a></li>
    <li><a href="#v0_0_43_assoc_default"><code>v0_0_43_assoc_default</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max"><code>v0_0_43_assoc_max</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_jobs"><code>v0_0_43_assoc_max_jobs</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_jobs_per"><code>v0_0_43_assoc_max_jobs_per</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_per"><code>v0_0_43_assoc_max_per</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_per_account"><code>v0_0_43_assoc_max_per_account</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_tres"><code>v0_0_43_assoc_max_tres</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_tres_group"><code>v0_0_43_assoc_max_tres_group</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_tres_minutes"><code>v0_0_43_assoc_max_tres_minutes</code> - </a></li>
    <li><a href="#v0_0_43_assoc_max_tres_per"><code>v0_0_43_assoc_max_tres_per</code> - </a></li>
    <li><a href="#v0_0_43_assoc_min"><code>v0_0_43_assoc_min</code> - </a></li>
    <li><a href="#v0_0_43_assoc_shares_obj_wrap_fairshare"><code>v0_0_43_assoc_shares_obj_wrap_fairshare</code> - </a></li>
    <li><a href="#v0_0_43_assoc_shares_obj_wrap_tres"><code>v0_0_43_assoc_shares_obj_wrap_tres</code> - </a></li>
    <li><a href="#v0_0_43_cluster_rec_associations"><code>v0_0_43_cluster_rec_associations</code> - </a></li>
    <li><a href="#v0_0_43_cluster_rec_controller"><code>v0_0_43_cluster_rec_controller</code> - </a></li>
    <li><a href="#v0_0_43_cron_entry_line"><code>v0_0_43_cron_entry_line</code> - </a></li>
    <li><a href="#v0_0_43_instance_time"><code>v0_0_43_instance_time</code> - </a></li>
    <li><a href="#v0_0_43_job_array"><code>v0_0_43_job_array</code> - </a></li>
    <li><a href="#v0_0_43_job_array_limits"><code>v0_0_43_job_array_limits</code> - </a></li>
    <li><a href="#v0_0_43_job_array_limits_max"><code>v0_0_43_job_array_limits_max</code> - </a></li>
    <li><a href="#v0_0_43_job_array_limits_max_running"><code>v0_0_43_job_array_limits_max_running</code> - </a></li>
    <li><a href="#v0_0_43_job_comment"><code>v0_0_43_job_comment</code> - </a></li>
    <li><a href="#v0_0_43_job_desc_msg_rlimits"><code>v0_0_43_job_desc_msg_rlimits</code> - </a></li>
    <li><a href="#v0_0_43_job_het"><code>v0_0_43_job_het</code> - </a></li>
    <li><a href="#v0_0_43_job_info_power"><code>v0_0_43_job_info_power</code> - </a></li>
    <li><a href="#v0_0_43_job_mcs"><code>v0_0_43_job_mcs</code> - </a></li>
    <li><a href="#v0_0_43_job_required"><code>v0_0_43_job_required</code> - </a></li>
    <li><a href="#v0_0_43_job_res_node_cpus"><code>v0_0_43_job_res_node_cpus</code> - </a></li>
    <li><a href="#v0_0_43_job_res_node_memory"><code>v0_0_43_job_res_node_memory</code> - </a></li>
    <li><a href="#v0_0_43_job_res_nodes"><code>v0_0_43_job_res_nodes</code> - </a></li>
    <li><a href="#v0_0_43_job_reservation"><code>v0_0_43_job_reservation</code> - </a></li>
    <li><a href="#v0_0_43_job_state"><code>v0_0_43_job_state</code> - </a></li>
    <li><a href="#v0_0_43_job_time"><code>v0_0_43_job_time</code> - </a></li>
    <li><a href="#v0_0_43_job_time_system"><code>v0_0_43_job_time_system</code> - </a></li>
    <li><a href="#v0_0_43_job_time_total"><code>v0_0_43_job_time_total</code> - </a></li>
    <li><a href="#v0_0_43_job_time_user"><code>v0_0_43_job_time_user</code> - </a></li>
    <li><a href="#v0_0_43_job_tres"><code>v0_0_43_job_tres</code> - </a></li>
    <li><a href="#v0_0_43_kill_jobs_resp_job_error"><code>v0_0_43_kill_jobs_resp_job_error</code> - </a></li>
    <li><a href="#v0_0_43_kill_jobs_resp_job_federation"><code>v0_0_43_kill_jobs_resp_job_federation</code> - </a></li>
    <li><a href="#v0_0_43_openapi_meta_client"><code>v0_0_43_openapi_meta_client</code> - </a></li>
    <li><a href="#v0_0_43_openapi_meta_plugin"><code>v0_0_43_openapi_meta_plugin</code> - </a></li>
    <li><a href="#v0_0_43_openapi_meta_slurm"><code>v0_0_43_openapi_meta_slurm</code> - </a></li>
    <li><a href="#v0_0_43_openapi_meta_slurm_version"><code>v0_0_43_openapi_meta_slurm_version</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_accounts"><code>v0_0_43_partition_info_accounts</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_cpus"><code>v0_0_43_partition_info_cpus</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_defaults"><code>v0_0_43_partition_info_defaults</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_groups"><code>v0_0_43_partition_info_groups</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_maximums"><code>v0_0_43_partition_info_maximums</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_maximums_oversubscribe"><code>v0_0_43_partition_info_maximums_oversubscribe</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_minimums"><code>v0_0_43_partition_info_minimums</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_nodes"><code>v0_0_43_partition_info_nodes</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_partition"><code>v0_0_43_partition_info_partition</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_priority"><code>v0_0_43_partition_info_priority</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_qos"><code>v0_0_43_partition_info_qos</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_timeouts"><code>v0_0_43_partition_info_timeouts</code> - </a></li>
    <li><a href="#v0_0_43_partition_info_tres"><code>v0_0_43_partition_info_tres</code> - </a></li>
    <li><a href="#v0_0_43_process_exit_code_verbose_signal"><code>v0_0_43_process_exit_code_verbose_signal</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits"><code>v0_0_43_qos_limits</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max"><code>v0_0_43_qos_limits_max</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_active_jobs"><code>v0_0_43_qos_limits_max_active_jobs</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_jobs"><code>v0_0_43_qos_limits_max_jobs</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_jobs_active_jobs"><code>v0_0_43_qos_limits_max_jobs_active_jobs</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_jobs_active_jobs_per"><code>v0_0_43_qos_limits_max_jobs_active_jobs_per</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_tres"><code>v0_0_43_qos_limits_max_tres</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_tres_minutes"><code>v0_0_43_qos_limits_max_tres_minutes</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_tres_minutes_per"><code>v0_0_43_qos_limits_max_tres_minutes_per</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_tres_per"><code>v0_0_43_qos_limits_max_tres_per</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_wall_clock"><code>v0_0_43_qos_limits_max_wall_clock</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_max_wall_clock_per"><code>v0_0_43_qos_limits_max_wall_clock_per</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_min"><code>v0_0_43_qos_limits_min</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_min_tres"><code>v0_0_43_qos_limits_min_tres</code> - </a></li>
    <li><a href="#v0_0_43_qos_limits_min_tres_per"><code>v0_0_43_qos_limits_min_tres_per</code> - </a></li>
    <li><a href="#v0_0_43_qos_preempt"><code>v0_0_43_qos_preempt</code> - </a></li>
    <li><a href="#v0_0_43_reservation_info_purge_completed"><code>v0_0_43_reservation_info_purge_completed</code> - </a></li>
    <li><a href="#v0_0_43_rollup_stats_daily"><code>v0_0_43_rollup_stats_daily</code> - </a></li>
    <li><a href="#v0_0_43_rollup_stats_daily_duration"><code>v0_0_43_rollup_stats_daily_duration</code> - </a></li>
    <li><a href="#v0_0_43_rollup_stats_hourly"><code>v0_0_43_rollup_stats_hourly</code> - </a></li>
    <li><a href="#v0_0_43_rollup_stats_hourly_duration"><code>v0_0_43_rollup_stats_hourly_duration</code> - </a></li>
    <li><a href="#v0_0_43_rollup_stats_monthly"><code>v0_0_43_rollup_stats_monthly</code> - </a></li>
    <li><a href="#v0_0_43_rollup_stats_monthly_duration"><code>v0_0_43_rollup_stats_monthly_duration</code> - </a></li>
    <li><a href="#v0_0_43_stats_rpc_time"><code>v0_0_43_stats_rpc_time</code> - </a></li>
    <li><a href="#v0_0_43_step_CPU"><code>v0_0_43_step_CPU</code> - </a></li>
    <li><a href="#v0_0_43_step_CPU_requested_frequency"><code>v0_0_43_step_CPU_requested_frequency</code> - </a></li>
    <li><a href="#v0_0_43_step_nodes"><code>v0_0_43_step_nodes</code> - </a></li>
    <li><a href="#v0_0_43_step_statistics"><code>v0_0_43_step_statistics</code> - </a></li>
    <li><a href="#v0_0_43_step_statistics_CPU"><code>v0_0_43_step_statistics_CPU</code> - </a></li>
    <li><a href="#v0_0_43_step_statistics_energy"><code>v0_0_43_step_statistics_energy</code> - </a></li>
    <li><a href="#v0_0_43_step_step"><code>v0_0_43_step_step</code> - </a></li>
    <li><a href="#v0_0_43_step_task"><code>v0_0_43_step_task</code> - </a></li>
    <li><a href="#v0_0_43_step_tasks"><code>v0_0_43_step_tasks</code> - </a></li>
    <li><a href="#v0_0_43_step_time"><code>v0_0_43_step_time</code> - </a></li>
    <li><a href="#v0_0_43_step_time_system"><code>v0_0_43_step_time_system</code> - </a></li>
    <li><a href="#v0_0_43_step_time_total"><code>v0_0_43_step_time_total</code> - </a></li>
    <li><a href="#v0_0_43_step_time_user"><code>v0_0_43_step_time_user</code> - </a></li>
    <li><a href="#v0_0_43_step_tres"><code>v0_0_43_step_tres</code> - </a></li>
    <li><a href="#v0_0_43_step_tres_consumed"><code>v0_0_43_step_tres_consumed</code> - </a></li>
    <li><a href="#v0_0_43_step_tres_requested"><code>v0_0_43_step_tres_requested</code> - </a></li>
    <li><a href="#v0_0_43_user_default"><code>v0_0_43_user_default</code> - </a></li>
  </ol>

  <div class="model">
    <h3><a name="v0.0.43_account"><code>v0.0.43_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_short">array[v0.0.43_assoc_short]</a></span>  </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_coord">array[v0.0.43_coord]</a></span>  </div>
<div class="param">description </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string describing the account </div>
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account name </div>
<div class="param">organization </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Organization to which the account belongs </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags associated with this account </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_account_short"><code>v0.0.43_account_short</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string describing the account </div>
<div class="param">organization (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Organization to which the account belongs </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_accounting"><code>v0.0.43_accounting</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_accounting_allocated">v0_0_43_accounting_allocated</a></span>  </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Association ID or Workload characterization key ID format: int32</div>
<div class="param">id_alt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Alternate ID (not currently used) format: int32</div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> When the record was started (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">TRES (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">v0.0.43_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_accounts_add_cond"><code>v0.0.43_accounts_add_cond</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounts </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">association (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_rec_set">v0.0.43_assoc_rec_set</a></span>  </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_acct_gather_energy"><code>v0.0.43_acct_gather_energy</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">average_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Average power consumption, in watts format: int32</div>
<div class="param">base_consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> The energy consumed between when the node was powered on and the last time it was registered by slurmd, in joules format: int64</div>
<div class="param">consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> The energy consumed between the last time the node was registered by the slurmd daemon and the last node energy accounting sample, in joules format: int64</div>
<div class="param">current_watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">previous_consumed_energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Previous value of consumed_energy format: int64</div>
<div class="param">last_collected (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Time when energy data was last retrieved (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_assoc"><code>v0.0.43_assoc</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounting (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_accounting">array[v0.0.43_accounting]</a></span>  </div>
<div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account name </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_default">v0_0_43_assoc_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags on the association </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max">v0_0_43_assoc_max</a></span>  </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unique ID (Association ID) format: int32</div>
<div class="param">is_default (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Is default association for user </div>
<div class="param">lineage (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Complete path up the hierarchy to the root association </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_min">v0_0_43_assoc_min</a></span>  </div>
<div class="param">parent_account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of parent account </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of QOS names </div>
<div class="param">shares_raw (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Allocated shares used for fairshare calculation format: int32</div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_assoc_rec_set"><code>v0.0.43_assoc_rec_set</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment </div>
<div class="param">defaultqos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default QOS </div>
<div class="param">grpjobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">grpjobsaccrue (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">grpsubmitjobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">grptres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">grptresmins (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">grptresrunmins (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">grpwall (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">maxjobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">maxjobsaccrue (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">maxsubmitjobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">maxtresminsperjob (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">maxtresrunmins (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">maxtresperjob (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">maxtrespernode (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">maxwalldurationperjob (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">minpriothresh (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">parent (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of parent account </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">qoslevel (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> List of QOS names </div>
<div class="param">fairshare (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Allocated shares used for fairshare calculation format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_assoc_shares_obj_wrap"><code>v0.0.43_assoc_shares_obj_wrap</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Association ID format: int32</div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Share name </div>
<div class="param">parent (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Parent name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name </div>
<div class="param">shares_normalized (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_shares_obj_wrap_tres">v0_0_43_assoc_shares_obj_wrap_tres</a></span>  </div>
<div class="param">effective_usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">usage_normalized (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Measure of tresbillableunits usage format: int64</div>
<div class="param">fairshare (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_shares_obj_wrap_fairshare">v0_0_43_assoc_shares_obj_wrap_fairshare</a></span>  </div>
<div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> User or account association </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_assoc_short"><code>v0.0.43_assoc_short</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account name </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name </div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Numeric association ID format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_bf_exit_fields"><code>v0.0.43_bf_exit_fields</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">end_job_queue (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached end of queue format: int32</div>
<div class="param">bf_max_job_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached number of jobs allowed to start format: int32</div>
<div class="param">bf_max_job_test (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached number of jobs allowed to be tested format: int32</div>
<div class="param">bf_max_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached maximum allowed scheduler time format: int32</div>
<div class="param">bf_node_space_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached table size limit format: int32</div>
<div class="param">state_changed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> System state changed format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_cluster_rec"><code>v0.0.43_cluster_rec</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">controller (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_cluster_rec_controller">v0_0_43_cluster_rec_controller</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> ClusterName </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node names </div>
<div class="param">select_plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span>  </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_cluster_rec_associations">v0_0_43_cluster_rec_associations</a></span>  </div>
<div class="param">rpc_version (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> RPC version used in the cluster format: int32</div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_controller_ping"><code>v0.0.43_controller_ping</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Target for ping </div>
<div class="param">pinged (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Ping result </div>
<div class="param">responding </div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If ping RPC responded with pong from controller </div>
<div class="param">latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of microseconds it took to successfully ping or timeout format: int64</div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> The operating mode of the responding slurmctld </div>
<div class="param">primary </div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Is responding slurmctld the primary controller (Is responding slurmctld the primary controller) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_coord"><code>v0.0.43_coord</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
<div class="param">direct (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Indicates whether the coordinator was directly assigned to this account </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_cron_entry"><code>v0.0.43_cron_entry</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Ranged string specifying eligible minute values (e.g. 0-10,50) </div>
<div class="param">hour (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Ranged string specifying eligible hour values (e.g. 0-5,23) </div>
<div class="param">day_of_month (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Ranged string specifying eligible day of month values (e.g. 0-10,29) </div>
<div class="param">month (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Ranged string specifying eligible month values (e.g. 0-5,12) </div>
<div class="param">day_of_week (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Ranged string specifying eligible day of week values (e.g.0-3,7) </div>
<div class="param">specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Complete time specification (* means valid for all allowed values) - minute hour day_of_month month day_of_week </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Command to run </div>
<div class="param">line (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_cron_entry_line">v0_0_43_cron_entry_line</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_float64_no_val_struct"><code>v0.0.43_float64_no_val_struct</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set; False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite; "set" and "number" will be ignored </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> If "set" is True the number will be set with value; otherwise ignore number contents format: double</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_instance"><code>v0.0.43_instance</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string used for node filtering if extra constraints are enabled </div>
<div class="param">instance_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cloud instance ID </div>
<div class="param">instance_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cloud instance type </div>
<div class="param">node_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> NodeName </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_instance_time">v0_0_43_instance_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job"><code>v0.0.43_job</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account the job ran under </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_comment">v0_0_43_job_comment</a></span>  </div>
<div class="param">allocation_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> List of nodes allocated to the job format: int32</div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_array">v0_0_43_job_array</a></span>  </div>
<div class="param">association (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_short">v0.0.43_assoc_short</a></span>  </div>
<div class="param">block (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> The name of the block to be used (used with Blue Gene systems) </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Feature(s) the job requested as a constraint </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Absolute path to OCI container bundle </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_process_exit_code_verbose">v0.0.43_process_exit_code_verbose</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_time">v0_0_43_job_time</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_process_exit_code_verbose">v0.0.43_process_exit_code_verbose</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string used for node filtering if extra constraints are enabled </div>
<div class="param">failed_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of node that caused job failure </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags associated with this job </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Group ID of the user that owns the job </div>
<div class="param">het (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_het">v0_0_43_job_het</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job ID format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job name </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> License(s) required by the job </div>
<div class="param">mcs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_mcs">v0_0_43_job_mcs</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node(s) allocated to the job </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition assigned to the job </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Hold (true) or release (false) job (Job held) </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Quality of Service assigned to the job </div>
<div class="param">qosreq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested QOS </div>
<div class="param">required (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_required">v0_0_43_job_required</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User ID that requested termination of the job </div>
<div class="param">restart_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> How many times this job has been requeued/restarted format: int32</div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_reservation">v0_0_43_job_reservation</a></span>  </div>
<div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job batch script; only the first component in a HetJob is populated or honored </div>
<div class="param">segment_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Requested segment size format: int32</div>
<div class="param">stdin_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job stdin with expanded fields </div>
<div class="param">stdout_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job stdout with expanded fields </div>
<div class="param">stderr_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job stderr with expanded fields </div>
<div class="param">stdout (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdout file </div>
<div class="param">stderr (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stderr file </div>
<div class="param">stdin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdin file </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_state">v0_0_43_job_state</a></span>  </div>
<div class="param">steps (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_step">array[v0.0.43_step]</a></span>  </div>
<div class="param">submit_line (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Command used to submit the job </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_tres">v0_0_43_job_tres</a></span>  </div>
<div class="param">used_gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Generic resources used by job </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User that owns the job </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_wckey_tag_struct">v0.0.43_wckey_tag_struct</a></span>  </div>
<div class="param">working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to current working directory </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_alloc_req"><code>v0.0.43_job_alloc_req</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">hetjob (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_desc_msg">array[v0.0.43_job_desc_msg]</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_desc_msg">v0.0.43_job_desc_msg</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_array_response_msg_entry"><code>v0.0.43_job_array_response_msg_entry</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job ID for updated job format: int32</div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step ID for updated job </div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Verbose update status or error </div>
<div class="param">error_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Verbose update status or error format: int32</div>
<div class="param">why (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Update response message </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_desc_msg"><code>v0.0.43_job_desc_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account associated with the job </div>
<div class="param">account_gather_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job accounting and profiling sampling intervals in seconds </div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment made by administrator </div>
<div class="param">allocation_node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Local node making the resource allocation </div>
<div class="param">allocation_node_port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Port to send allocation confirmation to format: int32</div>
<div class="param">argv (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">array (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job array index value specification </div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Features required for batch script's node </div>
<div class="param">begin_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job flags </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Burst buffer specifications </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Clusters that a federated job can run on </div>
<div class="param">cluster_constraint (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Required features that a federated cluster must have to have a sibling job submitted to it </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment made by user </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if job requires contiguous nodes </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Absolute path to OCI container bundle </div>
<div class="param">container_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> OCI container ID </div>
<div class="param">core_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Specialized core count format: int32</div>
<div class="param">thread_specification (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Specialized thread count format: int32</div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Method for binding tasks to allocated CPUs </div>
<div class="param">cpu_binding_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags for CPU binding </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">cpu_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested CPU frequency range <p1>[-p2][:p3] </p1></div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Semicolon delimited list of TRES=# values values indicating how many CPUs should be allocated for each specified TRES (currently only used for gres/gpu) </div>
<div class="param">crontab (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_cron_entry">v0.0.43_cron_entry</a></span>  </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Latest time that the job may start (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of seconds after job eligible start that nodes will be rebooted to satisfy feature specification format: int32</div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Other jobs that must meet certain criteria before this job can start </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Expected end time (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">rlimits (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_desc_msg_rlimits">v0_0_43_job_desc_msg_rlimits</a></span>  </div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string used for node filtering if extra constraints are enabled </div>
<div class="param">constraints (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of features that are required </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Group ID of the user that owns the job </div>
<div class="param">hetjob_group (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unique sequence number applied to this component of the heterogeneous job format: int32</div>
<div class="param">immediate (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If true, exit if resources are not available within the time period specified </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job ID format: int32</div>
<div class="param">kill_on_node_fail (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If true, kill job on node failure </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> License(s) required by the job </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Mail event type(s) </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User to receive email notifications </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Multi-Category Security label on the job </div>
<div class="param">memory_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Binding map for map/mask_cpu </div>
<div class="param">memory_binding_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Method for binding tasks to memory </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Semicolon delimited list of TRES=# values indicating how much memory in megabytes should be allocated for each specified TRES (currently only used for gres/gpu) </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job name </div>
<div class="param">network (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Network specs for job step </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Requested job priority change format: int32</div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks format: int32</div>
<div class="param">oom_kill_step (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Kill whole step in case of OOM in one of the tasks format: int32</div>
<div class="param">open_mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Open mode used for stdout and stderr files </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">reserve_ports (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Port to send various notification msg to format: int32</div>
<div class="param">overcommit (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Overcommit resources </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition assigned to the job </div>
<div class="param">distribution_plane_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">power_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#AnyType">array[oas_any_type_not_mapped]</a></span>  </div>
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of features that are preferred but not required </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Hold (true) or release (false) job (Job held) </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Profile used by the acct_gather_profile plugin </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Quality of Service assigned to the job </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Node reboot requested before start </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Determines whether the job may be requeued </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of reservation to use </div>
<div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job batch script; only the first component in a HetJob is populated or honored </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> How the job can share resources with other jobs, if at all </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">site_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Site-specific priority factor format: int32</div>
<div class="param">spank_environment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Layout </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Task to TRES binding directives </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES frequency directives </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated for every job </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated for every node </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated for every socket </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated for every task </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User ID that owns the job </div>
<div class="param">wait_all_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If true, wait to start until after all nodes have booted </div>
<div class="param">kill_warning_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags related to job signals </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">kill_warning_signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Signal to send when approaching end time (e.g. "10" or "USR1") </div>
<div class="param">kill_warning_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Working directory to use for the job </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of CPUs required by each task format: int32</div>
<div class="param">minimum_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum number of CPUs required format: int32</div>
<div class="param">maximum_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of CPUs required format: int32</div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node count range specification (e.g. 1-15:4) </div>
<div class="param">minimum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum node count format: int32</div>
<div class="param">maximum_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum node count format: int32</div>
<div class="param">minimum_boards_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Boards per node required format: int32</div>
<div class="param">minimum_sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Sockets per board required format: int32</div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Sockets per node required format: int32</div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Threads per core required format: int32</div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks to invoke on each node format: int32</div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks to invoke on each socket format: int32</div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks to invoke on each core format: int32</div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks to invoke on each board format: int32</div>
<div class="param">ntasks_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of tasks that can access each GPU format: int32</div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum number of CPUs per node format: int32</div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">temporary_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum tmp disk space required per node format: int32</div>
<div class="param">selinux_context (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> SELinux context </div>
<div class="param">required_switches (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">segment_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stderr file </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdin file </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdout file </div>
<div class="param">wait_for_switch (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum time to wait for switches in seconds format: int32</div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Workload characterization key </div>
<div class="param">x11 (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> X11 forwarding options </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">x11_magic_cookie (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Magic cookie for X11 forwarding </div>
<div class="param">x11_target_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Hostname or UNIX socket if x11_target_port=0 </div>
<div class="param">x11_target_port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> TCP port format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_info"><code>v0.0.43_job_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Account associated with the job </div>
<div class="param">accrue_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">admin_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment made by administrator </div>
<div class="param">allocating_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Local node making the resource allocation </div>
<div class="param">array_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">array_task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">array_max_tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">array_task_string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> String expression of task IDs in this record </div>
<div class="param">association_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unique identifier for the association format: int32</div>
<div class="param">batch_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Features required for batch script's node </div>
<div class="param">batch_flag (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if batch job </div>
<div class="param">batch_host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of host running batch script </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Job flags </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Burst buffer specifications </div>
<div class="param">burst_buffer_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Burst buffer state details </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">cluster_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of required cluster features </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Executed command </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment </div>
<div class="param">container (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Absolute path to OCI container bundle </div>
<div class="param">container_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> OCI container ID </div>
<div class="param">contiguous (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if job requires contiguous nodes </div>
<div class="param">core_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Specialized core count format: int32</div>
<div class="param">thread_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Specialized thread count format: int32</div>
<div class="param">cores_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">billable_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">cpus_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">cpu_frequency_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">cpu_frequency_maximum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">cpu_frequency_governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">cpus_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Semicolon delimited list of TRES=# values indicating how many CPUs should be allocated for each specified TRES (currently only used for gres/gpu) </div>
<div class="param">cron (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Time specification for scrontab job </div>
<div class="param">deadline (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">delay_boot (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">dependency (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Other jobs that must meet certain criteria before this job can start </div>
<div class="param">derived_exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_process_exit_code_verbose">v0.0.43_process_exit_code_verbose</a></span>  </div>
<div class="param">eligible_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">excluded_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of nodes that may not be used </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_process_exit_code_verbose">v0.0.43_process_exit_code_verbose</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string used for node filtering if extra constraints are enabled </div>
<div class="param">failed_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of node that caused job failure </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of features that are required </div>
<div class="param">federation_origin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Origin cluster's name (when using federation) </div>
<div class="param">federation_siblings_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Active sibling job names </div>
<div class="param">federation_siblings_viable (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Viable sibling job names </div>
<div class="param">gres_detail (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">group_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Group ID of the user that owns the job format: int32</div>
<div class="param">group_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Group name of the user that owns the job </div>
<div class="param">het_job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">het_job_id_set (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job ID range for all heterogeneous job components </div>
<div class="param">het_job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job ID format: int32</div>
<div class="param">job_resources (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_res">v0.0.43_job_res</a></span>  </div>
<div class="param">job_size_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">job_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Current state </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">last_sched_evaluation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> License(s) required by the job </div>
<div class="param">licenses_allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> License(s) allocated to the job </div>
<div class="param">mail_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Mail event type(s) </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">mail_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User to receive email notifications </div>
<div class="param">max_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">max_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Multi-Category Security label on the job </div>
<div class="param">memory_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Semicolon delimited list of TRES=# values indicating how much memory in megabytes should be allocated for each specified TRES (currently only used for gres/gpu) </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job name </div>
<div class="param">network (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Network specs for the job </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node(s) allocated to the job </div>
<div class="param">nice (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Requested job priority change format: int32</div>
<div class="param">tasks_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">tasks_per_tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">tasks_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">tasks_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">tasks_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition assigned to the job </div>
<div class="param">prefer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Feature(s) the job requested but that are not required </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">minimum_cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">minimum_tmp_disk_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">power (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_info_power">v0_0_43_job_info_power</a></span>  </div>
<div class="param">preempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">preemptable_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">pre_sus_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">hold (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Hold (true) or release (false) job (Job held) </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">priority_by_partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_part_prio">array[v0.0.43_part_prio]</a></span>  </div>
<div class="param">profile (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Profile used by the acct_gather_profile plugin </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Quality of Service assigned to the job, if pending the QOS requested </div>
<div class="param">reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Node reboot requested before start </div>
<div class="param">required_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of required nodes </div>
<div class="param">required_switches (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of switches format: int32</div>
<div class="param">requeue (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Determines whether the job may be requeued </div>
<div class="param">resize_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">restart_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of job restarts format: int32</div>
<div class="param">resv_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of reservation to use </div>
<div class="param">scheduled_nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> List of nodes scheduled to be used for the job </div>
<div class="param">segment_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Requested segment size format: int32</div>
<div class="param">selinux_context (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> SELinux context </div>
<div class="param">shared (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> How the job can share resources with other jobs, if at all </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">sockets_per_board (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of sockets per board required format: int32</div>
<div class="param">sockets_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">state_description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Optional details for state_reason </div>
<div class="param">state_reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reason for current Pending or Failed state </div>
<div class="param">standard_input (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdin file </div>
<div class="param">standard_output (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdout file </div>
<div class="param">standard_error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stderr file </div>
<div class="param">stdin_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job stdin with expanded fields </div>
<div class="param">stdout_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job stdout with expanded fields </div>
<div class="param">stderr_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job stderr with expanded fields </div>
<div class="param">submit_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">system_comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment from slurmctld </div>
<div class="param">time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">time_minimum (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">threads_per_core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">tres_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Task to TRES binding directives </div>
<div class="param">tres_freq (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES frequency directives </div>
<div class="param">tres_per_job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated per job </div>
<div class="param">tres_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated per node </div>
<div class="param">tres_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated per socket </div>
<div class="param">tres_per_task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of TRES=# values to be allocated per task </div>
<div class="param">tres_req_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES requested by the job </div>
<div class="param">tres_alloc_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES used by the job </div>
<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> User ID that owns the job format: int32</div>
<div class="param">user_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name that owns the job </div>
<div class="param">maximum_switch_wait_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum time to wait for switches in seconds format: int32</div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Workload characterization key </div>
<div class="param">current_working_directory (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Working directory to use for the job </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_res"><code>v0.0.43_job_res</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">select_type </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Scheduler consumable resource selection type </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_res_nodes">v0_0_43_job_res_nodes</a></span>  </div>
<div class="param">cpus </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of allocated CPUs format: int32</div>
<div class="param">threads_per_core </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_res_core"><code>v0.0.43_job_res_core</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">index </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Core index format: int32</div>
<div class="param">status </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Core status </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_res_node"><code>v0.0.43_job_res_node</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">index </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Node index format: int32</div>
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node name </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_res_node_cpus">v0_0_43_job_res_node_cpus</a></span>  </div>
<div class="param">memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_res_node_memory">v0_0_43_job_res_node_memory</a></span>  </div>
<div class="param">sockets </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_res_socket">array[v0.0.43_job_res_socket]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_res_socket"><code>v0.0.43_job_res_socket</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">index </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Core index format: int32</div>
<div class="param">cores </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_res_core">array[v0.0.43_job_res_core]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_job_submit_req"><code>v0.0.43_job_submit_req</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">script (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Deprecated; Populate script field in jobs[0] or job </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_desc_msg">array[v0.0.43_job_desc_msg]</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_desc_msg">v0.0.43_job_desc_msg</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_kill_jobs_msg"><code>v0.0.43_kill_jobs_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific account </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Filter jobs according to flags </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">job_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific name </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific partition </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific QOS </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific reservation </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Signal to send to jobs </div>
<div class="param">job_state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Filter jobs to a specific state </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">user_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific numeric user id </div>
<div class="param">user_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific user name </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Filter jobs to a specific wckey </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_kill_jobs_resp_job"><code>v0.0.43_kill_jobs_resp_job</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_kill_jobs_resp_job_error">v0_0_43_kill_jobs_resp_job_error</a></span>  </div>
<div class="param">step_id </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job or Step ID that signaling failed </div>
<div class="param">job_id </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">federation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_kill_jobs_resp_job_federation">v0_0_43_kill_jobs_resp_job_federation</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_license"><code>v0.0.43_license</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">LicenseName (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of the license </div>
<div class="param">Total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of licenses present format: int32</div>
<div class="param">Used (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of licenses in use format: int32</div>
<div class="param">Free (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of licenses currently available format: int32</div>
<div class="param">Remote (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Indicates whether licenses are served by the database </div>
<div class="param">Reserved (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of licenses reserved format: int32</div>
<div class="param">LastConsumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Last known number of licenses that were consumed in the license manager (Remote Only) format: int32</div>
<div class="param">LastDeficit (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of "missing licenses" from the cluster's perspective format: int32</div>
<div class="param">LastUpdate (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> When the license information was last updated (UNIX Timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_node"><code>v0.0.43_node</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">architecture (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Computer architecture </div>
<div class="param">burstbuffer_network_address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Alternate network path to be used for sbcast network traffic </div>
<div class="param">boards (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of Baseboards in nodes with a baseboard controller format: int32</div>
<div class="param">boot_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">tls_cert_last_renewal (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">cert_flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Certmgr status flags </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">cluster_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name (only set in federated environments) </div>
<div class="param">cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of cores in a single physical processor socket format: int32</div>
<div class="param">specialized_cores (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of cores reserved for system use format: int32</div>
<div class="param">cpu_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Default method for binding tasks to allocated CPUs format: int32</div>
<div class="param">cpu_load (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> CPU load as reported by the OS format: int32</div>
<div class="param">free_mem (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total CPUs, including cores and threads format: int32</div>
<div class="param">effective_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of effective CPUs (excluding specialized CPUs) format: int32</div>
<div class="param">specialized_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Abstract CPU IDs on this node reserved for exclusive use by slurmd and slurmstepd </div>
<div class="param">energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_acct_gather_energy">v0.0.43_acct_gather_energy</a></span>  </div>
<div class="param">external_sensors (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span>  </div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string used for node filtering if extra constraints are enabled </div>
<div class="param">power (optional)</div><div class="param-desc"><span class="param-type"><a href="#">Object</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">active_features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">gpu_spec (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> CPU cores reserved for jobs that also use a GPU </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Generic resources </div>
<div class="param">gres_drained (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Drained generic resources </div>
<div class="param">gres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Generic resources currently in use </div>
<div class="param">instance_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cloud instance ID </div>
<div class="param">instance_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cloud instance type </div>
<div class="param">last_busy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">mcs_label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Multi-Category Security label </div>
<div class="param">specialized_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Combined memory limit, in MB, for Slurm compute node daemons format: int64</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> NodeName </div>
<div class="param">next_state_after_reboot (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> The state the node will be assigned after rebooting </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> NodeAddr, used to establish a communication path </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> NodeHostname </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Node state(s) applicable to this node </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">operating_system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Operating system reported by the node </div>
<div class="param">owner (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User allowed to run jobs on this node (unset if no restriction) </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> TCP port number of the slurmd format: int32</div>
<div class="param">real_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total memory in MB on the node format: int64</div>
<div class="param">res_cores_per_gpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of CPU cores per GPU restricted to GPU jobs format: int32</div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment </div>
<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Describes why the node is in a "DOWN", "DRAINED", "DRAINING", "FAILING" or "FAIL" state </div>
<div class="param">reason_changed_at (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">reason_set_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User who set the reason </div>
<div class="param">resume_after (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">reservation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of reservation containing this node </div>
<div class="param">alloc_memory (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total memory in MB currently allocated for jobs format: int64</div>
<div class="param">alloc_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPUs currently allocated for jobs format: int32</div>
<div class="param">alloc_idle_cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of idle CPUs format: int32</div>
<div class="param">tres_used (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Trackable resources currently allocated for jobs </div>
<div class="param">tres_weighted (optional)</div><div class="param-desc"><span class="param-type"><a href="#double">Double</a></span> Ignored. Was weighted number of billable trackable resources allocated format: double</div>
<div class="param">slurmd_start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">sockets (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of physical processor sockets/chips on the node format: int32</div>
<div class="param">threads (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of logical threads in a single physical core format: int32</div>
<div class="param">temporary_disk (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total size in MB of temporary disk storage in TmpFS format: int32</div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Weight of the node for scheduling purposes format: int32</div>
<div class="param">topology (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Topology </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Configured trackable resources </div>
<div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurmd version </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_accounts_add_cond_resp"><code>v0.0.43_openapi_accounts_add_cond_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">association_condition (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_accounts_add_cond">v0.0.43_accounts_add_cond</a></span>  </div>
<div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_account_short">v0.0.43_account_short</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_accounts_add_cond_resp_str"><code>v0.0.43_openapi_accounts_add_cond_resp_str</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">added_accounts </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> added_accounts </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_accounts_removed_resp"><code>v0.0.43_openapi_accounts_removed_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">removed_accounts </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_accounts_resp"><code>v0.0.43_openapi_accounts_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounts </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_account">array[v0.0.43_account]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_assocs_removed_resp"><code>v0.0.43_openapi_assocs_removed_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">removed_associations </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_assocs_resp"><code>v0.0.43_openapi_assocs_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">associations </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc">array[v0.0.43_assoc]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_clusters_removed_resp"><code>v0.0.43_openapi_clusters_removed_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">deleted_clusters </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_clusters_resp"><code>v0.0.43_openapi_clusters_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">clusters </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_cluster_rec">array[v0.0.43_cluster_rec]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_diag_resp"><code>v0.0.43_openapi_diag_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">statistics </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_msg">v0.0.43_stats_msg</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_error"><code>v0.0.43_openapi_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Long form error description </div>
<div class="param">error_number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Slurm numeric error identifier format: int32</div>
<div class="param">error (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Short form error description </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Source of error or where error was first detected </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_instances_resp"><code>v0.0.43_openapi_instances_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">instances </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_instance">array[v0.0.43_instance]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_job_alloc_resp"><code>v0.0.43_openapi_job_alloc_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Submitted Job ID format: int32</div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job submission user message </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_job_info_resp"><code>v0.0.43_openapi_job_info_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">jobs </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_info">array[v0.0.43_job_info]</a></span>  </div>
<div class="param">last_backfill </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_job_post_response"><code>v0.0.43_openapi_job_post_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">results (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_array_response_msg_entry">array[v0.0.43_job_array_response_msg_entry]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_job_submit_response"><code>v0.0.43_openapi_job_submit_response</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> submitted Job ID format: int32</div>
<div class="param">step_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> submitted Step ID </div>
<div class="param">job_submit_user_msg (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Job submission user message </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_kill_job_resp"><code>v0.0.43_openapi_kill_job_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">status </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_kill_jobs_resp_job">array[v0.0.43_kill_jobs_resp_job]</a></span> List of jobs signal responses </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_kill_jobs_resp"><code>v0.0.43_openapi_kill_jobs_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">status </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_kill_jobs_resp_job">array[v0.0.43_kill_jobs_resp_job]</a></span> List of jobs signal responses </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_licenses_resp"><code>v0.0.43_openapi_licenses_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">licenses </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_license">array[v0.0.43_license]</a></span>  </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_meta"><code>v0.0.43_openapi_meta</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">plugin (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_openapi_meta_plugin">v0_0_43_openapi_meta_plugin</a></span>  </div>
<div class="param">client (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_openapi_meta_client">v0_0_43_openapi_meta_client</a></span>  </div>
<div class="param">command (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">slurm (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_openapi_meta_slurm">v0_0_43_openapi_meta_slurm</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_nodes_resp"><code>v0.0.43_openapi_nodes_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">nodes </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_node">array[v0.0.43_node]</a></span>  </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_partition_resp"><code>v0.0.43_openapi_partition_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">partitions </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_partition_info">array[v0.0.43_partition_info]</a></span>  </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_ping_array_resp"><code>v0.0.43_openapi_ping_array_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">pings </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_controller_ping">array[v0.0.43_controller_ping]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_reservation_mod_resp"><code>v0.0.43_openapi_reservation_mod_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">reservations </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_reservation_desc_msg">array[v0.0.43_reservation_desc_msg]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_reservation_resp"><code>v0.0.43_openapi_reservation_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">reservations </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_reservation_info">array[v0.0.43_reservation_info]</a></span>  </div>
<div class="param">last_update </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_resp"><code>v0.0.43_openapi_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_shares_resp"><code>v0.0.43_openapi_shares_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">shares </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_shares_resp_msg">v0.0.43_shares_resp_msg</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_slurmdbd_config_resp"><code>v0.0.43_openapi_slurmdbd_config_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_cluster_rec">array[v0.0.43_cluster_rec]</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_account">array[v0.0.43_account]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_user">array[v0.0.43_user]</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_qos">array[v0.0.43_qos]</a></span>  </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_wckey">array[v0.0.43_wckey]</a></span>  </div>
<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc">array[v0.0.43_assoc]</a></span>  </div>
<div class="param">instances (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_instance">array[v0.0.43_instance]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_slurmdbd_jobs_resp"><code>v0.0.43_openapi_slurmdbd_jobs_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">jobs </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job">array[v0.0.43_job]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_slurmdbd_ping_resp"><code>v0.0.43_openapi_slurmdbd_ping_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">pings </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_slurmdbd_ping">array[v0.0.43_slurmdbd_ping]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_slurmdbd_qos_removed_resp"><code>v0.0.43_openapi_slurmdbd_qos_removed_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">removed_qos </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_slurmdbd_qos_resp"><code>v0.0.43_openapi_slurmdbd_qos_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">qos </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_qos">array[v0.0.43_qos]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_slurmdbd_stats_resp"><code>v0.0.43_openapi_slurmdbd_stats_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">statistics </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_rec">v0.0.43_stats_rec</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_tres_resp"><code>v0.0.43_openapi_tres_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">TRES </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_users_add_cond_resp"><code>v0.0.43_openapi_users_add_cond_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">association_condition </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_users_add_cond">v0.0.43_users_add_cond</a></span>  </div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_user_short">v0.0.43_user_short</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_users_add_cond_resp_str"><code>v0.0.43_openapi_users_add_cond_resp_str</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">added_users </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> added_users </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_users_resp"><code>v0.0.43_openapi_users_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">users </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_user">array[v0.0.43_user]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_warning"><code>v0.0.43_openapi_warning</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Long form warning description </div>
<div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Source of warning or where warning was first detected </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_wckey_removed_resp"><code>v0.0.43_openapi_wckey_removed_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">deleted_wckeys </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_openapi_wckey_resp"><code>v0.0.43_openapi_wckey_resp</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">wckeys </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_wckey">array[v0.0.43_wckey]</a></span>  </div>
<div class="param">meta (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_meta">v0.0.43_openapi_meta</a></span>  </div>
<div class="param">errors (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_error">array[v0.0.43_openapi_error]</a></span>  </div>
<div class="param">warnings (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_openapi_warning">array[v0.0.43_openapi_warning]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_part_prio"><code>v0.0.43_part_prio</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition name </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Prospective job priority if it runs in this partition format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_partition_info"><code>v0.0.43_partition_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_nodes">v0_0_43_partition_info_nodes</a></span>  </div>
<div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_accounts">v0_0_43_partition_info_accounts</a></span>  </div>
<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_groups">v0_0_43_partition_info_groups</a></span>  </div>
<div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_qos">v0_0_43_partition_info_qos</a></span>  </div>
<div class="param">alternate (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Alternate - Partition name of alternate partition to be used if the state of this partition is DRAIN or INACTIVE </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_tres">v0_0_43_partition_info_tres</a></span>  </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">select_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Scheduler consumable resource selection type </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">cpus (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_cpus">v0_0_43_partition_info_cpus</a></span>  </div>
<div class="param">defaults (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_defaults">v0_0_43_partition_info_defaults</a></span>  </div>
<div class="param">grace_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> GraceTime - Grace time in seconds to be extended to a job which has been selected for preemption format: int32</div>
<div class="param">maximums (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_maximums">v0_0_43_partition_info_maximums</a></span>  </div>
<div class="param">minimums (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_minimums">v0_0_43_partition_info_minimums</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> PartitionName - Name by which the partition may be referenced </div>
<div class="param">node_sets (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> NodeSets - Comma-separated list of nodesets which are associated with this partition </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_priority">v0_0_43_partition_info_priority</a></span>  </div>
<div class="param">timeouts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_timeouts">v0_0_43_partition_info_timeouts</a></span>  </div>
<div class="param">topology (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Topology - Name of the topology, defined in topology.yaml, used by jobs in this partition </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_partition">v0_0_43_partition_info_partition</a></span>  </div>
<div class="param">suspend_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_process_exit_code_verbose"><code>v0.0.43_process_exit_code_verbose</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">status (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Status given by return code </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">return_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">signal (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_process_exit_code_verbose_signal">v0_0_43_process_exit_code_verbose_signal</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_qos"><code>v0.0.43_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">description (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary description </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags, to avoid modifying current values specify NOT_SET </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unique ID format: int32</div>
<div class="param">limits (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits">v0_0_43_qos_limits</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name </div>
<div class="param">preempt (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_preempt">v0_0_43_qos_preempt</a></span>  </div>
<div class="param">priority (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">usage_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">usage_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_reservation_core_spec"><code>v0.0.43_reservation_core_spec</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of reserved node </div>
<div class="param">core (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> IDs of reserved cores </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_reservation_desc_msg"><code>v0.0.43_reservation_desc_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> BurstBuffer </div>
<div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string </div>
<div class="param">core_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">duration (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested node features. Multiple values may be "&amp;" separated if all features are required (AND operation) or separated by "|" if any of the specified features are required (OR operation). Parenthesis are also supported for features to be ANDed together with counts of nodes having the specified features. </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags associated with this reservation. Note, to remove flags use "NO_" prefixed flag excluding NO_HOLD_JOBS_AFTER_END </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">max_start_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> ReservationName </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Partition used to reserve nodes from. This will attempt to allocate all nodes in the specified partition unless you request fewer resources than are available with core_cnt, node_cnt or tres. </div>
<div class="param">purge_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_reservation_info_purge_completed">v0_0_43_reservation_info_purge_completed</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_reservation_info"><code>v0.0.43_reservation_info</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of permitted accounts </div>
<div class="param">burst_buffer (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> BurstBuffer - Burst buffer resources reserved </div>
<div class="param">core_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> CoreCnt - Number of cores reserved format: int32</div>
<div class="param">core_specializations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_reservation_core_spec">array[v0.0.43_reservation_core_spec]</a></span>  </div>
<div class="param">end_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Features - Expression describing the reservation's required node features </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags associated with this reservation </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">groups (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Groups - Comma-separated list of permitted groups </div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Licenses - Comma-separated list of licenses reserved </div>
<div class="param">max_start_delay (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> MaxStartDelay - Maximum time an eligible job not requesting this reservation can delay a job requesting it in seconds format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> ReservationName - Name of the reservation </div>
<div class="param">node_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> NodeCnt - Number of nodes reserved format: int32</div>
<div class="param">node_list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Nodes - Comma-separated list of node names and/or node ranges reserved </div>
<div class="param">partition (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> PartitionName - Partition used to reserve nodes from </div>
<div class="param">purge_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_reservation_info_purge_completed">v0_0_43_reservation_info_purge_completed</a></span>  </div>
<div class="param">start_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">watts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of required TRES </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of permitted users </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_reservation_mod_req"><code>v0.0.43_reservation_mod_req</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">reservations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_reservation_desc_msg">array[v0.0.43_reservation_desc_msg]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_rollup_stats"><code>v0.0.43_rollup_stats</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">hourly (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_rollup_stats_hourly">v0_0_43_rollup_stats_hourly</a></span>  </div>
<div class="param">daily (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_rollup_stats_daily">v0_0_43_rollup_stats_daily</a></span>  </div>
<div class="param">monthly (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_rollup_stats_monthly">v0_0_43_rollup_stats_monthly</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_schedule_exit_fields"><code>v0.0.43_schedule_exit_fields</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">end_job_queue (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached end of queue format: int32</div>
<div class="param">default_queue_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached number of jobs allowed to be tested format: int32</div>
<div class="param">max_job_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached number of jobs allowed to start format: int32</div>
<div class="param">max_rpc_cnt (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached RPC limit format: int32</div>
<div class="param">max_sched_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Reached maximum allowed scheduler time format: int32</div>
<div class="param">licenses (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Blocked on licenses format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_shares_float128_tres"><code>v0.0.43_shares_float128_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES name </div>
<div class="param">value (optional)</div><div class="param-desc"><span class="param-type"><a href="#number">BigDecimal</a></span> TRES value </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_shares_resp_msg"><code>v0.0.43_shares_resp_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_shares_obj_wrap">array[v0.0.43_assoc_shares_obj_wrap]</a></span>  </div>
<div class="param">total_shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total number of shares format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_shares_uint64_tres"><code>v0.0.43_shares_uint64_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES name </div>
<div class="param">value (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_slurmdbd_ping"><code>v0.0.43_slurmdbd_ping</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">hostname </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Target for ping </div>
<div class="param">responding </div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> If ping RPC responded with pong from slurmdbd </div>
<div class="param">latency </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of microseconds it took to successfully ping or timeout format: int64</div>
<div class="param">primary </div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Is responding slurmdbd the primary controller (Is responding slurmctld the primary controller) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_msg"><code>v0.0.43_stats_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">parts_packed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Zero if only RPC statistic included format: int32</div>
<div class="param">req_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">req_time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">server_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of current active slurmctld threads format: int32</div>
<div class="param">agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of enqueued outgoing RPC requests in an internal retry list format: int32</div>
<div class="param">agent_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of agent threads format: int32</div>
<div class="param">agent_thread_count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of active threads created by all agent threads format: int32</div>
<div class="param">dbd_agent_queue_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of messages for SlurmDBD that are queued format: int32</div>
<div class="param">gettimeofday_latency (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Latency of 1000 calls to the gettimeofday() syscall in microseconds, as measured at controller startup format: int32</div>
<div class="param">schedule_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Max time of any scheduling cycle in microseconds since last reset format: int32</div>
<div class="param">schedule_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Time in microseconds for last scheduling cycle format: int32</div>
<div class="param">schedule_cycle_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total run time in microseconds for all scheduling cycles since last reset format: int32</div>
<div class="param">schedule_cycle_total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of scheduling cycles since last reset format: int32</div>
<div class="param">schedule_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Mean time in microseconds for all scheduling cycles since last reset format: int64</div>
<div class="param">schedule_cycle_mean_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Mean of the number of jobs processed in a scheduling cycle format: int64</div>
<div class="param">schedule_cycle_per_minute (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of scheduling executions per minute format: int64</div>
<div class="param">schedule_cycle_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of jobs processed in scheduling cycles format: int32</div>
<div class="param">schedule_exit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_schedule_exit_fields">v0.0.43_schedule_exit_fields</a></span>  </div>
<div class="param">schedule_queue_length (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs pending in queue format: int32</div>
<div class="param">jobs_submitted (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs submitted since last reset format: int32</div>
<div class="param">jobs_started (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs started since last reset format: int32</div>
<div class="param">jobs_completed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs completed since last reset format: int32</div>
<div class="param">jobs_canceled (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs canceled since the last reset format: int32</div>
<div class="param">jobs_failed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs failed due to slurmd or other internal issues since last reset format: int32</div>
<div class="param">jobs_pending (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs pending at the time of listed in job_state_ts format: int32</div>
<div class="param">jobs_running (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs running at the time of listed in job_state_ts format: int32</div>
<div class="param">job_states_ts (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">bf_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs started through backfilling since last slurm start format: int32</div>
<div class="param">bf_last_backfilled_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs started through backfilling since last reset format: int32</div>
<div class="param">bf_backfilled_het_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of heterogeneous job components started through backfilling since last Slurm start format: int32</div>
<div class="param">bf_cycle_counter (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of backfill scheduling cycles since last reset format: int32</div>
<div class="param">bf_cycle_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Mean time in microseconds of backfilling scheduling cycles since last reset format: int64</div>
<div class="param">bf_depth_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Mean number of eligible to run jobs processed during all backfilling scheduling cycles since last reset format: int64</div>
<div class="param">bf_depth_mean_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> The subset of Depth Mean that the backfill scheduler attempted to schedule format: int64</div>
<div class="param">bf_cycle_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time in microseconds of backfilling scheduling cycles since last reset format: int64</div>
<div class="param">bf_cycle_last (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Execution time in microseconds of last backfill scheduling cycle format: int32</div>
<div class="param">bf_cycle_max (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Execution time in microseconds of longest backfill scheduling cycle format: int32</div>
<div class="param">bf_exit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_bf_exit_fields">v0.0.43_bf_exit_fields</a></span>  </div>
<div class="param">bf_last_depth (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of processed jobs during last backfilling scheduling cycle format: int32</div>
<div class="param">bf_last_depth_try (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of processed jobs during last backfilling scheduling cycle that had a chance to start using available resources format: int32</div>
<div class="param">bf_depth_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of jobs processed during all backfilling scheduling cycles since last reset format: int32</div>
<div class="param">bf_depth_try_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Subset of bf_depth_sum that the backfill scheduler attempted to schedule format: int32</div>
<div class="param">bf_queue_len (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of jobs pending to be processed by backfilling algorithm format: int32</div>
<div class="param">bf_queue_len_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Mean number of jobs pending to be processed by backfilling algorithm format: int64</div>
<div class="param">bf_queue_len_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of jobs pending to be processed by backfilling algorithm since last reset format: int32</div>
<div class="param">bf_table_size (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of different time slots tested by the backfill scheduler in its last iteration format: int32</div>
<div class="param">bf_table_size_sum (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of different time slots tested by the backfill scheduler format: int32</div>
<div class="param">bf_table_size_mean (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Mean number of different time slots tested by the backfill scheduler format: int64</div>
<div class="param">bf_when_last_cycle (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">bf_active (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Backfill scheduler currently running </div>
<div class="param">rpcs_by_message_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_msg_rpc_type">array[v0.0.43_stats_msg_rpc_type]</a></span> RPCs by type </div>
<div class="param">rpcs_by_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_msg_rpc_user">array[v0.0.43_stats_msg_rpc_user]</a></span> RPCs by user </div>
<div class="param">pending_rpcs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_msg_rpc_queue">array[v0.0.43_stats_msg_rpc_queue]</a></span> Pending RPCs </div>
<div class="param">pending_rpcs_by_hostlist (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_msg_rpc_dump">array[v0.0.43_stats_msg_rpc_dump]</a></span> Pending RPCs by hostlist </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_msg_rpc_dump"><code>v0.0.43_stats_msg_rpc_dump</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">type_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">message_type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string (Slurm RPC message type) </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_msg_rpc_queue"><code>v0.0.43_stats_msg_rpc_queue</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">type_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">message_type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string (Slurm RPC message type) </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of pending RPCs queued format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_msg_rpc_type"><code>v0.0.43_stats_msg_rpc_type</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">type_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Message type as integer format: int32</div>
<div class="param">message_type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Message type as string (Slurm RPC message type) </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs received format: int32</div>
<div class="param">queued </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs queued format: int32</div>
<div class="param">dropped </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of RPCs dropped format: int64</div>
<div class="param">cycle_last </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs processed within the last RPC queue cycle format: int32</div>
<div class="param">cycle_max </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of RPCs processed within a RPC queue cycle since start format: int32</div>
<div class="param">total_time </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent processing RPC in seconds format: int64</div>
<div class="param">average_time </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_msg_rpc_user"><code>v0.0.43_stats_msg_rpc_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">user_id </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> User ID (numeric) format: int32</div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
<div class="param">count </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs received format: int32</div>
<div class="param">total_time </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent processing RPC in seconds format: int64</div>
<div class="param">average_time </div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_rec"><code>v0.0.43_stats_rec</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> When data collection started (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">rollups (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_rollup_stats">v0.0.43_rollup_stats</a></span>  </div>
<div class="param">RPCs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_rpc">array[v0.0.43_stats_rpc]</a></span>  </div>
<div class="param">users (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_stats_user">array[v0.0.43_stats_user]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_rpc"><code>v0.0.43_stats_rpc</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">rpc (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> RPC type </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs processed format: int32</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_stats_rpc_time">v0_0_43_stats_rpc_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_stats_user"><code>v0.0.43_stats_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User ID </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of RPCs processed format: int32</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_stats_rpc_time">v0_0_43_stats_rpc_time</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_step"><code>v0.0.43_step</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_time">v0_0_43_step_time</a></span>  </div>
<div class="param">exit_code (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_process_exit_code_verbose">v0.0.43_process_exit_code_verbose</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_nodes">v0_0_43_step_nodes</a></span>  </div>
<div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_tasks">v0_0_43_step_tasks</a></span>  </div>
<div class="param">pid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Deprecated; Process ID </div>
<div class="param">CPU (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_CPU">v0_0_43_step_CPU</a></span>  </div>
<div class="param">kill_request_user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User ID that requested termination of the step </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Current state </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">statistics (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_statistics">v0_0_43_step_statistics</a></span>  </div>
<div class="param">step (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_step">v0_0_43_step_step</a></span>  </div>
<div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_task">v0_0_43_step_task</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_tres">v0_0_43_step_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_tres"><code>v0.0.43_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">type </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES type (CPU, MEM, etc) </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES name (if applicable) </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> ID used in the database format: int32</div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> TRES count (0 if listed generically) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_uint16_no_val_struct"><code>v0.0.43_uint16_no_val_struct</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set; False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite; "set" and "number" will be ignored </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If "set" is True the number will be set with value; otherwise ignore number contents format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_uint32_no_val_struct"><code>v0.0.43_uint32_no_val_struct</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set; False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite; "set" and "number" will be ignored </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> If "set" is True the number will be set with value; otherwise ignore number contents format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_uint64_no_val_struct"><code>v0.0.43_uint64_no_val_struct</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">set (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set; False if number is unset </div>
<div class="param">infinite (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> True if number has been set to infinite; "set" and "number" will be ignored </div>
<div class="param">number (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> If "set" is True the number will be set with value; otherwise ignore number contents format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_update_node_msg"><code>v0.0.43_update_node_msg</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">comment (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment </div>
<div class="param">cpu_bind (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Default method for binding tasks to allocated CPUs format: int32</div>
<div class="param">extra (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary string used for node filtering if extra constraints are enabled </div>
<div class="param">features (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">features_act (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">gres (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Generic resources </div>
<div class="param">address (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">hostname (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> New state to assign to the node </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reason for node being DOWN or DRAINING </div>
<div class="param">reason_uid (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User ID to associate with the reason (needed if user root is sending message) </div>
<div class="param">resume_after (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">topology_str (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Topology </div>
<div class="param">weight (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_user"><code>v0.0.43_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">administrator_level (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> AdminLevel granted to the user </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">associations (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_short">array[v0.0.43_assoc_short]</a></span>  </div>
<div class="param">coordinators (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_coord">array[v0.0.43_coord]</a></span>  </div>
<div class="param">default (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_user_default">v0_0_43_user_default</a></span>  </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags associated with this user </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
<div class="param">old_name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Previous user name </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_wckey">array[v0.0.43_wckey]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_user_short"><code>v0.0.43_user_short</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">adminlevel (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> AdminLevel granted to the user </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">defaultaccount (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default account </div>
<div class="param">defaultwckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default WCKey </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_users_add_cond"><code>v0.0.43_users_add_cond</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounts (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">association (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_rec_set">v0.0.43_assoc_rec_set</a></span>  </div>
<div class="param">clusters (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">partitions (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">users </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">wckeys (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_wckey"><code>v0.0.43_wckey</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accounting (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_accounting">array[v0.0.43_accounting]</a></span>  </div>
<div class="param">cluster </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Cluster name </div>
<div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unique ID for this user-cluster-wckey combination format: int32</div>
<div class="param">name </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> WCKey name </div>
<div class="param">user </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> User name </div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags associated with this WCKey </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0.0.43_wckey_tag_struct"><code>v0.0.43_wckey_tag_struct</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">wckey </div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> WCKey name </div>
<div class="param">flags </div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Active flags </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_accounting_allocated"><code>v0_0_43_accounting_allocated</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Number of seconds allocated format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_default"><code>v0_0_43_assoc_default</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default QOS </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max"><code>v0_0_43_assoc_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_jobs">v0_0_43_assoc_max_jobs</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_tres">v0_0_43_assoc_max_tres</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_per">v0_0_43_assoc_max_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_jobs"><code>v0_0_43_assoc_max_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_jobs_per">v0_0_43_assoc_max_jobs_per</a></span>  </div>
<div class="param">active (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_jobs_per"><code>v0_0_43_assoc_max_jobs_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">submitted (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_per"><code>v0_0_43_assoc_max_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_per_account">v0_0_43_assoc_max_per_account</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_per_account"><code>v0_0_43_assoc_max_per_account</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_tres"><code>v0_0_43_assoc_max_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_tres_group">v0_0_43_assoc_max_tres_group</a></span>  </div>
<div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_tres_minutes">v0_0_43_assoc_max_tres_minutes</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_assoc_max_tres_per">v0_0_43_assoc_max_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_tres_group"><code>v0_0_43_assoc_max_tres_group</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">active (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_tres_minutes"><code>v0_0_43_assoc_max_tres_minutes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_min_tres_per">v0_0_43_qos_limits_min_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_max_tres_per"><code>v0_0_43_assoc_max_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_min"><code>v0_0_43_assoc_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">priority_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_shares_obj_wrap_fairshare"><code>v0_0_43_assoc_shares_obj_wrap_fairshare</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">level (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_assoc_shares_obj_wrap_tres"><code>v0_0_43_assoc_shares_obj_wrap_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">run_seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_shares_uint64_tres">array[v0.0.43_shares_uint64_tres]</a></span>  </div>
<div class="param">group_minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_shares_uint64_tres">array[v0.0.43_shares_uint64_tres]</a></span>  </div>
<div class="param">usage (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_shares_float128_tres">array[v0.0.43_shares_float128_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_cluster_rec_associations"><code>v0_0_43_cluster_rec_associations</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">root (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_assoc_short">v0.0.43_assoc_short</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_cluster_rec_controller"><code>v0_0_43_cluster_rec_controller</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">host (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> ControlHost </div>
<div class="param">port (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> ControlPort format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_cron_entry_line"><code>v0_0_43_cron_entry_line</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Start of this entry in file format: int32</div>
<div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> End of this entry in file format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_instance_time"><code>v0_0_43_instance_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">time_end (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> When the instance will end (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">time_start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> When the instance will start (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_array"><code>v0_0_43_job_array</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Job ID of job array, or 0 if N/A format: int32</div>
<div class="param">limits (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_array_limits">v0_0_43_job_array_limits</a></span>  </div>
<div class="param">task_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">task (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> String expression of task IDs in this record </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_array_limits"><code>v0_0_43_job_array_limits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_array_limits_max">v0_0_43_job_array_limits_max</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_array_limits_max"><code>v0_0_43_job_array_limits_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">running (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_array_limits_max_running">v0_0_43_job_array_limits_max_running</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_array_limits_max_running"><code>v0_0_43_job_array_limits_max_running</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">tasks (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of simultaneously running tasks, 0 if no limit format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_comment"><code>v0_0_43_job_comment</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">administrator (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment made by administrator </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment made by user </div>
<div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Arbitrary comment from slurmctld </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_desc_msg_rlimits"><code>v0_0_43_job_desc_msg_rlimits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">fsize (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">data (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">stack (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">core (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">rss (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">nproc (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">nofile (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">memlock (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">as (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_het"><code>v0_0_43_job_het</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Heterogeneous job ID, if applicable format: int32</div>
<div class="param">job_offset (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_info_power"><code>v0_0_43_job_info_power</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#AnyType">array[oas_any_type_not_mapped]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_mcs"><code>v0_0_43_job_mcs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">label (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Multi-Category Security label on the job </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_required"><code>v0_0_43_job_required</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">CPUs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Minimum number of CPUs required format: int32</div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_res_node_cpus"><code>v0_0_43_job_res_node_cpus</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPUs assigned to job format: int32</div>
<div class="param">used (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of CPUs used by job format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_res_node_memory"><code>v0_0_43_job_res_node_memory</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">used (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total memory (MiB) used by job format: int64</div>
<div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total memory (MiB) allocated to job format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_res_nodes"><code>v0_0_43_job_res_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of allocated nodes format: int32</div>
<div class="param">select_type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Node scheduling selection method </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node(s) allocated to the job </div>
<div class="param">whole (optional)</div><div class="param-desc"><span class="param-type"><a href="#boolean">Boolean</a></span> Whether whole nodes were allocated </div>
<div class="param">allocation (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_job_res_node">array[v0.0.43_job_res_node]</a></span> Job resources for a node </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_reservation"><code>v0_0_43_job_reservation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Unique identifier of requested reservation format: int32</div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of reservation to use </div>
<div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Comma-separated list of requested reservation names </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_state"><code>v0_0_43_job_state</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">current (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Current state </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">reason (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Reason for previous Pending or Failed state </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_time"><code>v0_0_43_job_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">elapsed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Elapsed time in seconds format: int32</div>
<div class="param">eligible (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Time when the job became eligible to run (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> End time (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">planned (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Time execution began (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">submission (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Time when the job was submitted (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">suspended (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time in suspended state in seconds format: int32</div>
<div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_time_system">v0_0_43_job_time_system</a></span>  </div>
<div class="param">limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_time_total">v0_0_43_job_time_total</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_job_time_user">v0_0_43_job_time_user</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_time_system"><code>v0_0_43_job_time_system</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> System CPU time used by the job in seconds format: int64</div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> System CPU time used by the job in microseconds format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_time_total"><code>v0_0_43_job_time_total</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Sum of System and User CPU time used by the job in seconds format: int64</div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Sum of System and User CPU time used by the job in microseconds format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_time_user"><code>v0_0_43_job_time_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> User CPU time used by the job in seconds format: int64</div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> User CPU time used by the job in microseconds format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_job_tres"><code>v0_0_43_job_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_kill_jobs_resp_job_error"><code>v0_0_43_kill_jobs_resp_job_error</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">string (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> String error encountered signaling job </div>
<div class="param">code (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Numeric error encountered signaling job format: int32</div>
<div class="param">message (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Error message why signaling job failed </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_kill_jobs_resp_job_federation"><code>v0_0_43_kill_jobs_resp_job_federation</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">sibling (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Name of federation sibling (may be empty for non-federation) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_openapi_meta_client"><code>v0_0_43_openapi_meta_client</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">source (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Client source description </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Client user (if known) </div>
<div class="param">group (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Client group (if known) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_openapi_meta_plugin"><code>v0_0_43_openapi_meta_plugin</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">type (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm plugin type (if applicable) </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm plugin name (if applicable) </div>
<div class="param">data_parser (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm data_parser plugin </div>
<div class="param">accounting_storage (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm accounting plugin </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_openapi_meta_slurm"><code>v0_0_43_openapi_meta_slurm</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">version (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_openapi_meta_slurm_version">v0_0_43_openapi_meta_slurm_version</a></span>  </div>
<div class="param">release (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release string </div>
<div class="param">cluster (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm cluster name </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_openapi_meta_slurm_version"><code>v0_0_43_openapi_meta_slurm_version</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">major (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release major version </div>
<div class="param">micro (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release micro version </div>
<div class="param">minor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Slurm release minor version </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_accounts"><code>v0_0_43_partition_info_accounts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> AllowAccounts - Comma-separated list of accounts which may execute jobs in the partition </div>
<div class="param">deny (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> DenyAccounts - Comma-separated list of accounts which may not execute jobs in the partition </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_cpus"><code>v0_0_43_partition_info_cpus</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">task_binding (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> CpuBind - Default method controlling how tasks are bound to allocated resources format: int32</div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> TotalCPUs - Number of CPUs available in this partition format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_defaults"><code>v0_0_43_partition_info_defaults</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Raw value for DefMemPerCPU or DefMemPerNode format: int64</div>
<div class="param">partition_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">partition_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> JobDefaults - Comma-separated list of job default values (this field is only used to set new defaults) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_groups"><code>v0_0_43_partition_info_groups</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> AllowGroups - Comma-separated list of group names which may execute jobs in this partition </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_maximums"><code>v0_0_43_partition_info_maximums</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">cpus_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">cpus_per_socket (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Raw value for MaxMemPerCPU or MaxMemPerNode format: int64</div>
<div class="param">partition_memory_per_cpu (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">partition_memory_per_node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">shares (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> OverSubscribe - Controls the ability of the partition to execute more than one job at a time on each resource format: int32</div>
<div class="param">oversubscribe (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_partition_info_maximums_oversubscribe">v0_0_43_partition_info_maximums_oversubscribe</a></span>  </div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">over_time_limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_maximums_oversubscribe"><code>v0_0_43_partition_info_maximums_oversubscribe</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Maximum number of jobs allowed to oversubscribe resources format: int32</div>
<div class="param">flags (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Flags applicable to the OverSubscribe setting </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_minimums"><code>v0_0_43_partition_info_minimums</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">nodes (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> MinNodes - Minimum count of nodes which may be allocated to any single job format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_nodes"><code>v0_0_43_partition_info_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed_allocation (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> AllocNodes - Comma-separated list of nodes from which users can submit jobs in the partition </div>
<div class="param">configured (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Nodes - Comma-separated list of nodes which are associated with this partition </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> TotalNodes - Number of nodes available in this partition format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_partition"><code>v0_0_43_partition_info_partition</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">state (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> Current state(s) </div>
        <div class="param-enum-header">Enum:</div>

    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_priority"><code>v0_0_43_partition_info_priority</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job_factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> PriorityJobFactor - Partition factor used by priority/multifactor plugin in calculating job priority format: int32</div>
<div class="param">tier (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> PriorityTier - Controls the order in which the scheduler evaluates jobs from different partitions format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_qos"><code>v0_0_43_partition_info_qos</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">allowed (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> AllowQOS - Comma-separated list of Qos which may execute jobs in the partition </div>
<div class="param">deny (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> DenyQOS - Comma-separated list of Qos which may not execute jobs in the partition </div>
<div class="param">assigned (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> QOS - QOS name containing limits that will apply to all jobs in this partition </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_timeouts"><code>v0_0_43_partition_info_timeouts</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">resume (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">suspend (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_partition_info_tres"><code>v0_0_43_partition_info_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">billing_weights (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRESBillingWeights - Billing weights of each tracked TRES type that will be used in calculating the usage of a job </div>
<div class="param">configured (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> TRES - Number of each applicable TRES type available in this partition </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_process_exit_code_verbose_signal"><code>v0_0_43_process_exit_code_verbose_signal</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint16_no_val_struct">v0.0.43_uint16_no_val_struct</a></span>  </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Signal sent to process (name) </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits"><code>v0_0_43_qos_limits</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">grace_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> GraceTime - Preemption grace time in seconds to be extended to a job which has been selected for preemption format: int32</div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max">v0_0_43_qos_limits_max</a></span>  </div>
<div class="param">factor (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_float64_no_val_struct">v0.0.43_float64_no_val_struct</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_min">v0_0_43_qos_limits_min</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max"><code>v0_0_43_qos_limits_max</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">active_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_active_jobs">v0_0_43_qos_limits_max_active_jobs</a></span>  </div>
<div class="param">jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_jobs">v0_0_43_qos_limits_max_jobs</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_tres">v0_0_43_qos_limits_max_tres</a></span>  </div>
<div class="param">wall_clock (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_wall_clock">v0_0_43_qos_limits_max_wall_clock</a></span>  </div>
<div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_jobs_active_jobs">v0_0_43_qos_limits_max_jobs_active_jobs</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_active_jobs"><code>v0_0_43_qos_limits_max_active_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">accruing (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_jobs"><code>v0_0_43_qos_limits_max_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">active_jobs (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_jobs_active_jobs">v0_0_43_qos_limits_max_jobs_active_jobs</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_jobs_active_jobs_per">v0_0_43_qos_limits_max_jobs_active_jobs_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_jobs_active_jobs"><code>v0_0_43_qos_limits_max_jobs_active_jobs</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_jobs_active_jobs_per">v0_0_43_qos_limits_max_jobs_active_jobs_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_jobs_active_jobs_per"><code>v0_0_43_qos_limits_max_jobs_active_jobs_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_tres"><code>v0_0_43_qos_limits_max_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">minutes (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_tres_minutes">v0_0_43_qos_limits_max_tres_minutes</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_tres_per">v0_0_43_qos_limits_max_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_tres_minutes"><code>v0_0_43_qos_limits_max_tres_minutes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_tres_minutes_per">v0_0_43_qos_limits_max_tres_minutes_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_tres_minutes_per"><code>v0_0_43_qos_limits_max_tres_minutes_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_tres_per"><code>v0_0_43_qos_limits_max_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">node (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_wall_clock"><code>v0_0_43_qos_limits_max_wall_clock</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_max_wall_clock_per">v0_0_43_qos_limits_max_wall_clock_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_max_wall_clock_per"><code>v0_0_43_qos_limits_max_wall_clock_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">qos (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_min"><code>v0_0_43_qos_limits_min</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">priority_threshold (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">tres (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_min_tres">v0_0_43_qos_limits_min_tres</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_min_tres"><code>v0_0_43_qos_limits_min_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">per (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_qos_limits_min_tres_per">v0_0_43_qos_limits_min_tres_per</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_limits_min_tres_per"><code>v0_0_43_qos_limits_min_tres_per</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">job (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_qos_preempt"><code>v0_0_43_qos_preempt</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
<div class="param">mode (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span> PreemptMode - Mechanism used to preempt jobs or enable gang scheduling </div>
        <div class="param-enum-header">Enum:</div>

<div class="param">exempt_time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_reservation_info_purge_completed"><code>v0_0_43_reservation_info_purge_completed</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_rollup_stats_daily"><code>v0_0_43_rollup_stats_daily</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of daily rollups since last_run format: int32</div>
<div class="param">last_run (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Last time daily rollup ran (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">duration (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_rollup_stats_daily_duration">v0_0_43_rollup_stats_daily_duration</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_rollup_stats_daily_duration"><code>v0_0_43_rollup_stats_daily_duration</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">last (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent doing daily daily rollup (seconds) format: int64</div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Longest daily rollup time (seconds) format: int64</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent doing daily rollups (seconds) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_rollup_stats_hourly"><code>v0_0_43_rollup_stats_hourly</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of hourly rollups since last_run format: int32</div>
<div class="param">last_run (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Last time hourly rollup ran (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">duration (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_rollup_stats_hourly_duration">v0_0_43_rollup_stats_hourly_duration</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_rollup_stats_hourly_duration"><code>v0_0_43_rollup_stats_hourly_duration</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">last (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent doing last daily rollup (seconds) format: int64</div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Longest hourly rollup time (seconds) format: int64</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent doing hourly rollups (seconds) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_rollup_stats_monthly"><code>v0_0_43_rollup_stats_monthly</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of monthly rollups since last_run format: int32</div>
<div class="param">last_run (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Last time monthly rollup ran (UNIX timestamp) (UNIX timestamp or time string recognized by Slurm (e.g., '[MM/DD[/YY]-]HH:MM[:SS]')) format: int64</div>
<div class="param">duration (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_rollup_stats_monthly_duration">v0_0_43_rollup_stats_monthly_duration</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_rollup_stats_monthly_duration"><code>v0_0_43_rollup_stats_monthly_duration</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">last (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent doing monthly daily rollup (seconds) format: int64</div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Longest monthly rollup time (seconds) format: int64</div>
<div class="param">time (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total time spent doing monthly rollups (seconds) format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_stats_rpc_time"><code>v0_0_43_stats_rpc_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Average RPC processing time in microseconds format: int64</div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total RPC processing time in microseconds format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_CPU"><code>v0_0_43_step_CPU</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">requested_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_CPU_requested_frequency">v0_0_43_step_CPU_requested_frequency</a></span>  </div>
<div class="param">governor (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Requested CPU frequency governor in kHz </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_CPU_requested_frequency"><code>v0_0_43_step_CPU_requested_frequency</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_nodes"><code>v0_0_43_step_nodes</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Number of nodes in the job step format: int32</div>
<div class="param">range (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Node(s) allocated to the job step </div>
<div class="param">list (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">array[String]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_statistics"><code>v0_0_43_step_statistics</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">CPU (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_statistics_CPU">v0_0_43_step_statistics_CPU</a></span>  </div>
<div class="param">energy (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_statistics_energy">v0_0_43_step_statistics_energy</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_statistics_CPU"><code>v0_0_43_step_statistics_CPU</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">actual_frequency (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Average weighted CPU frequency of all tasks in kHz format: int64</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_statistics_energy"><code>v0_0_43_step_statistics_energy</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">consumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_step"><code>v0_0_43_step_step</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">id (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step ID (Slurm job step ID) </div>
<div class="param">name (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step name </div>
<div class="param">stderr (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stderr file </div>
<div class="param">stdin (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdin file </div>
<div class="param">stdout (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Path to stdout file </div>
<div class="param">stderr_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step stderr with expanded fields </div>
<div class="param">stdin_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step stdin with expanded fields </div>
<div class="param">stdout_expanded (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Step stdout with expanded fields </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_task"><code>v0_0_43_step_task</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">distribution (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> The layout of the step was when it was running </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_tasks"><code>v0_0_43_step_tasks</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">count (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total number of tasks format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_time"><code>v0_0_43_step_time</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">elapsed (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Elapsed time in seconds format: int32</div>
<div class="param">end (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">start (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint64_no_val_struct">v0.0.43_uint64_no_val_struct</a></span>  </div>
<div class="param">suspended (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total time in suspended state in seconds format: int32</div>
<div class="param">system (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_time_system">v0_0_43_step_time_system</a></span>  </div>
<div class="param">limit (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_uint32_no_val_struct">v0.0.43_uint32_no_val_struct</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_time_total">v0_0_43_step_time_total</a></span>  </div>
<div class="param">user (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_time_user">v0_0_43_step_time_user</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_time_system"><code>v0_0_43_step_time_system</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> System CPU time used by the step in seconds format: int64</div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> System CPU time used by the step in microseconds format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_time_total"><code>v0_0_43_step_time_total</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> Total CPU time used by the step in seconds format: int64</div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> Total CPU time used by the step in microseconds format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_time_user"><code>v0_0_43_step_time_user</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">seconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span> User CPU time used by the step in seconds format: int64</div>
<div class="param">microseconds (optional)</div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span> User CPU time used by the step in microseconds format: int32</div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_tres"><code>v0_0_43_step_tres</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">requested (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_tres_requested">v0_0_43_step_tres_requested</a></span>  </div>
<div class="param">consumed (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0_0_43_step_tres_consumed">v0_0_43_step_tres_consumed</a></span>  </div>
<div class="param">allocated (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_tres_consumed"><code>v0_0_43_step_tres_consumed</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_step_tres_requested"><code>v0_0_43_step_tres_requested</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">max (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">min (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">average (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
<div class="param">total (optional)</div><div class="param-desc"><span class="param-type"><a href="#v0.0.43_tres">array[v0.0.43_tres]</a></span>  </div>
    </div>  <!-- field-items -->
  </div>
  <div class="model">
    <h3><a name="v0_0_43_user_default"><code>v0_0_43_user_default</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class="model-description"></div>
    <div class="field-items">
      <div class="param">account (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default account </div>
<div class="param">wckey (optional)</div><div class="param-desc"><span class="param-type"><a href="#string">String</a></span> Default WCKey </div>
    </div>  <!-- field-items -->
  </div>


</body> <!--#include virtual="footer.txt"-->
