<!--#include virtual="header.txt"-->

<h1><a name="top">External Sensors Plugin API (ExtSensorsType)</a></h1>

<h2> Overview</h2>
<p> This document describe. Slurm external sensors plugins and the API that
defines them. It is intended as a resource to programmers wishing to write
their own Slurm external sensors plugins.

<p>Slurm external sensors plugins must conform to the
Slurm Plugin API with the following specifications:

<p><span class="commandline">const char
plugin_name[]="<i>full&nbsp;text&nbsp;name</i>"</span>
<p style="margin-left:.2in">
A free-formatted ASCII text string that identifies the plugin.

<p><span class="commandline">const char
plugin_type[]="<i>major/minor</i>"</span><br>
<p style="margin-left:.2in">
The major type must be &quot;ext_sensors.&quot;
The minor type can be any suitable name
for the type of external sensors. We currently use
<ul>
<li><b>none</b> &mdash; No external sensors data is collected.
<li><b>rrd</b> &mdash; Gets external sensors data from the
RRD database.
</ul>

<p><span class="commandline">const uint32_t plugin_version</span><br>
If specified, identifies the version of Slurm used to build this plugin and
any attempt to load the plugin from a different version of Slurm will result
in an error.
If not specified, then the plugin may be loaded by Slurm commands and
daemons from any version, however this may result in difficult to diagnose
failures due to changes in the arguments to plugin functions or changes
in other Slurm functions used by the plugin.</p>

<p>The programmer is urged to study
<span class="commandline">src/plugins/ext_sensors/rrd</span> and
<span class="commandline">src/common/slurm_ext_sensors.c</span>
for a sample implementation of a Slurm external sensors plugin.

<h2>API Functions</h2>
<p>All of the following functions are required. Functions which are not
implemented must be stubbed.

<p class="commandline"> int init (void)
<p style="margin-left:.2in"><b>Description</b>:<br>
  Called when the plugin is loaded, before any other functions are
  called. Put global initialization here.
<p style="margin-left:.2in"><b>Returns</b>: <br>
  <span class="commandline">SLURM_SUCCESS</span> on success, or<br>
  <span class="commandline">SLURM_ERROR</span> on failure.</p>

<p class="commandline"> void fini (void)
<p style="margin-left:.2in"><b>Description</b>:<br>
  Called when the plugin is removed. Clear any allocated storage here.
<p style="margin-left:.2in"><b>Returns</b>: None.</p>

<p><b>Note</b>: These init and fini functions are not the same as those
described in the <span class="commandline">dlopen (3)</span> system library.
The C run-time system co-opts those symbols for its own initialization.
The system <span class="commandline">_init()</span> is called before the Slurm
<span class="commandline">init()</span>, and the Slurm
<span class="commandline">fini()</span> is called before the system's
<span class="commandline">_fini()</span>.</p>

<p class="commandline">extern int ext_sensors_read_conf(void)
<p style="margin-left:.2in"><b>Description</b>:<br>
Reads the external sensors plugin configuration file (ext_sensors.conf)
and populates the configuration structure.
Called by the slurmctld daemon.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">extern int ext_sensors_free_conf(void)
<p style="margin-left:.2in"><b>Description</b>:<br>
Frees the memory allocated for the external sensors configuration.
Called by the slurmctld daemon.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">extern int ext_sensors_p_update_component_data(void)
<p style="margin-left:.2in"><b>Description</b>:<br>
Updates external sensors data for data types and component types as configured
in ext_sensors.conf.
Called by the slurmctld daemon.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> None</span>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">extern int ext_sensors_p_get_stepstartdata(step_record_t *step_rec)
<p style="margin-left:.2in"><b>Description</b>:<br>
Sets external sensors data in the step record when a job step starts.
Called by slurmctld.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> step_rec</span> (input) pointer to step record.<br>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<p class="commandline">extern int ext_sensors_p_get_stependdata(step_record_t *step_rec)
<p style="margin-left:.2in"><b>Description</b>:<br>
Sets external sensors data in the step record when a job step ends.
Called by slurmctld.
<p style="margin-left:.2in"><b>Arguments</b>: <br>
<span class="commandline"> step_rec</span> (input) pointer to step record.<br>
<p style="margin-left:.2in"><b>Returns</b>: <br>
<span class="commandline">SLURM_SUCCESS</span> on success, or<br>
<span class="commandline">SLURM_ERROR</span> on failure.

<h2>Parameters</h2>
<p>These parameters can be used in the slurm.conf to configure the
plugin and the frequency at which to gather external sensors data.</p>
<dl>
<dt><span class="commandline">ExtSensorsType</span>
<dd>Specifies which external sensors plugin should be used.
<dt><span class="commandline">ExtSensorsFreq</span>
<dd>Time interval between pollings in seconds.
</dl>>


<p style="text-align:center;">Last modified 23 October 2019</p>

<!--#include virtual="footer.txt"-->
